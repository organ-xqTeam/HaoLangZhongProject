2019-07-08 09:12:45.595 DEBUG 12160 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.product_count AS "productCount", a.total_price AS "totalPrice", a.logistics_price AS "logisticsPrice", a.discount_price AS "discountPrice", a.really_price AS "reallyPrice", a.pay_channel AS "payChannel", a.out_trade_no AS "outTradeNo", a.create_date AS "createDate", a.update_date AS "updateDate", a.create_by AS "createBy", a.update_by AS "updateBy", a.pay_date AS "payDate", a.user_id AS "userId", a.address_id AS "addressId", a.logistics_id AS "logisticsId", a.delivery_date AS "deliveryDate", a.del_flag AS "delFlag", a.delivery_name AS "deliveryName", a.delivery_address AS "deliveryAddress", a.delivery_phone AS "deliveryPhone", a.total_count AS "totalCount", a.trade_no AS "tradeNo" FROM sys_order a WHERE a.order_no = #{sqlMap.where#order_no#EQ1} ORDER BY a.update_date DESC
2019-07-08 09:12:45.959 DEBUG 12160 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:12:45.962 DEBUG 12160 [nio-8980-exec-2] [c.j.modules.app.dao.OrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.product_count AS "productCount", a.total_price AS "totalPrice", a.logistics_price AS "logisticsPrice", a.discount_price AS "discountPrice", a.really_price AS "reallyPrice", a.pay_channel AS "payChannel", a.out_trade_no AS "outTradeNo", a.create_date AS "createDate", a.update_date AS "updateDate", a.create_by AS "createBy", a.update_by AS "updateBy", a.pay_date AS "payDate", a.user_id AS "userId", a.address_id AS "addressId", a.logistics_id AS "logisticsId", a.delivery_date AS "deliveryDate", a.del_flag AS "delFlag", a.delivery_name AS "deliveryName", a.delivery_address AS "deliveryAddress", a.delivery_phone AS "deliveryPhone", a.total_count AS "totalCount", a.trade_no AS "tradeNo" FROM sys_order a WHERE a.order_no = ? ORDER BY a.update_date DESC 
2019-07-08 09:12:45.968 DEBUG 12160 [nio-8980-exec-2] [c.j.modules.app.dao.OrderDao.findList  ] - ==> Parameters: 070809124566901(String)
2019-07-08 09:12:45.996 DEBUG 12160 [nio-8980-exec-2] [c.j.modules.app.dao.OrderDao.findList  ] - <==      Total: 0
2019-07-08 09:12:46.029 DEBUG 12160 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 10毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.order_no = #{sqlMap.where#order_no#EQ1} ORDER BY a.create_date DESC
2019-07-08 09:12:46.031 DEBUG 12160 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:12:46.031 DEBUG 12160 [nio-8980-exec-2] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.order_no = ? ORDER BY a.create_date DESC 
2019-07-08 09:12:46.032 DEBUG 12160 [nio-8980-exec-2] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==> Parameters: 070809124566901(String)
2019-07-08 09:12:46.060 DEBUG 12160 [nio-8980-exec-2] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - <==      Total: 0
2019-07-08 09:12:46.062 DEBUG 12160 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.order_no = #{sqlMap.where#order_no#EQ1} ORDER BY a.create_date DESC
2019-07-08 09:12:46.062 DEBUG 12160 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:12:46.063 DEBUG 12160 [nio-8980-exec-2] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.order_no = ? ORDER BY a.create_date DESC 
2019-07-08 09:12:46.064 DEBUG 12160 [nio-8980-exec-2] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==> Parameters: 070809124566901(String)
2019-07-08 09:12:46.091 DEBUG 12160 [nio-8980-exec-2] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - <==      Total: 0
2019-07-08 09:12:46.103 DEBUG 12160 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag" FROM sys_member_order a WHERE a.order_no = #{sqlMap.where#order_no#EQ1} ORDER BY a.update_date DESC
2019-07-08 09:12:46.104 DEBUG 12160 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:12:46.105 DEBUG 12160 [nio-8980-exec-2] [c.j.m.app.dao.MemberOrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag" FROM sys_member_order a WHERE a.order_no = ? ORDER BY a.update_date DESC 
2019-07-08 09:12:46.113 DEBUG 12160 [nio-8980-exec-2] [c.j.m.app.dao.MemberOrderDao.findList  ] - ==> Parameters: 070809124566901(String)
2019-07-08 09:12:46.139 DEBUG 12160 [nio-8980-exec-2] [c.j.m.app.dao.MemberOrderDao.findList  ] - <==      Total: 1
2019-07-08 09:12:46.152 DEBUG 12160 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", a.doctor_user_id AS "doctorUserId" FROM sys_doctor_register_order a WHERE a.order_no = #{sqlMap.where#order_no#EQ1} ORDER BY a.update_date DESC
2019-07-08 09:12:46.153 DEBUG 12160 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:12:46.153 DEBUG 12160 [nio-8980-exec-2] [c.j.m.a.d.D.findList                   ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", a.doctor_user_id AS "doctorUserId" FROM sys_doctor_register_order a WHERE a.order_no = ? ORDER BY a.update_date DESC 
2019-07-08 09:12:46.154 DEBUG 12160 [nio-8980-exec-2] [c.j.m.a.d.D.findList                   ] - ==> Parameters: 070809124566901(String)
2019-07-08 09:12:46.180 DEBUG 12160 [nio-8980-exec-2] [c.j.m.a.d.D.findList                   ] - <==      Total: 0
2019-07-08 09:12:46.209 DEBUG 12160 [nio-8980-exec-2] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE sys_member_order SET `order_no` = #{orderNo}, `order_status` = #{orderStatus}, `total_price` = #{totalPrice}, `userid` = #{userid}, `update_date` = #{updateDate}, `out_trade_no` = #{outTradeNo}, `del_flag` = #{delFlag} WHERE `id` = #{id}
2019-07-08 09:12:46.209 DEBUG 12160 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will be managed by Spring
2019-07-08 09:12:46.209 DEBUG 12160 [nio-8980-exec-2] [c.j.m.app.dao.MemberOrderDao.update    ] - ==>  Preparing: UPDATE sys_member_order SET `order_no` = ?, `order_status` = ?, `total_price` = ?, `userid` = ?, `update_date` = ?, `out_trade_no` = ?, `del_flag` = ? WHERE `id` = ? 
2019-07-08 09:12:46.210 DEBUG 12160 [nio-8980-exec-2] [c.j.m.app.dao.MemberOrderDao.update    ] - ==> Parameters: 070809124566901(String), 0(String), 119(String), 32c6e1204fad11e9b780fa163e609e56(String), 2019-07-08 09:12:46.0(Timestamp), 201907089124400000(String), 0(String), 1148037170922598400(String)
2019-07-08 09:12:46.260 DEBUG 12160 [nio-8980-exec-2] [c.j.m.app.dao.MemberOrderDao.update    ] - <==    Updates: 1
2019-07-08 09:18:45.532 DEBUG 12160 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.product_count AS "productCount", a.total_price AS "totalPrice", a.logistics_price AS "logisticsPrice", a.discount_price AS "discountPrice", a.really_price AS "reallyPrice", a.pay_channel AS "payChannel", a.out_trade_no AS "outTradeNo", a.create_date AS "createDate", a.update_date AS "updateDate", a.create_by AS "createBy", a.update_by AS "updateBy", a.pay_date AS "payDate", a.user_id AS "userId", a.address_id AS "addressId", a.logistics_id AS "logisticsId", a.delivery_date AS "deliveryDate", a.del_flag AS "delFlag", a.delivery_name AS "deliveryName", a.delivery_address AS "deliveryAddress", a.delivery_phone AS "deliveryPhone", a.total_count AS "totalCount", a.trade_no AS "tradeNo" FROM sys_order a WHERE a.order_no = #{sqlMap.where#order_no#EQ1} ORDER BY a.update_date DESC
2019-07-08 09:18:45.574 DEBUG 12160 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:18:45.575 DEBUG 12160 [nio-8980-exec-4] [c.j.modules.app.dao.OrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.product_count AS "productCount", a.total_price AS "totalPrice", a.logistics_price AS "logisticsPrice", a.discount_price AS "discountPrice", a.really_price AS "reallyPrice", a.pay_channel AS "payChannel", a.out_trade_no AS "outTradeNo", a.create_date AS "createDate", a.update_date AS "updateDate", a.create_by AS "createBy", a.update_by AS "updateBy", a.pay_date AS "payDate", a.user_id AS "userId", a.address_id AS "addressId", a.logistics_id AS "logisticsId", a.delivery_date AS "deliveryDate", a.del_flag AS "delFlag", a.delivery_name AS "deliveryName", a.delivery_address AS "deliveryAddress", a.delivery_phone AS "deliveryPhone", a.total_count AS "totalCount", a.trade_no AS "tradeNo" FROM sys_order a WHERE a.order_no = ? ORDER BY a.update_date DESC 
2019-07-08 09:18:45.575 DEBUG 12160 [nio-8980-exec-4] [c.j.modules.app.dao.OrderDao.findList  ] - ==> Parameters: 070809184699901(String)
2019-07-08 09:18:45.601 DEBUG 12160 [nio-8980-exec-4] [c.j.modules.app.dao.OrderDao.findList  ] - <==      Total: 0
2019-07-08 09:18:45.604 DEBUG 12160 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.order_no = #{sqlMap.where#order_no#EQ1} ORDER BY a.create_date DESC
2019-07-08 09:18:45.605 DEBUG 12160 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:18:45.606 DEBUG 12160 [nio-8980-exec-4] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.order_no = ? ORDER BY a.create_date DESC 
2019-07-08 09:18:45.607 DEBUG 12160 [nio-8980-exec-4] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==> Parameters: 070809184699901(String)
2019-07-08 09:18:45.636 DEBUG 12160 [nio-8980-exec-4] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - <==      Total: 0
2019-07-08 09:18:45.639 DEBUG 12160 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.order_no = #{sqlMap.where#order_no#EQ1} ORDER BY a.create_date DESC
2019-07-08 09:18:45.640 DEBUG 12160 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:18:45.640 DEBUG 12160 [nio-8980-exec-4] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.order_no = ? ORDER BY a.create_date DESC 
2019-07-08 09:18:45.641 DEBUG 12160 [nio-8980-exec-4] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==> Parameters: 070809184699901(String)
2019-07-08 09:18:45.668 DEBUG 12160 [nio-8980-exec-4] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - <==      Total: 0
2019-07-08 09:18:45.669 DEBUG 12160 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag" FROM sys_member_order a WHERE a.order_no = #{sqlMap.where#order_no#EQ1} ORDER BY a.update_date DESC
2019-07-08 09:18:45.669 DEBUG 12160 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:18:45.670 DEBUG 12160 [nio-8980-exec-4] [c.j.m.app.dao.MemberOrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag" FROM sys_member_order a WHERE a.order_no = ? ORDER BY a.update_date DESC 
2019-07-08 09:18:45.670 DEBUG 12160 [nio-8980-exec-4] [c.j.m.app.dao.MemberOrderDao.findList  ] - ==> Parameters: 070809184699901(String)
2019-07-08 09:18:45.710 DEBUG 12160 [nio-8980-exec-4] [c.j.m.app.dao.MemberOrderDao.findList  ] - <==      Total: 1
2019-07-08 09:18:45.711 DEBUG 12160 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", a.doctor_user_id AS "doctorUserId" FROM sys_doctor_register_order a WHERE a.order_no = #{sqlMap.where#order_no#EQ1} ORDER BY a.update_date DESC
2019-07-08 09:18:45.712 DEBUG 12160 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:18:45.713 DEBUG 12160 [nio-8980-exec-4] [c.j.m.a.d.D.findList                   ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", a.doctor_user_id AS "doctorUserId" FROM sys_doctor_register_order a WHERE a.order_no = ? ORDER BY a.update_date DESC 
2019-07-08 09:18:45.714 DEBUG 12160 [nio-8980-exec-4] [c.j.m.a.d.D.findList                   ] - ==> Parameters: 070809184699901(String)
2019-07-08 09:18:45.740 DEBUG 12160 [nio-8980-exec-4] [c.j.m.a.d.D.findList                   ] - <==      Total: 0
2019-07-08 09:18:45.765 DEBUG 12160 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE sys_member_order SET `order_no` = #{orderNo}, `order_status` = #{orderStatus}, `total_price` = #{totalPrice}, `userid` = #{userid}, `update_date` = #{updateDate}, `out_trade_no` = #{outTradeNo}, `del_flag` = #{delFlag} WHERE `id` = #{id}
2019-07-08 09:18:45.766 DEBUG 12160 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will be managed by Spring
2019-07-08 09:18:45.766 DEBUG 12160 [nio-8980-exec-4] [c.j.m.app.dao.MemberOrderDao.update    ] - ==>  Preparing: UPDATE sys_member_order SET `order_no` = ?, `order_status` = ?, `total_price` = ?, `userid` = ?, `update_date` = ?, `out_trade_no` = ?, `del_flag` = ? WHERE `id` = ? 
2019-07-08 09:18:45.767 DEBUG 12160 [nio-8980-exec-4] [c.j.m.app.dao.MemberOrderDao.update    ] - ==> Parameters: 070809184699901(String), 0(String), 119(String), 32c6e1204fad11e9b780fa163e609e56(String), 2019-07-08 09:18:47.0(Timestamp), 201907089184500001(String), 0(String), 1148038686312050688(String)
2019-07-08 09:18:45.816 DEBUG 12160 [nio-8980-exec-4] [c.j.m.app.dao.MemberOrderDao.update    ] - <==    Updates: 1
2019-07-08 09:18:53.322 DEBUG 12160 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 5毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.product_count AS "productCount", a.total_price AS "totalPrice", a.logistics_price AS "logisticsPrice", a.discount_price AS "discountPrice", a.really_price AS "reallyPrice", a.pay_channel AS "payChannel", a.out_trade_no AS "outTradeNo", a.create_date AS "createDate", a.update_date AS "updateDate", a.create_by AS "createBy", a.update_by AS "updateBy", a.pay_date AS "payDate", a.user_id AS "userId", a.address_id AS "addressId", a.logistics_id AS "logisticsId", a.delivery_date AS "deliveryDate", a.del_flag AS "delFlag", a.delivery_name AS "deliveryName", a.delivery_address AS "deliveryAddress", a.delivery_phone AS "deliveryPhone", a.total_count AS "totalCount", a.trade_no AS "tradeNo" FROM sys_order a WHERE a.out_trade_no = #{sqlMap.where#out_trade_no#EQ1} ORDER BY a.update_date DESC
2019-07-08 09:18:53.325 DEBUG 12160 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:18:53.327 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.app.dao.OrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.product_count AS "productCount", a.total_price AS "totalPrice", a.logistics_price AS "logisticsPrice", a.discount_price AS "discountPrice", a.really_price AS "reallyPrice", a.pay_channel AS "payChannel", a.out_trade_no AS "outTradeNo", a.create_date AS "createDate", a.update_date AS "updateDate", a.create_by AS "createBy", a.update_by AS "updateBy", a.pay_date AS "payDate", a.user_id AS "userId", a.address_id AS "addressId", a.logistics_id AS "logisticsId", a.delivery_date AS "deliveryDate", a.del_flag AS "delFlag", a.delivery_name AS "deliveryName", a.delivery_address AS "deliveryAddress", a.delivery_phone AS "deliveryPhone", a.total_count AS "totalCount", a.trade_no AS "tradeNo" FROM sys_order a WHERE a.out_trade_no = ? ORDER BY a.update_date DESC 
2019-07-08 09:18:53.328 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.app.dao.OrderDao.findList  ] - ==> Parameters: 201907089184500001(String)
2019-07-08 09:18:53.355 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.app.dao.OrderDao.findList  ] - <==      Total: 0
2019-07-08 09:18:53.357 DEBUG 12160 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.out_trade_no = #{sqlMap.where#out_trade_no#EQ1} ORDER BY a.create_date DESC
2019-07-08 09:18:53.358 DEBUG 12160 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:18:53.359 DEBUG 12160 [nio-8980-exec-5] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.out_trade_no = ? ORDER BY a.create_date DESC 
2019-07-08 09:18:53.360 DEBUG 12160 [nio-8980-exec-5] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==> Parameters: 201907089184500001(String)
2019-07-08 09:18:53.387 DEBUG 12160 [nio-8980-exec-5] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - <==      Total: 0
2019-07-08 09:18:53.389 DEBUG 12160 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.out_trade_no = #{sqlMap.where#out_trade_no#EQ1} ORDER BY a.create_date DESC
2019-07-08 09:18:53.390 DEBUG 12160 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:18:53.390 DEBUG 12160 [nio-8980-exec-5] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.out_trade_no = ? ORDER BY a.create_date DESC 
2019-07-08 09:18:53.391 DEBUG 12160 [nio-8980-exec-5] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==> Parameters: 201907089184500001(String)
2019-07-08 09:18:53.419 DEBUG 12160 [nio-8980-exec-5] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - <==      Total: 0
2019-07-08 09:18:53.420 DEBUG 12160 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag" FROM sys_member_order a WHERE a.out_trade_no = #{sqlMap.where#out_trade_no#EQ1} ORDER BY a.update_date DESC
2019-07-08 09:18:53.421 DEBUG 12160 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:18:53.422 DEBUG 12160 [nio-8980-exec-5] [c.j.m.app.dao.MemberOrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag" FROM sys_member_order a WHERE a.out_trade_no = ? ORDER BY a.update_date DESC 
2019-07-08 09:18:53.422 DEBUG 12160 [nio-8980-exec-5] [c.j.m.app.dao.MemberOrderDao.findList  ] - ==> Parameters: 201907089184500001(String)
2019-07-08 09:18:53.448 DEBUG 12160 [nio-8980-exec-5] [c.j.m.app.dao.MemberOrderDao.findList  ] - <==      Total: 1
2019-07-08 09:18:53.449 DEBUG 12160 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", a.doctor_user_id AS "doctorUserId" FROM sys_doctor_register_order a WHERE a.out_trade_no = #{sqlMap.where#out_trade_no#EQ1} ORDER BY a.update_date DESC
2019-07-08 09:18:53.450 DEBUG 12160 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:18:53.450 DEBUG 12160 [nio-8980-exec-5] [c.j.m.a.d.D.findList                   ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", a.doctor_user_id AS "doctorUserId" FROM sys_doctor_register_order a WHERE a.out_trade_no = ? ORDER BY a.update_date DESC 
2019-07-08 09:18:53.451 DEBUG 12160 [nio-8980-exec-5] [c.j.m.a.d.D.findList                   ] - ==> Parameters: 201907089184500001(String)
2019-07-08 09:18:53.489 DEBUG 12160 [nio-8980-exec-5] [c.j.m.a.d.D.findList                   ] - <==      Total: 0
2019-07-08 09:18:53.515 DEBUG 12160 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE sys_member_order SET `order_no` = #{orderNo}, `order_status` = #{orderStatus}, `total_price` = #{totalPrice}, `userid` = #{userid}, `update_date` = #{updateDate}, `out_trade_no` = #{outTradeNo}, `pay_date` = #{payDate}, `pay_channel` = #{payChannel}, `del_flag` = #{delFlag} WHERE `id` = #{id}
2019-07-08 09:18:53.515 DEBUG 12160 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will be managed by Spring
2019-07-08 09:18:53.516 DEBUG 12160 [nio-8980-exec-5] [c.j.m.app.dao.MemberOrderDao.update    ] - ==>  Preparing: UPDATE sys_member_order SET `order_no` = ?, `order_status` = ?, `total_price` = ?, `userid` = ?, `update_date` = ?, `out_trade_no` = ?, `pay_date` = ?, `pay_channel` = ?, `del_flag` = ? WHERE `id` = ? 
2019-07-08 09:18:53.516 DEBUG 12160 [nio-8980-exec-5] [c.j.m.app.dao.MemberOrderDao.update    ] - ==> Parameters: 070809184699901(String), 1(String), 119(String), 32c6e1204fad11e9b780fa163e609e56(String), 2019-07-08 09:18:47.0(Timestamp), 201907089184500001(String), 2019-07-08 09:18:53.49(Timestamp), 微信(String), 0(String), 1148038686312050688(String)
2019-07-08 09:18:53.566 DEBUG 12160 [nio-8980-exec-5] [c.j.m.app.dao.MemberOrderDao.update    ] - <==    Updates: 1
2019-07-08 09:18:53.686 DEBUG 12160 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.mobile AS "mobile", a.password AS "password", a.icon AS "icon", a.regtime AS "regtime", a.lastlogin AS "lastlogin", a.islock AS "islock", a.isauthentication AS "isauthentication", a.type AS "type", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.del_flag AS "delFlag", a.nike_name AS "nikeName", a.is_invite AS "isInvite", a.third_id AS "thirdId", a.third_type AS "thirdType", a.third_icon AS "thirdIcon", a.member_lv AS "memberLv", a.member_flag AS "memberFlag", a.member_start AS "memberStart", a.member_end AS "memberEnd" FROM sys_user_info a WHERE a.`id` = #{id}
2019-07-08 09:18:53.687 DEBUG 12160 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will be managed by Spring
2019-07-08 09:18:53.687 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.app.dao.UserInfoDao.get    ] - ==>  Preparing: SELECT a.id AS "id", a.mobile AS "mobile", a.password AS "password", a.icon AS "icon", a.regtime AS "regtime", a.lastlogin AS "lastlogin", a.islock AS "islock", a.isauthentication AS "isauthentication", a.type AS "type", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.del_flag AS "delFlag", a.nike_name AS "nikeName", a.is_invite AS "isInvite", a.third_id AS "thirdId", a.third_type AS "thirdType", a.third_icon AS "thirdIcon", a.member_lv AS "memberLv", a.member_flag AS "memberFlag", a.member_start AS "memberStart", a.member_end AS "memberEnd" FROM sys_user_info a WHERE a.`id` = ? 
2019-07-08 09:18:53.687 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.app.dao.UserInfoDao.get    ] - ==> Parameters: 32c6e1204fad11e9b780fa163e609e56(String)
2019-07-08 09:18:53.729 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.app.dao.UserInfoDao.get    ] - <==      Total: 1
2019-07-08 09:18:53.740 DEBUG 12160 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.user_code AS "userCode", a.login_code AS "loginCode", a.user_name AS "userName", a.password AS "password", a.email AS "email", a.mobile AS "mobile", a.phone AS "phone", a.sex AS "sex", a.avatar AS "avatar", a.sign AS "sign", a.wx_openid AS "wxOpenid", a.mobile_imei AS "mobileImei", a.user_type AS "userType", a.ref_code AS "refCode", a.ref_name AS "refName", a.mgr_type AS "mgrType", a.pwd_security_level AS "pwdSecurityLevel", a.pwd_update_date AS "pwdUpdateDate", a.pwd_update_record AS "pwdUpdateRecord", a.pwd_question AS "pwdQuestion", a.pwd_question_answer AS "pwdQuestionAnswer", a.pwd_question_2 AS "pwdQuestion2", a.pwd_question_answer_2 AS "pwdQuestionAnswer2", a.pwd_question_3 AS "pwdQuestion3", a.pwd_question_answer_3 AS "pwdQuestionAnswer3", a.pwd_quest_update_date AS "pwdQuestUpdateDate", a.last_login_ip AS "lastLoginIp", a.last_login_date AS "lastLoginDate", a.freeze_date AS "freezeDate", a.freeze_cause AS "freezeCause", a.user_weight AS "userWeight", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_user a WHERE a.`user_code` = #{userCode}
2019-07-08 09:18:53.741 DEBUG 12160 [nio-8980-exec-5] [com.jeesite.modules.sys.dao.UserDao.get] - ==>  Preparing: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.user_code AS "userCode", a.login_code AS "loginCode", a.user_name AS "userName", a.password AS "password", a.email AS "email", a.mobile AS "mobile", a.phone AS "phone", a.sex AS "sex", a.avatar AS "avatar", a.sign AS "sign", a.wx_openid AS "wxOpenid", a.mobile_imei AS "mobileImei", a.user_type AS "userType", a.ref_code AS "refCode", a.ref_name AS "refName", a.mgr_type AS "mgrType", a.pwd_security_level AS "pwdSecurityLevel", a.pwd_update_date AS "pwdUpdateDate", a.pwd_update_record AS "pwdUpdateRecord", a.pwd_question AS "pwdQuestion", a.pwd_question_answer AS "pwdQuestionAnswer", a.pwd_question_2 AS "pwdQuestion2", a.pwd_question_answer_2 AS "pwdQuestionAnswer2", a.pwd_question_3 AS "pwdQuestion3", a.pwd_question_answer_3 AS "pwdQuestionAnswer3", a.pwd_quest_update_date AS "pwdQuestUpdateDate", a.last_login_ip AS "lastLoginIp", a.last_login_date AS "lastLoginDate", a.freeze_date AS "freezeDate", a.freeze_cause AS "freezeCause", a.user_weight AS "userWeight", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_user a WHERE a.`user_code` = ? 
2019-07-08 09:18:53.742 DEBUG 12160 [nio-8980-exec-5] [com.jeesite.modules.sys.dao.UserDao.get] - ==> Parameters: system(String)
2019-07-08 09:18:53.769 DEBUG 12160 [nio-8980-exec-5] [com.jeesite.modules.sys.dao.UserDao.get] - <==      Total: 1
2019-07-08 09:18:53.771 DEBUG 12160 [nio-8980-exec-5] [c.j.m.s.dao.RoleDao.findListByUserCode ] - ==>  Preparing: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.role_code AS "roleCode", a.role_name AS "roleName", a.role_type AS "roleType", a.role_sort AS "roleSort", a.is_sys AS "isSys", a.user_type AS "userType", a.data_scope AS "dataScope" FROM js_sys_role a JOIN js_sys_user_role ur ON a.role_code = ur.role_code WHERE a.status = ? AND ur.user_code = ? ORDER BY a.role_sort ASC 
2019-07-08 09:18:53.771 DEBUG 12160 [nio-8980-exec-5] [c.j.m.s.dao.RoleDao.findListByUserCode ] - ==> Parameters: 0(String), system(String)
2019-07-08 09:18:53.797 DEBUG 12160 [nio-8980-exec-5] [c.j.m.s.dao.RoleDao.findListByUserCode ] - <==      Total: 0
2019-07-08 09:18:53.815 DEBUG 12160 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 85毫秒: UPDATE sys_user_info SET `mobile` = #{mobile}, `password` = #{password}, `icon` = #{icon}, `regtime` = #{regtime}, `lastlogin` = #{lastlogin}, `islock` = #{islock}, `isauthentication` = #{isauthentication}, `type` = #{type}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `del_flag` = #{delFlag}, `nike_name` = #{nikeName}, `is_invite` = #{isInvite}, `third_id` = #{thirdId}, `third_type` = #{thirdType}, `member_lv` = #{memberLv}, `member_flag` = #{memberFlag}, `member_start` = #{memberStart}, `member_end` = #{memberEnd} WHERE `id` = #{id}
2019-07-08 09:18:53.816 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.app.dao.UserInfoDao.update ] - ==>  Preparing: UPDATE sys_user_info SET `mobile` = ?, `password` = ?, `icon` = ?, `regtime` = ?, `lastlogin` = ?, `islock` = ?, `isauthentication` = ?, `type` = ?, `update_by` = ?, `update_date` = ?, `del_flag` = ?, `nike_name` = ?, `is_invite` = ?, `third_id` = ?, `third_type` = ?, `member_lv` = ?, `member_flag` = ?, `member_start` = ?, `member_end` = ? WHERE `id` = ? 
2019-07-08 09:18:53.817 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.app.dao.UserInfoDao.update ] - ==> Parameters: 13313368366(String), c4ca4238a0b923820dcc509a6f75849b(String), adba2045552411e9b780fa163e609e56(String), 2019-03-26 17:54:51(String), 2019-07-08 09:18:31(String), 1(String), 1(String), 1(String), system(String), 2019-07-08 09:18:53.815(Timestamp), 0(String), 好名字(String), 0(String), 94F057ECF4B421528923A3D414E63AF7(String), 2(String), 0(String), 1(String), 2019-07-08 09:18:53.73(Timestamp), 2020-07-08 09:18:53.73(Timestamp), 32c6e1204fad11e9b780fa163e609e56(String)
2019-07-08 09:18:53.866 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.app.dao.UserInfoDao.update ] - <==    Updates: 1
2019-07-08 09:28:02.955 DEBUG 12160 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.product_count AS "productCount", a.total_price AS "totalPrice", a.logistics_price AS "logisticsPrice", a.discount_price AS "discountPrice", a.really_price AS "reallyPrice", a.pay_channel AS "payChannel", a.out_trade_no AS "outTradeNo", a.create_date AS "createDate", a.update_date AS "updateDate", a.create_by AS "createBy", a.update_by AS "updateBy", a.pay_date AS "payDate", a.user_id AS "userId", a.address_id AS "addressId", a.logistics_id AS "logisticsId", a.delivery_date AS "deliveryDate", a.del_flag AS "delFlag", a.delivery_name AS "deliveryName", a.delivery_address AS "deliveryAddress", a.delivery_phone AS "deliveryPhone", a.total_count AS "totalCount", a.trade_no AS "tradeNo" FROM sys_order a WHERE a.order_no = #{sqlMap.where#order_no#EQ1} ORDER BY a.update_date DESC
2019-07-08 09:28:02.994 DEBUG 12160 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:28:02.994 DEBUG 12160 [nio-8980-exec-8] [c.j.modules.app.dao.OrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.product_count AS "productCount", a.total_price AS "totalPrice", a.logistics_price AS "logisticsPrice", a.discount_price AS "discountPrice", a.really_price AS "reallyPrice", a.pay_channel AS "payChannel", a.out_trade_no AS "outTradeNo", a.create_date AS "createDate", a.update_date AS "updateDate", a.create_by AS "createBy", a.update_by AS "updateBy", a.pay_date AS "payDate", a.user_id AS "userId", a.address_id AS "addressId", a.logistics_id AS "logisticsId", a.delivery_date AS "deliveryDate", a.del_flag AS "delFlag", a.delivery_name AS "deliveryName", a.delivery_address AS "deliveryAddress", a.delivery_phone AS "deliveryPhone", a.total_count AS "totalCount", a.trade_no AS "tradeNo" FROM sys_order a WHERE a.order_no = ? ORDER BY a.update_date DESC 
2019-07-08 09:28:02.995 DEBUG 12160 [nio-8980-exec-8] [c.j.modules.app.dao.OrderDao.findList  ] - ==> Parameters: 070809280445901(String)
2019-07-08 09:28:03.022 DEBUG 12160 [nio-8980-exec-8] [c.j.modules.app.dao.OrderDao.findList  ] - <==      Total: 0
2019-07-08 09:28:03.024 DEBUG 12160 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.order_no = #{sqlMap.where#order_no#EQ1} ORDER BY a.create_date DESC
2019-07-08 09:28:03.025 DEBUG 12160 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:28:03.025 DEBUG 12160 [nio-8980-exec-8] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.order_no = ? ORDER BY a.create_date DESC 
2019-07-08 09:28:03.060 DEBUG 12160 [nio-8980-exec-8] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==> Parameters: 070809280445901(String)
2019-07-08 09:28:03.093 DEBUG 12160 [nio-8980-exec-8] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - <==      Total: 1
2019-07-08 09:28:03.095 DEBUG 12160 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.order_no = #{sqlMap.where#order_no#EQ1} ORDER BY a.create_date DESC
2019-07-08 09:28:03.095 DEBUG 12160 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:28:03.096 DEBUG 12160 [nio-8980-exec-8] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.order_no = ? ORDER BY a.create_date DESC 
2019-07-08 09:28:03.096 DEBUG 12160 [nio-8980-exec-8] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==> Parameters: 070809280445901(String)
2019-07-08 09:28:03.143 DEBUG 12160 [nio-8980-exec-8] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - <==      Total: 1
2019-07-08 09:28:03.144 DEBUG 12160 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag" FROM sys_member_order a WHERE a.order_no = #{sqlMap.where#order_no#EQ1} ORDER BY a.update_date DESC
2019-07-08 09:28:03.145 DEBUG 12160 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:28:03.145 DEBUG 12160 [nio-8980-exec-8] [c.j.m.app.dao.MemberOrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag" FROM sys_member_order a WHERE a.order_no = ? ORDER BY a.update_date DESC 
2019-07-08 09:28:03.146 DEBUG 12160 [nio-8980-exec-8] [c.j.m.app.dao.MemberOrderDao.findList  ] - ==> Parameters: 070809280445901(String)
2019-07-08 09:28:03.171 DEBUG 12160 [nio-8980-exec-8] [c.j.m.app.dao.MemberOrderDao.findList  ] - <==      Total: 0
2019-07-08 09:28:03.172 DEBUG 12160 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", a.doctor_user_id AS "doctorUserId" FROM sys_doctor_register_order a WHERE a.order_no = #{sqlMap.where#order_no#EQ1} ORDER BY a.update_date DESC
2019-07-08 09:28:03.172 DEBUG 12160 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:28:03.173 DEBUG 12160 [nio-8980-exec-8] [c.j.m.a.d.D.findList                   ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", a.doctor_user_id AS "doctorUserId" FROM sys_doctor_register_order a WHERE a.order_no = ? ORDER BY a.update_date DESC 
2019-07-08 09:28:03.173 DEBUG 12160 [nio-8980-exec-8] [c.j.m.a.d.D.findList                   ] - ==> Parameters: 070809280445901(String)
2019-07-08 09:28:03.198 DEBUG 12160 [nio-8980-exec-8] [c.j.m.a.d.D.findList                   ] - <==      Total: 0
2019-07-08 09:28:03.224 DEBUG 12160 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE sys_tiaoli_order SET `order_no` = #{orderNo}, `order_status` = #{orderStatus}, `count` = #{count}, `total_price` = #{totalPrice}, `come_cost` = #{comeCost}, `docid` = #{docid}, `userid` = #{userid}, `update_date` = #{updateDate}, `out_trade_no` = #{outTradeNo}, `del_flag` = #{delFlag} WHERE `id` = #{id}
2019-07-08 09:28:03.225 DEBUG 12160 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will be managed by Spring
2019-07-08 09:28:03.229 DEBUG 12160 [nio-8980-exec-8] [c.j.m.app.dao.TiaoliOrderDao.update    ] - ==>  Preparing: UPDATE sys_tiaoli_order SET `order_no` = ?, `order_status` = ?, `count` = ?, `total_price` = ?, `come_cost` = ?, `docid` = ?, `userid` = ?, `update_date` = ?, `out_trade_no` = ?, `del_flag` = ? WHERE `id` = ? 
2019-07-08 09:28:03.230 DEBUG 12160 [nio-8980-exec-8] [c.j.m.app.dao.TiaoliOrderDao.update    ] - ==> Parameters: 070809280445901(String), 0(String), 1(String), 1000(String), 1000(String), 0f2067603f1111e99752bcaec5595fa3(String), 32c6e1204fad11e9b780fa163e609e56(String), 2019-07-08 09:28:04.0(Timestamp), 201907089280200002(String), 0(String), 1148041024472952832(String)
2019-07-08 09:28:03.279 DEBUG 12160 [nio-8980-exec-8] [c.j.m.app.dao.TiaoliOrderDao.update    ] - <==    Updates: 1
2019-07-08 09:28:08.393 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.product_count AS "productCount", a.total_price AS "totalPrice", a.logistics_price AS "logisticsPrice", a.discount_price AS "discountPrice", a.really_price AS "reallyPrice", a.pay_channel AS "payChannel", a.out_trade_no AS "outTradeNo", a.create_date AS "createDate", a.update_date AS "updateDate", a.create_by AS "createBy", a.update_by AS "updateBy", a.pay_date AS "payDate", a.user_id AS "userId", a.address_id AS "addressId", a.logistics_id AS "logisticsId", a.delivery_date AS "deliveryDate", a.del_flag AS "delFlag", a.delivery_name AS "deliveryName", a.delivery_address AS "deliveryAddress", a.delivery_phone AS "deliveryPhone", a.total_count AS "totalCount", a.trade_no AS "tradeNo" FROM sys_order a WHERE a.out_trade_no = #{sqlMap.where#out_trade_no#EQ1} ORDER BY a.update_date DESC
2019-07-08 09:28:08.393 DEBUG 12160 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:28:08.394 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.app.dao.OrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.product_count AS "productCount", a.total_price AS "totalPrice", a.logistics_price AS "logisticsPrice", a.discount_price AS "discountPrice", a.really_price AS "reallyPrice", a.pay_channel AS "payChannel", a.out_trade_no AS "outTradeNo", a.create_date AS "createDate", a.update_date AS "updateDate", a.create_by AS "createBy", a.update_by AS "updateBy", a.pay_date AS "payDate", a.user_id AS "userId", a.address_id AS "addressId", a.logistics_id AS "logisticsId", a.delivery_date AS "deliveryDate", a.del_flag AS "delFlag", a.delivery_name AS "deliveryName", a.delivery_address AS "deliveryAddress", a.delivery_phone AS "deliveryPhone", a.total_count AS "totalCount", a.trade_no AS "tradeNo" FROM sys_order a WHERE a.out_trade_no = ? ORDER BY a.update_date DESC 
2019-07-08 09:28:08.394 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.app.dao.OrderDao.findList  ] - ==> Parameters: 201907089280200002(String)
2019-07-08 09:28:08.421 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.app.dao.OrderDao.findList  ] - <==      Total: 0
2019-07-08 09:28:08.423 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.out_trade_no = #{sqlMap.where#out_trade_no#EQ1} ORDER BY a.create_date DESC
2019-07-08 09:28:08.423 DEBUG 12160 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:28:08.424 DEBUG 12160 [nio-8980-exec-9] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.out_trade_no = ? ORDER BY a.create_date DESC 
2019-07-08 09:28:08.425 DEBUG 12160 [nio-8980-exec-9] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==> Parameters: 201907089280200002(String)
2019-07-08 09:28:08.456 DEBUG 12160 [nio-8980-exec-9] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - <==      Total: 1
2019-07-08 09:28:08.457 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.out_trade_no = #{sqlMap.where#out_trade_no#EQ1} ORDER BY a.create_date DESC
2019-07-08 09:28:08.458 DEBUG 12160 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:28:08.459 DEBUG 12160 [nio-8980-exec-9] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.out_trade_no = ? ORDER BY a.create_date DESC 
2019-07-08 09:28:08.459 DEBUG 12160 [nio-8980-exec-9] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==> Parameters: 201907089280200002(String)
2019-07-08 09:28:08.488 DEBUG 12160 [nio-8980-exec-9] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - <==      Total: 1
2019-07-08 09:28:08.489 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag" FROM sys_member_order a WHERE a.out_trade_no = #{sqlMap.where#out_trade_no#EQ1} ORDER BY a.update_date DESC
2019-07-08 09:28:08.490 DEBUG 12160 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:28:08.490 DEBUG 12160 [nio-8980-exec-9] [c.j.m.app.dao.MemberOrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag" FROM sys_member_order a WHERE a.out_trade_no = ? ORDER BY a.update_date DESC 
2019-07-08 09:28:08.490 DEBUG 12160 [nio-8980-exec-9] [c.j.m.app.dao.MemberOrderDao.findList  ] - ==> Parameters: 201907089280200002(String)
2019-07-08 09:28:08.516 DEBUG 12160 [nio-8980-exec-9] [c.j.m.app.dao.MemberOrderDao.findList  ] - <==      Total: 0
2019-07-08 09:28:08.516 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", a.doctor_user_id AS "doctorUserId" FROM sys_doctor_register_order a WHERE a.out_trade_no = #{sqlMap.where#out_trade_no#EQ1} ORDER BY a.update_date DESC
2019-07-08 09:28:08.517 DEBUG 12160 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:28:08.517 DEBUG 12160 [nio-8980-exec-9] [c.j.m.a.d.D.findList                   ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", a.doctor_user_id AS "doctorUserId" FROM sys_doctor_register_order a WHERE a.out_trade_no = ? ORDER BY a.update_date DESC 
2019-07-08 09:28:08.518 DEBUG 12160 [nio-8980-exec-9] [c.j.m.a.d.D.findList                   ] - ==> Parameters: 201907089280200002(String)
2019-07-08 09:28:08.543 DEBUG 12160 [nio-8980-exec-9] [c.j.m.a.d.D.findList                   ] - <==      Total: 0
2019-07-08 09:28:08.569 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE sys_tiaoli_order SET `order_no` = #{orderNo}, `order_status` = #{orderStatus}, `count` = #{count}, `total_price` = #{totalPrice}, `come_cost` = #{comeCost}, `docid` = #{docid}, `userid` = #{userid}, `update_date` = #{updateDate}, `out_trade_no` = #{outTradeNo}, `pay_date` = #{payDate}, `pay_channel` = #{payChannel}, `del_flag` = #{delFlag} WHERE `id` = #{id}
2019-07-08 09:28:08.569 DEBUG 12160 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will be managed by Spring
2019-07-08 09:28:08.570 DEBUG 12160 [nio-8980-exec-9] [c.j.m.app.dao.TiaoliOrderDao.update    ] - ==>  Preparing: UPDATE sys_tiaoli_order SET `order_no` = ?, `order_status` = ?, `count` = ?, `total_price` = ?, `come_cost` = ?, `docid` = ?, `userid` = ?, `update_date` = ?, `out_trade_no` = ?, `pay_date` = ?, `pay_channel` = ?, `del_flag` = ? WHERE `id` = ? 
2019-07-08 09:28:08.572 DEBUG 12160 [nio-8980-exec-9] [c.j.m.app.dao.TiaoliOrderDao.update    ] - ==> Parameters: 070809280445901(String), 1(String), 1(String), 1000(String), 1000(String), 0f2067603f1111e99752bcaec5595fa3(String), 32c6e1204fad11e9b780fa163e609e56(String), 2019-07-08 09:28:04.0(Timestamp), 201907089280200002(String), 2019-07-08 09:28:08.543(Timestamp), 微信(String), 0(String), 1148041024472952832(String)
2019-07-08 09:28:08.621 DEBUG 12160 [nio-8980-exec-9] [c.j.m.app.dao.TiaoliOrderDao.update    ] - <==    Updates: 1
2019-07-08 09:46:48.714 DEBUG 12160 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.product_count AS "productCount", a.total_price AS "totalPrice", a.logistics_price AS "logisticsPrice", a.discount_price AS "discountPrice", a.really_price AS "reallyPrice", a.pay_channel AS "payChannel", a.out_trade_no AS "outTradeNo", a.create_date AS "createDate", a.update_date AS "updateDate", a.create_by AS "createBy", a.update_by AS "updateBy", a.pay_date AS "payDate", a.user_id AS "userId", a.address_id AS "addressId", a.logistics_id AS "logisticsId", a.delivery_date AS "deliveryDate", a.del_flag AS "delFlag", a.delivery_name AS "deliveryName", a.delivery_address AS "deliveryAddress", a.delivery_phone AS "deliveryPhone", a.total_count AS "totalCount", a.trade_no AS "tradeNo" FROM sys_order a WHERE a.order_no = #{sqlMap.where#order_no#EQ1} ORDER BY a.update_date DESC
2019-07-08 09:46:48.744 DEBUG 12160 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:46:48.745 DEBUG 12160 [nio-8980-exec-2] [c.j.modules.app.dao.OrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.product_count AS "productCount", a.total_price AS "totalPrice", a.logistics_price AS "logisticsPrice", a.discount_price AS "discountPrice", a.really_price AS "reallyPrice", a.pay_channel AS "payChannel", a.out_trade_no AS "outTradeNo", a.create_date AS "createDate", a.update_date AS "updateDate", a.create_by AS "createBy", a.update_by AS "updateBy", a.pay_date AS "payDate", a.user_id AS "userId", a.address_id AS "addressId", a.logistics_id AS "logisticsId", a.delivery_date AS "deliveryDate", a.del_flag AS "delFlag", a.delivery_name AS "deliveryName", a.delivery_address AS "deliveryAddress", a.delivery_phone AS "deliveryPhone", a.total_count AS "totalCount", a.trade_no AS "tradeNo" FROM sys_order a WHERE a.order_no = ? ORDER BY a.update_date DESC 
2019-07-08 09:46:48.747 DEBUG 12160 [nio-8980-exec-2] [c.j.modules.app.dao.OrderDao.findList  ] - ==> Parameters: 070809465015401(String)
2019-07-08 09:46:48.781 DEBUG 12160 [nio-8980-exec-2] [c.j.modules.app.dao.OrderDao.findList  ] - <==      Total: 1
2019-07-08 09:46:48.783 DEBUG 12160 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.order_no = #{sqlMap.where#order_no#EQ1} ORDER BY a.create_date DESC
2019-07-08 09:46:48.784 DEBUG 12160 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:46:48.785 DEBUG 12160 [nio-8980-exec-2] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.order_no = ? ORDER BY a.create_date DESC 
2019-07-08 09:46:48.803 DEBUG 12160 [nio-8980-exec-2] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==> Parameters: 070809465015401(String)
2019-07-08 09:46:48.833 DEBUG 12160 [nio-8980-exec-2] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - <==      Total: 0
2019-07-08 09:46:48.836 DEBUG 12160 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.order_no = #{sqlMap.where#order_no#EQ1} ORDER BY a.create_date DESC
2019-07-08 09:46:48.836 DEBUG 12160 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:46:48.837 DEBUG 12160 [nio-8980-exec-2] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.order_no = ? ORDER BY a.create_date DESC 
2019-07-08 09:46:48.839 DEBUG 12160 [nio-8980-exec-2] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==> Parameters: 070809465015401(String)
2019-07-08 09:46:48.867 DEBUG 12160 [nio-8980-exec-2] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - <==      Total: 0
2019-07-08 09:46:48.868 DEBUG 12160 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag" FROM sys_member_order a WHERE a.order_no = #{sqlMap.where#order_no#EQ1} ORDER BY a.update_date DESC
2019-07-08 09:46:48.869 DEBUG 12160 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:46:48.869 DEBUG 12160 [nio-8980-exec-2] [c.j.m.app.dao.MemberOrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag" FROM sys_member_order a WHERE a.order_no = ? ORDER BY a.update_date DESC 
2019-07-08 09:46:48.870 DEBUG 12160 [nio-8980-exec-2] [c.j.m.app.dao.MemberOrderDao.findList  ] - ==> Parameters: 070809465015401(String)
2019-07-08 09:46:48.896 DEBUG 12160 [nio-8980-exec-2] [c.j.m.app.dao.MemberOrderDao.findList  ] - <==      Total: 0
2019-07-08 09:46:48.897 DEBUG 12160 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", a.doctor_user_id AS "doctorUserId" FROM sys_doctor_register_order a WHERE a.order_no = #{sqlMap.where#order_no#EQ1} ORDER BY a.update_date DESC
2019-07-08 09:46:48.897 DEBUG 12160 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:46:48.898 DEBUG 12160 [nio-8980-exec-2] [c.j.m.a.d.D.findList                   ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", a.doctor_user_id AS "doctorUserId" FROM sys_doctor_register_order a WHERE a.order_no = ? ORDER BY a.update_date DESC 
2019-07-08 09:46:48.898 DEBUG 12160 [nio-8980-exec-2] [c.j.m.a.d.D.findList                   ] - ==> Parameters: 070809465015401(String)
2019-07-08 09:46:48.925 DEBUG 12160 [nio-8980-exec-2] [c.j.m.a.d.D.findList                   ] - <==      Total: 0
2019-07-08 09:46:48.969 DEBUG 12160 [nio-8980-exec-2] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 17毫秒: UPDATE sys_order SET `order_no` = #{orderNo}, `order_status` = #{orderStatus}, `product_count` = #{productCount}, `total_price` = #{totalPrice}, `logistics_price` = #{logisticsPrice}, `discount_price` = #{discountPrice}, `really_price` = #{reallyPrice}, `pay_channel` = #{payChannel}, `out_trade_no` = #{outTradeNo}, `update_by` = #{updateBy}, `user_id` = #{userId}, `del_flag` = #{delFlag}, `delivery_name` = #{deliveryName}, `delivery_address` = #{deliveryAddress}, `delivery_phone` = #{deliveryPhone}, `total_count` = #{totalCount} WHERE `id` = #{id}
2019-07-08 09:46:48.970 DEBUG 12160 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will be managed by Spring
2019-07-08 09:46:48.970 DEBUG 12160 [nio-8980-exec-2] [c.j.modules.app.dao.OrderDao.update    ] - ==>  Preparing: UPDATE sys_order SET `order_no` = ?, `order_status` = ?, `product_count` = ?, `total_price` = ?, `logistics_price` = ?, `discount_price` = ?, `really_price` = ?, `pay_channel` = ?, `out_trade_no` = ?, `update_by` = ?, `user_id` = ?, `del_flag` = ?, `delivery_name` = ?, `delivery_address` = ?, `delivery_phone` = ?, `total_count` = ? WHERE `id` = ? 
2019-07-08 09:46:48.971 DEBUG 12160 [nio-8980-exec-2] [c.j.modules.app.dao.OrderDao.update    ] - ==> Parameters: 070809465015401(String), 0(String), 1(String), 500(String), 0(String), 0(String), 500(String), null(String), 201907089464800003(String), system(String), 32c6e1204fad11e9b780fa163e609e56(String), 0(String), 哈哈哈(String), 北京市东八路哈哈哈(String), 13313368366(String), 1(String), 258(String)
2019-07-08 09:46:49.020 DEBUG 12160 [nio-8980-exec-2] [c.j.modules.app.dao.OrderDao.update    ] - <==    Updates: 1
2019-07-08 09:46:54.551 DEBUG 12160 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.product_count AS "productCount", a.total_price AS "totalPrice", a.logistics_price AS "logisticsPrice", a.discount_price AS "discountPrice", a.really_price AS "reallyPrice", a.pay_channel AS "payChannel", a.out_trade_no AS "outTradeNo", a.create_date AS "createDate", a.update_date AS "updateDate", a.create_by AS "createBy", a.update_by AS "updateBy", a.pay_date AS "payDate", a.user_id AS "userId", a.address_id AS "addressId", a.logistics_id AS "logisticsId", a.delivery_date AS "deliveryDate", a.del_flag AS "delFlag", a.delivery_name AS "deliveryName", a.delivery_address AS "deliveryAddress", a.delivery_phone AS "deliveryPhone", a.total_count AS "totalCount", a.trade_no AS "tradeNo" FROM sys_order a WHERE a.out_trade_no = #{sqlMap.where#out_trade_no#EQ1} ORDER BY a.update_date DESC
2019-07-08 09:46:54.552 DEBUG 12160 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:46:54.552 DEBUG 12160 [nio-8980-exec-3] [c.j.modules.app.dao.OrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.product_count AS "productCount", a.total_price AS "totalPrice", a.logistics_price AS "logisticsPrice", a.discount_price AS "discountPrice", a.really_price AS "reallyPrice", a.pay_channel AS "payChannel", a.out_trade_no AS "outTradeNo", a.create_date AS "createDate", a.update_date AS "updateDate", a.create_by AS "createBy", a.update_by AS "updateBy", a.pay_date AS "payDate", a.user_id AS "userId", a.address_id AS "addressId", a.logistics_id AS "logisticsId", a.delivery_date AS "deliveryDate", a.del_flag AS "delFlag", a.delivery_name AS "deliveryName", a.delivery_address AS "deliveryAddress", a.delivery_phone AS "deliveryPhone", a.total_count AS "totalCount", a.trade_no AS "tradeNo" FROM sys_order a WHERE a.out_trade_no = ? ORDER BY a.update_date DESC 
2019-07-08 09:46:54.553 DEBUG 12160 [nio-8980-exec-3] [c.j.modules.app.dao.OrderDao.findList  ] - ==> Parameters: 201907089464800003(String)
2019-07-08 09:46:54.582 DEBUG 12160 [nio-8980-exec-3] [c.j.modules.app.dao.OrderDao.findList  ] - <==      Total: 1
2019-07-08 09:46:54.584 DEBUG 12160 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.out_trade_no = #{sqlMap.where#out_trade_no#EQ1} ORDER BY a.create_date DESC
2019-07-08 09:46:54.586 DEBUG 12160 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:46:54.587 DEBUG 12160 [nio-8980-exec-3] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.out_trade_no = ? ORDER BY a.create_date DESC 
2019-07-08 09:46:54.588 DEBUG 12160 [nio-8980-exec-3] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==> Parameters: 201907089464800003(String)
2019-07-08 09:46:54.616 DEBUG 12160 [nio-8980-exec-3] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - <==      Total: 0
2019-07-08 09:46:54.618 DEBUG 12160 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.out_trade_no = #{sqlMap.where#out_trade_no#EQ1} ORDER BY a.create_date DESC
2019-07-08 09:46:54.618 DEBUG 12160 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:46:54.619 DEBUG 12160 [nio-8980-exec-3] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.out_trade_no = ? ORDER BY a.create_date DESC 
2019-07-08 09:46:54.621 DEBUG 12160 [nio-8980-exec-3] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==> Parameters: 201907089464800003(String)
2019-07-08 09:46:54.648 DEBUG 12160 [nio-8980-exec-3] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - <==      Total: 0
2019-07-08 09:46:54.649 DEBUG 12160 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag" FROM sys_member_order a WHERE a.out_trade_no = #{sqlMap.where#out_trade_no#EQ1} ORDER BY a.update_date DESC
2019-07-08 09:46:54.651 DEBUG 12160 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:46:54.651 DEBUG 12160 [nio-8980-exec-3] [c.j.m.app.dao.MemberOrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag" FROM sys_member_order a WHERE a.out_trade_no = ? ORDER BY a.update_date DESC 
2019-07-08 09:46:54.652 DEBUG 12160 [nio-8980-exec-3] [c.j.m.app.dao.MemberOrderDao.findList  ] - ==> Parameters: 201907089464800003(String)
2019-07-08 09:46:54.677 DEBUG 12160 [nio-8980-exec-3] [c.j.m.app.dao.MemberOrderDao.findList  ] - <==      Total: 0
2019-07-08 09:46:54.679 DEBUG 12160 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", a.doctor_user_id AS "doctorUserId" FROM sys_doctor_register_order a WHERE a.out_trade_no = #{sqlMap.where#out_trade_no#EQ1} ORDER BY a.update_date DESC
2019-07-08 09:46:54.679 DEBUG 12160 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will not be managed by Spring
2019-07-08 09:46:54.681 DEBUG 12160 [nio-8980-exec-3] [c.j.m.a.d.D.findList                   ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", a.doctor_user_id AS "doctorUserId" FROM sys_doctor_register_order a WHERE a.out_trade_no = ? ORDER BY a.update_date DESC 
2019-07-08 09:46:54.682 DEBUG 12160 [nio-8980-exec-3] [c.j.m.a.d.D.findList                   ] - ==> Parameters: 201907089464800003(String)
2019-07-08 09:46:54.707 DEBUG 12160 [nio-8980-exec-3] [c.j.m.a.d.D.findList                   ] - <==      Total: 0
2019-07-08 09:46:54.749 DEBUG 12160 [nio-8980-exec-3] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 16毫秒: UPDATE sys_order SET `order_no` = #{orderNo}, `order_status` = #{orderStatus}, `product_count` = #{productCount}, `total_price` = #{totalPrice}, `logistics_price` = #{logisticsPrice}, `discount_price` = #{discountPrice}, `really_price` = #{reallyPrice}, `pay_channel` = #{payChannel}, `out_trade_no` = #{outTradeNo}, `update_by` = #{updateBy}, `pay_date` = #{payDate}, `user_id` = #{userId}, `del_flag` = #{delFlag}, `delivery_name` = #{deliveryName}, `delivery_address` = #{deliveryAddress}, `delivery_phone` = #{deliveryPhone}, `total_count` = #{totalCount} WHERE `id` = #{id}
2019-07-08 09:46:54.750 DEBUG 12160 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will be managed by Spring
2019-07-08 09:46:54.750 DEBUG 12160 [nio-8980-exec-3] [c.j.modules.app.dao.OrderDao.update    ] - ==>  Preparing: UPDATE sys_order SET `order_no` = ?, `order_status` = ?, `product_count` = ?, `total_price` = ?, `logistics_price` = ?, `discount_price` = ?, `really_price` = ?, `pay_channel` = ?, `out_trade_no` = ?, `update_by` = ?, `pay_date` = ?, `user_id` = ?, `del_flag` = ?, `delivery_name` = ?, `delivery_address` = ?, `delivery_phone` = ?, `total_count` = ? WHERE `id` = ? 
2019-07-08 09:46:54.751 DEBUG 12160 [nio-8980-exec-3] [c.j.modules.app.dao.OrderDao.update    ] - ==> Parameters: 070809465015401(String), 1(String), 1(String), 500(String), 0(String), 0(String), 500(String), 微信(String), 201907089464800003(String), system(String), 2019-07-08 09:46:54.708(Timestamp), 32c6e1204fad11e9b780fa163e609e56(String), 0(String), 哈哈哈(String), 北京市东八路哈哈哈(String), 13313368366(String), 1(String), 258(String)
2019-07-08 09:46:54.800 DEBUG 12160 [nio-8980-exec-3] [c.j.modules.app.dao.OrderDao.update    ] - <==    Updates: 1
2019-07-08 09:46:54.950 DEBUG 12160 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.user_id AS "userId", a.discount_price AS "discountPrice", a.create_date AS "createDate", a.update_date AS "updateDate", a.create_by AS "createBy", a.update_by AS "updateBy", a.remarks AS "remarks", dd.id AS "discountDetail.id", dd.discount_id AS "discountDetail.discountId", dd.remarks AS "discountDetail.remarks", dd.detail_price AS "discountDetail.detailPrice", dd.detail_state AS "discountDetail.detailState", dd.create_date AS "discountDetail.createDate", dd.update_date AS "discountDetail.updateDate", dd.create_by AS "discountDetail.createBy", dd.update_by AS "discountDetail.updateBy", dd.del_flag AS "discountDetail.delFlag" FROM sys_discount a LEFT JOIN sys_discount_detail dd ON a.id = dd.discount_id WHERE a.user_id = #{sqlMap.where#user_id#EQ1} ORDER BY a.update_date DESC
2019-07-08 09:46:54.951 DEBUG 12160 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1641e78b] will be managed by Spring
2019-07-08 09:46:54.952 DEBUG 12160 [nio-8980-exec-3] [c.j.m.app.dao.DiscountDao.findList     ] - ==>  Preparing: SELECT a.id AS "id", a.user_id AS "userId", a.discount_price AS "discountPrice", a.create_date AS "createDate", a.update_date AS "updateDate", a.create_by AS "createBy", a.update_by AS "updateBy", a.remarks AS "remarks", dd.id AS "discountDetail.id", dd.discount_id AS "discountDetail.discountId", dd.remarks AS "discountDetail.remarks", dd.detail_price AS "discountDetail.detailPrice", dd.detail_state AS "discountDetail.detailState", dd.create_date AS "discountDetail.createDate", dd.update_date AS "discountDetail.updateDate", dd.create_by AS "discountDetail.createBy", dd.update_by AS "discountDetail.updateBy", dd.del_flag AS "discountDetail.delFlag" FROM sys_discount a LEFT JOIN sys_discount_detail dd ON a.id = dd.discount_id WHERE a.user_id = ? ORDER BY a.update_date DESC 
2019-07-08 09:46:54.953 DEBUG 12160 [nio-8980-exec-3] [c.j.m.app.dao.DiscountDao.findList     ] - ==> Parameters: 32c6e1204fad11e9b780fa163e609e56(String)
2019-07-08 09:46:54.983 DEBUG 12160 [nio-8980-exec-3] [c.j.m.app.dao.DiscountDao.findList     ] - <==      Total: 1
2019-07-08 09:46:54.985 DEBUG 12160 [nio-8980-exec-3] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE sys_discount SET `user_id` = #{userId}, `discount_price` = #{discountPrice}, `update_date` = #{updateDate}, `update_by` = #{updateBy}, `remarks` = #{remarks} WHERE `id` = #{id}
2019-07-08 09:46:54.986 DEBUG 12160 [nio-8980-exec-3] [c.j.modules.app.dao.DiscountDao.update ] - ==>  Preparing: UPDATE sys_discount SET `user_id` = ?, `discount_price` = ?, `update_date` = ?, `update_by` = ?, `remarks` = ? WHERE `id` = ? 
2019-07-08 09:46:54.986 DEBUG 12160 [nio-8980-exec-3] [c.j.modules.app.dao.DiscountDao.update ] - ==> Parameters: 32c6e1204fad11e9b780fa163e609e56(String), 0(String), 2019-07-08 09:46:54.985(Timestamp), system(String), 备注(String), 1110481594190970880(String)
2019-07-08 09:46:55.036 DEBUG 12160 [nio-8980-exec-3] [c.j.modules.app.dao.DiscountDao.update ] - <==    Updates: 1
2019-07-08 10:36:41.418 DEBUG 12160 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@629803c7] will be managed by Spring
2019-07-08 10:36:41.420 DEBUG 12160 [nio-8980-exec-5] [c.j.m.a.d.D.findOneByDoctorid          ] - ==>  Preparing: select u.id as 'id', u.icon as 'icon', d.name as 'name', d.cost as 'cost', d.star_lv as 'starlv', (select GROUP_CONCAT(content) from sys_doctor_label where del_flag='0' and type='3' and id in (select labelid from sys_doctor_label_item where doctorid=u.id and del_flag='0')) as 'label', (select count(*) from sys_consultation_order where doctorid=u.id and orderstate='7' and del_flag='0') as 'consultation_times', (select sum(total) from sys_doctor_gift_order where doctorid=u.id and del_flag='0' and orderstate='2') as 'gifts', (select count(*) from sys_doctor_comment where doctorid=u.id and del_flag='0') as 'comment_times', d.introduce as 'introduce', p.introducepic1 as 'introducepic1', p.introducepic2 as 'introducepic2', p.introducepic3 as 'introducepic3', p.introducevideo as 'introducevideo', IFNULL(sum(d.come_cost) , 0.00) as 'comecost', d.come_flag as 'comeflag', d.own_flag as 'ownflag' from sys_user_info u left join sys_doctor_info d on u.id = d.doctorid left join sys_doctor_pic p on u.id = p.doctorid where u.del_flag = '0' and d.del_flag = '0' and u.id = ? limit 0,1 
2019-07-08 10:36:41.421 DEBUG 12160 [nio-8980-exec-5] [c.j.m.a.d.D.findOneByDoctorid          ] - ==> Parameters: 0f2067603f1111e99752bcaec5595fa3(String)
2019-07-08 10:36:41.431 DEBUG 12160 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 10:36:41.431 DEBUG 12160 [nio-8980-exec-4] [c.j.m.a.d.D.queryCommentList           ] - ==>  Preparing: select u.icon as 'icon', u.nike_name as 'name', c.start as 'start', c.content as 'content', DATE_FORMAT(c.create_date,"%Y-%m-%d %T") as 'date' from sys_doctor_comment c left join sys_user_info u on c.userid = u.id where c.doctorid = ? and c.del_flag = '0' order by c.create_date desc limit ?, ? 
2019-07-08 10:36:41.465 DEBUG 12160 [nio-8980-exec-5] [c.j.m.a.d.D.findOneByDoctorid          ] - <==      Total: 1
2019-07-08 10:36:41.507 DEBUG 12160 [nio-8980-exec-4] [c.j.m.a.d.D.queryCommentList           ] - ==> Parameters: 0f2067603f1111e99752bcaec5595fa3(String), 0(Integer), 5(Integer)
2019-07-08 10:36:41.530 DEBUG 12160 [nio-8980-exec-4] [c.j.m.a.d.D.queryCommentList           ] - <==      Total: 5
2019-07-08 10:36:41.619 DEBUG 12160 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 10:36:41.620 DEBUG 12160 [nio-8980-exec-4] [c.j.m.a.d.D.queryCommentCount          ] - ==>  Preparing: select count(*) from sys_doctor_comment c left join sys_user_info u on c.userid = u.id where c.doctorid = ? and c.del_flag = '0' 
2019-07-08 10:36:41.620 DEBUG 12160 [nio-8980-exec-4] [c.j.m.a.d.D.queryCommentCount          ] - ==> Parameters: 0f2067603f1111e99752bcaec5595fa3(String)
2019-07-08 10:36:41.644 DEBUG 12160 [nio-8980-exec-4] [c.j.m.a.d.D.queryCommentCount          ] - <==      Total: 1
2019-07-08 10:52:13.724 DEBUG 12160 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.product_count AS "productCount", a.total_price AS "totalPrice", a.logistics_price AS "logisticsPrice", a.discount_price AS "discountPrice", a.really_price AS "reallyPrice", a.pay_channel AS "payChannel", a.out_trade_no AS "outTradeNo", a.create_date AS "createDate", a.update_date AS "updateDate", a.create_by AS "createBy", a.update_by AS "updateBy", a.pay_date AS "payDate", a.user_id AS "userId", a.address_id AS "addressId", a.logistics_id AS "logisticsId", a.delivery_date AS "deliveryDate", a.del_flag AS "delFlag", a.delivery_name AS "deliveryName", a.delivery_address AS "deliveryAddress", a.delivery_phone AS "deliveryPhone", a.total_count AS "totalCount", a.trade_no AS "tradeNo" FROM sys_order a WHERE a.order_no = #{sqlMap.where#order_no#EQ1} ORDER BY a.update_date DESC
2019-07-08 10:52:13.748 DEBUG 12160 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will not be managed by Spring
2019-07-08 10:52:13.748 DEBUG 12160 [nio-8980-exec-8] [c.j.modules.app.dao.OrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.product_count AS "productCount", a.total_price AS "totalPrice", a.logistics_price AS "logisticsPrice", a.discount_price AS "discountPrice", a.really_price AS "reallyPrice", a.pay_channel AS "payChannel", a.out_trade_no AS "outTradeNo", a.create_date AS "createDate", a.update_date AS "updateDate", a.create_by AS "createBy", a.update_by AS "updateBy", a.pay_date AS "payDate", a.user_id AS "userId", a.address_id AS "addressId", a.logistics_id AS "logisticsId", a.delivery_date AS "deliveryDate", a.del_flag AS "delFlag", a.delivery_name AS "deliveryName", a.delivery_address AS "deliveryAddress", a.delivery_phone AS "deliveryPhone", a.total_count AS "totalCount", a.trade_no AS "tradeNo" FROM sys_order a WHERE a.order_no = ? ORDER BY a.update_date DESC 
2019-07-08 10:52:13.749 DEBUG 12160 [nio-8980-exec-8] [c.j.modules.app.dao.OrderDao.findList  ] - ==> Parameters: 070810521518301(String)
2019-07-08 10:52:13.774 DEBUG 12160 [nio-8980-exec-8] [c.j.modules.app.dao.OrderDao.findList  ] - <==      Total: 1
2019-07-08 10:52:13.777 DEBUG 12160 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.order_no = #{sqlMap.where#order_no#EQ1} ORDER BY a.create_date DESC
2019-07-08 10:52:13.778 DEBUG 12160 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will not be managed by Spring
2019-07-08 10:52:13.779 DEBUG 12160 [nio-8980-exec-8] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.order_no = ? ORDER BY a.create_date DESC 
2019-07-08 10:52:13.779 DEBUG 12160 [nio-8980-exec-8] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==> Parameters: 070810521518301(String)
2019-07-08 10:52:13.805 DEBUG 12160 [nio-8980-exec-8] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - <==      Total: 0
2019-07-08 10:52:13.807 DEBUG 12160 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.order_no = #{sqlMap.where#order_no#EQ1} ORDER BY a.create_date DESC
2019-07-08 10:52:13.808 DEBUG 12160 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will not be managed by Spring
2019-07-08 10:52:13.808 DEBUG 12160 [nio-8980-exec-8] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.order_no = ? ORDER BY a.create_date DESC 
2019-07-08 10:52:13.809 DEBUG 12160 [nio-8980-exec-8] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==> Parameters: 070810521518301(String)
2019-07-08 10:52:13.834 DEBUG 12160 [nio-8980-exec-8] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - <==      Total: 0
2019-07-08 10:52:13.835 DEBUG 12160 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag" FROM sys_member_order a WHERE a.order_no = #{sqlMap.where#order_no#EQ1} ORDER BY a.update_date DESC
2019-07-08 10:52:13.836 DEBUG 12160 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will not be managed by Spring
2019-07-08 10:52:13.836 DEBUG 12160 [nio-8980-exec-8] [c.j.m.app.dao.MemberOrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag" FROM sys_member_order a WHERE a.order_no = ? ORDER BY a.update_date DESC 
2019-07-08 10:52:13.836 DEBUG 12160 [nio-8980-exec-8] [c.j.m.app.dao.MemberOrderDao.findList  ] - ==> Parameters: 070810521518301(String)
2019-07-08 10:52:13.859 DEBUG 12160 [nio-8980-exec-8] [c.j.m.app.dao.MemberOrderDao.findList  ] - <==      Total: 0
2019-07-08 10:52:13.860 DEBUG 12160 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", a.doctor_user_id AS "doctorUserId" FROM sys_doctor_register_order a WHERE a.order_no = #{sqlMap.where#order_no#EQ1} ORDER BY a.update_date DESC
2019-07-08 10:52:13.861 DEBUG 12160 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will not be managed by Spring
2019-07-08 10:52:13.862 DEBUG 12160 [nio-8980-exec-8] [c.j.m.a.d.D.findList                   ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", a.doctor_user_id AS "doctorUserId" FROM sys_doctor_register_order a WHERE a.order_no = ? ORDER BY a.update_date DESC 
2019-07-08 10:52:13.862 DEBUG 12160 [nio-8980-exec-8] [c.j.m.a.d.D.findList                   ] - ==> Parameters: 070810521518301(String)
2019-07-08 10:52:13.885 DEBUG 12160 [nio-8980-exec-8] [c.j.m.a.d.D.findList                   ] - <==      Total: 0
2019-07-08 10:52:13.923 DEBUG 12160 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.user_code AS "userCode", a.login_code AS "loginCode", a.user_name AS "userName", a.password AS "password", a.email AS "email", a.mobile AS "mobile", a.phone AS "phone", a.sex AS "sex", a.avatar AS "avatar", a.sign AS "sign", a.wx_openid AS "wxOpenid", a.mobile_imei AS "mobileImei", a.user_type AS "userType", a.ref_code AS "refCode", a.ref_name AS "refName", a.mgr_type AS "mgrType", a.pwd_security_level AS "pwdSecurityLevel", a.pwd_update_date AS "pwdUpdateDate", a.pwd_update_record AS "pwdUpdateRecord", a.pwd_question AS "pwdQuestion", a.pwd_question_answer AS "pwdQuestionAnswer", a.pwd_question_2 AS "pwdQuestion2", a.pwd_question_answer_2 AS "pwdQuestionAnswer2", a.pwd_question_3 AS "pwdQuestion3", a.pwd_question_answer_3 AS "pwdQuestionAnswer3", a.pwd_quest_update_date AS "pwdQuestUpdateDate", a.last_login_ip AS "lastLoginIp", a.last_login_date AS "lastLoginDate", a.freeze_date AS "freezeDate", a.freeze_cause AS "freezeCause", a.user_weight AS "userWeight", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_user a WHERE a.`user_code` = #{userCode}
2019-07-08 10:52:13.924 DEBUG 12160 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 10:52:13.924 DEBUG 12160 [nio-8980-exec-8] [com.jeesite.modules.sys.dao.UserDao.get] - ==>  Preparing: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.user_code AS "userCode", a.login_code AS "loginCode", a.user_name AS "userName", a.password AS "password", a.email AS "email", a.mobile AS "mobile", a.phone AS "phone", a.sex AS "sex", a.avatar AS "avatar", a.sign AS "sign", a.wx_openid AS "wxOpenid", a.mobile_imei AS "mobileImei", a.user_type AS "userType", a.ref_code AS "refCode", a.ref_name AS "refName", a.mgr_type AS "mgrType", a.pwd_security_level AS "pwdSecurityLevel", a.pwd_update_date AS "pwdUpdateDate", a.pwd_update_record AS "pwdUpdateRecord", a.pwd_question AS "pwdQuestion", a.pwd_question_answer AS "pwdQuestionAnswer", a.pwd_question_2 AS "pwdQuestion2", a.pwd_question_answer_2 AS "pwdQuestionAnswer2", a.pwd_question_3 AS "pwdQuestion3", a.pwd_question_answer_3 AS "pwdQuestionAnswer3", a.pwd_quest_update_date AS "pwdQuestUpdateDate", a.last_login_ip AS "lastLoginIp", a.last_login_date AS "lastLoginDate", a.freeze_date AS "freezeDate", a.freeze_cause AS "freezeCause", a.user_weight AS "userWeight", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_user a WHERE a.`user_code` = ? 
2019-07-08 10:52:13.925 DEBUG 12160 [nio-8980-exec-8] [com.jeesite.modules.sys.dao.UserDao.get] - ==> Parameters: system(String)
2019-07-08 10:52:13.951 DEBUG 12160 [nio-8980-exec-8] [com.jeesite.modules.sys.dao.UserDao.get] - <==      Total: 1
2019-07-08 10:52:13.953 DEBUG 12160 [nio-8980-exec-8] [c.j.m.s.dao.RoleDao.findListByUserCode ] - ==>  Preparing: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.role_code AS "roleCode", a.role_name AS "roleName", a.role_type AS "roleType", a.role_sort AS "roleSort", a.is_sys AS "isSys", a.user_type AS "userType", a.data_scope AS "dataScope" FROM js_sys_role a JOIN js_sys_user_role ur ON a.role_code = ur.role_code WHERE a.status = ? AND ur.user_code = ? ORDER BY a.role_sort ASC 
2019-07-08 10:52:13.954 DEBUG 12160 [nio-8980-exec-8] [c.j.m.s.dao.RoleDao.findListByUserCode ] - ==> Parameters: 0(String), system(String)
2019-07-08 10:52:13.977 DEBUG 12160 [nio-8980-exec-8] [c.j.m.s.dao.RoleDao.findListByUserCode ] - <==      Total: 0
2019-07-08 10:52:13.992 DEBUG 12160 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 84毫秒: UPDATE sys_order SET `order_no` = #{orderNo}, `order_status` = #{orderStatus}, `product_count` = #{productCount}, `total_price` = #{totalPrice}, `logistics_price` = #{logisticsPrice}, `discount_price` = #{discountPrice}, `really_price` = #{reallyPrice}, `pay_channel` = #{payChannel}, `out_trade_no` = #{outTradeNo}, `update_by` = #{updateBy}, `user_id` = #{userId}, `del_flag` = #{delFlag}, `delivery_name` = #{deliveryName}, `delivery_address` = #{deliveryAddress}, `delivery_phone` = #{deliveryPhone}, `total_count` = #{totalCount} WHERE `id` = #{id}
2019-07-08 10:52:13.992 DEBUG 12160 [nio-8980-exec-8] [c.j.modules.app.dao.OrderDao.update    ] - ==>  Preparing: UPDATE sys_order SET `order_no` = ?, `order_status` = ?, `product_count` = ?, `total_price` = ?, `logistics_price` = ?, `discount_price` = ?, `really_price` = ?, `pay_channel` = ?, `out_trade_no` = ?, `update_by` = ?, `user_id` = ?, `del_flag` = ?, `delivery_name` = ?, `delivery_address` = ?, `delivery_phone` = ?, `total_count` = ? WHERE `id` = ? 
2019-07-08 10:52:13.993 DEBUG 12160 [nio-8980-exec-8] [c.j.modules.app.dao.OrderDao.update    ] - ==> Parameters: 070810521518301(String), 0(String), 1(String), 500(String), 0(String), 0(String), 500(String), null(String), 2019070810521300004(String), system(String), 123(String), 0(String), 范耘诚123(String), 辽宁省铁西区铁西广场23(String), 15004001841(String), 1(String), 259(String)
2019-07-08 10:52:14.038 DEBUG 12160 [nio-8980-exec-8] [c.j.modules.app.dao.OrderDao.update    ] - <==    Updates: 1
2019-07-08 10:52:19.746 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.product_count AS "productCount", a.total_price AS "totalPrice", a.logistics_price AS "logisticsPrice", a.discount_price AS "discountPrice", a.really_price AS "reallyPrice", a.pay_channel AS "payChannel", a.out_trade_no AS "outTradeNo", a.create_date AS "createDate", a.update_date AS "updateDate", a.create_by AS "createBy", a.update_by AS "updateBy", a.pay_date AS "payDate", a.user_id AS "userId", a.address_id AS "addressId", a.logistics_id AS "logisticsId", a.delivery_date AS "deliveryDate", a.del_flag AS "delFlag", a.delivery_name AS "deliveryName", a.delivery_address AS "deliveryAddress", a.delivery_phone AS "deliveryPhone", a.total_count AS "totalCount", a.trade_no AS "tradeNo" FROM sys_order a WHERE a.out_trade_no = #{sqlMap.where#out_trade_no#EQ1} ORDER BY a.update_date DESC
2019-07-08 10:52:19.747 DEBUG 12160 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will not be managed by Spring
2019-07-08 10:52:19.748 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.app.dao.OrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.product_count AS "productCount", a.total_price AS "totalPrice", a.logistics_price AS "logisticsPrice", a.discount_price AS "discountPrice", a.really_price AS "reallyPrice", a.pay_channel AS "payChannel", a.out_trade_no AS "outTradeNo", a.create_date AS "createDate", a.update_date AS "updateDate", a.create_by AS "createBy", a.update_by AS "updateBy", a.pay_date AS "payDate", a.user_id AS "userId", a.address_id AS "addressId", a.logistics_id AS "logisticsId", a.delivery_date AS "deliveryDate", a.del_flag AS "delFlag", a.delivery_name AS "deliveryName", a.delivery_address AS "deliveryAddress", a.delivery_phone AS "deliveryPhone", a.total_count AS "totalCount", a.trade_no AS "tradeNo" FROM sys_order a WHERE a.out_trade_no = ? ORDER BY a.update_date DESC 
2019-07-08 10:52:19.748 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.app.dao.OrderDao.findList  ] - ==> Parameters: 2019070810521300004(String)
2019-07-08 10:52:19.772 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.app.dao.OrderDao.findList  ] - <==      Total: 1
2019-07-08 10:52:19.773 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.out_trade_no = #{sqlMap.where#out_trade_no#EQ1} ORDER BY a.create_date DESC
2019-07-08 10:52:19.774 DEBUG 12160 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will not be managed by Spring
2019-07-08 10:52:19.774 DEBUG 12160 [nio-8980-exec-9] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.out_trade_no = ? ORDER BY a.create_date DESC 
2019-07-08 10:52:19.774 DEBUG 12160 [nio-8980-exec-9] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==> Parameters: 2019070810521300004(String)
2019-07-08 10:52:19.799 DEBUG 12160 [nio-8980-exec-9] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - <==      Total: 0
2019-07-08 10:52:19.801 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.out_trade_no = #{sqlMap.where#out_trade_no#EQ1} ORDER BY a.create_date DESC
2019-07-08 10:52:19.802 DEBUG 12160 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will not be managed by Spring
2019-07-08 10:52:19.802 DEBUG 12160 [nio-8980-exec-9] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.count AS "count", a.total_price AS "totalPrice", a.come_cost AS "comeCost", a.docid AS "docid", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", dd.id AS "userInfo.id", dd.mobile AS "userInfo.mobile", dd.password AS "userInfo.password", dd.icon AS "userInfo.icon", dd.regtime AS "userInfo.regtime", dd.lastlogin AS "userInfo.lastlogin", dd.islock AS "userInfo.islock", dd.isauthentication AS "userInfo.isauthentication", dd.type AS "userInfo.type", dd.create_by AS "userInfo.createBy", dd.create_date AS "userInfo.createDate", dd.update_by AS "userInfo.updateBy", dd.update_date AS "userInfo.updateDate", dd.remarks AS "userInfo.remarks", dd.del_flag AS "userInfo.delFlag", dd.nike_name AS "userInfo.nikeName", dd.is_invite AS "userInfo.isInvite", dd.third_id AS "userInfo.thirdId", dd.third_type AS "userInfo.thirdType", dd.third_icon AS "userInfo.thirdIcon", dd.member_lv AS "userInfo.memberLv", dd.member_flag AS "userInfo.memberFlag", dd.member_start AS "userInfo.memberStart", dd.member_end AS "userInfo.memberEnd", di.id AS "doctorInfos.id", di.doctorid AS "doctorInfos.doctorid", di.doctornum AS "doctorInfos.doctornum", di.name AS "doctorInfos.name", di.sex AS "doctorInfos.sex", di.age AS "doctorInfos.age", di.telephone AS "doctorInfos.telephone", di.idcard AS "doctorInfos.idcard", di.adress AS "doctorInfos.adress", di.technical AS "doctorInfos.technical", di.classify AS "doctorInfos.classify", di.introduce AS "doctorInfos.introduce", di.create_by AS "doctorInfos.createBy", di.cost AS "doctorInfos.cost", di.create_date AS "doctorInfos.createDate", di.update_by AS "doctorInfos.updateBy", di.update_date AS "doctorInfos.updateDate", di.remarks AS "doctorInfos.remarks", di.del_flag AS "doctorInfos.delFlag", di.cityid AS "doctorInfos.cityid", di.come_flag AS "doctorInfos.comeFlag", di.come_cost AS "doctorInfos.comeCost", di.own_flag AS "doctorInfos.ownFlag", di.first_count AS "doctorInfos.firstCount", di.star_lv AS "doctorInfos.starLv" FROM sys_tiaoli_order a LEFT JOIN sys_user_info dd ON a.userid = dd.id LEFT JOIN sys_doctor_info di ON a.docid = di.doctorid WHERE a.out_trade_no = ? ORDER BY a.create_date DESC 
2019-07-08 10:52:19.803 DEBUG 12160 [nio-8980-exec-9] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - ==> Parameters: 2019070810521300004(String)
2019-07-08 10:52:19.828 DEBUG 12160 [nio-8980-exec-9] [c.j.m.app.dao.TiaoliOrderDao.findList  ] - <==      Total: 0
2019-07-08 10:52:19.829 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag" FROM sys_member_order a WHERE a.out_trade_no = #{sqlMap.where#out_trade_no#EQ1} ORDER BY a.update_date DESC
2019-07-08 10:52:19.829 DEBUG 12160 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will not be managed by Spring
2019-07-08 10:52:19.830 DEBUG 12160 [nio-8980-exec-9] [c.j.m.app.dao.MemberOrderDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag" FROM sys_member_order a WHERE a.out_trade_no = ? ORDER BY a.update_date DESC 
2019-07-08 10:52:19.830 DEBUG 12160 [nio-8980-exec-9] [c.j.m.app.dao.MemberOrderDao.findList  ] - ==> Parameters: 2019070810521300004(String)
2019-07-08 10:52:19.853 DEBUG 12160 [nio-8980-exec-9] [c.j.m.app.dao.MemberOrderDao.findList  ] - <==      Total: 0
2019-07-08 10:52:19.854 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", a.doctor_user_id AS "doctorUserId" FROM sys_doctor_register_order a WHERE a.out_trade_no = #{sqlMap.where#out_trade_no#EQ1} ORDER BY a.update_date DESC
2019-07-08 10:52:19.854 DEBUG 12160 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will not be managed by Spring
2019-07-08 10:52:19.855 DEBUG 12160 [nio-8980-exec-9] [c.j.m.a.d.D.findList                   ] - ==>  Preparing: SELECT a.id AS "id", a.order_no AS "orderNo", a.order_status AS "orderStatus", a.total_price AS "totalPrice", a.userid AS "userid", a.create_date AS "createDate", a.update_date AS "updateDate", a.remarks AS "remarks", a.out_trade_no AS "outTradeNo", a.pay_date AS "payDate", a.trade_no AS "tradeNo", a.pay_channel AS "payChannel", a.del_flag AS "delFlag", a.doctor_user_id AS "doctorUserId" FROM sys_doctor_register_order a WHERE a.out_trade_no = ? ORDER BY a.update_date DESC 
2019-07-08 10:52:19.855 DEBUG 12160 [nio-8980-exec-9] [c.j.m.a.d.D.findList                   ] - ==> Parameters: 2019070810521300004(String)
2019-07-08 10:52:19.878 DEBUG 12160 [nio-8980-exec-9] [c.j.m.a.d.D.findList                   ] - <==      Total: 0
2019-07-08 10:52:19.916 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 15毫秒: UPDATE sys_order SET `order_no` = #{orderNo}, `order_status` = #{orderStatus}, `product_count` = #{productCount}, `total_price` = #{totalPrice}, `logistics_price` = #{logisticsPrice}, `discount_price` = #{discountPrice}, `really_price` = #{reallyPrice}, `pay_channel` = #{payChannel}, `out_trade_no` = #{outTradeNo}, `update_by` = #{updateBy}, `pay_date` = #{payDate}, `user_id` = #{userId}, `del_flag` = #{delFlag}, `delivery_name` = #{deliveryName}, `delivery_address` = #{deliveryAddress}, `delivery_phone` = #{deliveryPhone}, `total_count` = #{totalCount} WHERE `id` = #{id}
2019-07-08 10:52:19.917 DEBUG 12160 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 10:52:19.917 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.app.dao.OrderDao.update    ] - ==>  Preparing: UPDATE sys_order SET `order_no` = ?, `order_status` = ?, `product_count` = ?, `total_price` = ?, `logistics_price` = ?, `discount_price` = ?, `really_price` = ?, `pay_channel` = ?, `out_trade_no` = ?, `update_by` = ?, `pay_date` = ?, `user_id` = ?, `del_flag` = ?, `delivery_name` = ?, `delivery_address` = ?, `delivery_phone` = ?, `total_count` = ? WHERE `id` = ? 
2019-07-08 10:52:19.918 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.app.dao.OrderDao.update    ] - ==> Parameters: 070810521518301(String), 1(String), 1(String), 500(String), 0(String), 0(String), 500(String), 微信(String), 2019070810521300004(String), system(String), 2019-07-08 10:52:19.878(Timestamp), 123(String), 0(String), 范耘诚123(String), 辽宁省铁西区铁西广场23(String), 15004001841(String), 1(String), 259(String)
2019-07-08 10:52:19.962 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.app.dao.OrderDao.update    ] - <==    Updates: 1
2019-07-08 10:52:20.051 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.id AS "id", a.user_id AS "userId", a.discount_price AS "discountPrice", a.create_date AS "createDate", a.update_date AS "updateDate", a.create_by AS "createBy", a.update_by AS "updateBy", a.remarks AS "remarks", dd.id AS "discountDetail.id", dd.discount_id AS "discountDetail.discountId", dd.remarks AS "discountDetail.remarks", dd.detail_price AS "discountDetail.detailPrice", dd.detail_state AS "discountDetail.detailState", dd.create_date AS "discountDetail.createDate", dd.update_date AS "discountDetail.updateDate", dd.create_by AS "discountDetail.createBy", dd.update_by AS "discountDetail.updateBy", dd.del_flag AS "discountDetail.delFlag" FROM sys_discount a LEFT JOIN sys_discount_detail dd ON a.id = dd.discount_id WHERE a.user_id = #{sqlMap.where#user_id#EQ1} ORDER BY a.update_date DESC
2019-07-08 10:52:20.052 DEBUG 12160 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 10:52:20.052 DEBUG 12160 [nio-8980-exec-9] [c.j.m.app.dao.DiscountDao.findList     ] - ==>  Preparing: SELECT a.id AS "id", a.user_id AS "userId", a.discount_price AS "discountPrice", a.create_date AS "createDate", a.update_date AS "updateDate", a.create_by AS "createBy", a.update_by AS "updateBy", a.remarks AS "remarks", dd.id AS "discountDetail.id", dd.discount_id AS "discountDetail.discountId", dd.remarks AS "discountDetail.remarks", dd.detail_price AS "discountDetail.detailPrice", dd.detail_state AS "discountDetail.detailState", dd.create_date AS "discountDetail.createDate", dd.update_date AS "discountDetail.updateDate", dd.create_by AS "discountDetail.createBy", dd.update_by AS "discountDetail.updateBy", dd.del_flag AS "discountDetail.delFlag" FROM sys_discount a LEFT JOIN sys_discount_detail dd ON a.id = dd.discount_id WHERE a.user_id = ? ORDER BY a.update_date DESC 
2019-07-08 10:52:20.052 DEBUG 12160 [nio-8980-exec-9] [c.j.m.app.dao.DiscountDao.findList     ] - ==> Parameters: 123(String)
2019-07-08 10:52:20.076 DEBUG 12160 [nio-8980-exec-9] [c.j.m.app.dao.DiscountDao.findList     ] - <==      Total: 1
2019-07-08 10:52:20.077 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE sys_discount SET `user_id` = #{userId}, `discount_price` = #{discountPrice}, `update_by` = #{updateBy}, `remarks` = #{remarks} WHERE `id` = #{id}
2019-07-08 10:52:20.078 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.app.dao.DiscountDao.update ] - ==>  Preparing: UPDATE sys_discount SET `user_id` = ?, `discount_price` = ?, `update_by` = ?, `remarks` = ? WHERE `id` = ? 
2019-07-08 10:52:20.078 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.app.dao.DiscountDao.update ] - ==> Parameters: 123(String), 0(String), system(String), 备注(String), 1(String)
2019-07-08 10:52:20.122 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.app.dao.DiscountDao.update ] - <==    Updates: 1
2019-07-08 11:21:40.724 DEBUG 12160 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.id AS "id", a.config_name AS "configName", a.config_key AS "configKey", a.config_value AS "configValue", a.is_sys AS "isSys", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_sys_config a ORDER BY a.config_key
2019-07-08 11:21:40.755 DEBUG 12160 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will not be managed by Spring
2019-07-08 11:21:40.756 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.id AS "id", a.config_name AS "configName", a.config_key AS "configKey", a.config_value AS "configValue", a.is_sys AS "isSys", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_sys_config a ORDER BY a.config_key 
2019-07-08 11:21:40.757 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2019-07-08 11:21:40.801 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2019-07-08 11:21:54.749 INFO  12160 [nio-8980-exec-5] [com.jeesite.common.cache.CacheUtils    ] - removeCache: userCache_system
2019-07-08 11:21:54.979 DEBUG 12160 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 11:21:54.980 DEBUG 12160 [nio-8980-exec-5] [c.j.m.sys.dao.UserDao.updateLoginInfo  ] - ==>  Preparing: UPDATE js_sys_user SET last_login_ip = ?, last_login_date = ? WHERE user_code = ? 
2019-07-08 11:21:55.033 DEBUG 12160 [nio-8980-exec-5] [c.j.m.sys.dao.UserDao.updateLoginInfo  ] - ==> Parameters: 192.168.1.161(String), 2019-07-08 11:21:54.862(Timestamp), system(String)
2019-07-08 11:21:55.077 DEBUG 12160 [nio-8980-exec-5] [c.j.m.sys.dao.UserDao.updateLoginInfo  ] - <==    Updates: 1
2019-07-08 11:21:55.446 DEBUG 12160 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 11:21:55.452 DEBUG 12160 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 11:21:55.454 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 11:21:55.454 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2019-07-08 11:21:55.480 DEBUG 12160 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 117毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 11:21:55.539 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 70
2019-07-08 11:21:55.702 DEBUG 12160 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 11:21:55.703 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 11:21:55.737 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148069674986291200(String), loginLogout(String), 系统登录(String), system(String), 超级管理员(String), 2019-07-08 11:21:55.276(Timestamp), /js/a/login(String), POST(String), username=F3EDC7D2C193E0B8DCF554C726719ED2&password=*&validCode=(String), 192.168.1.161(String), http://192.168.1.28:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36(String), Windows 10(String), Chrome(String), 0(Long)
2019-07-08 11:21:55.790 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 11:21:56.176 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.id AS "id", a.dict_name AS "dictName", a.dict_type AS "dictType", a.is_sys AS "isSys" FROM js_sys_dict_type a WHERE a.status = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2019-07-08 11:21:56.177 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will not be managed by Spring
2019-07-08 11:21:56.178 DEBUG 12160 [nio-8980-exec-1] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.id AS "id", a.dict_name AS "dictName", a.dict_type AS "dictType", a.is_sys AS "isSys" FROM js_sys_dict_type a WHERE a.status = ? ORDER BY a.dict_type, a.update_date DESC 
2019-07-08 11:21:56.178 DEBUG 12160 [nio-8980-exec-1] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2019-07-08 11:21:56.230 DEBUG 12160 [nio-8980-exec-1] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2019-07-08 11:21:56.333 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.dict_code AS "dictCode", a.dict_label AS "dictLabelOrig", a.dict_value AS "dictValue", a.dict_type AS "dictType", a.is_sys AS "isSys", a.description AS "description", a.css_style AS "cssStyle", a.css_class AS "cssClass", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_dict_data a WHERE a.status = #{sqlMap.where#status#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2019-07-08 11:21:56.334 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 11:21:56.335 DEBUG 12160 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.dict_code AS "dictCode", a.dict_label AS "dictLabelOrig", a.dict_value AS "dictValue", a.dict_type AS "dictType", a.is_sys AS "isSys", a.description AS "description", a.css_style AS "cssStyle", a.css_class AS "cssClass", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_dict_data a WHERE a.status = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code 
2019-07-08 11:21:56.335 DEBUG 12160 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), 1(String), 0(String)
2019-07-08 11:21:56.506 DEBUG 12160 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 126
2019-07-08 11:21:56.678 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 11:21:56.678 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 11:21:56.679 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 11:21:56.679 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String), default(String), 40(Integer)
2019-07-08 11:21:56.705 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2019-07-08 11:21:56.840 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 11:21:56.840 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 11:21:56.841 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 11:21:56.841 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426039438671872(String), default(String), 40(Integer)
2019-07-08 11:21:56.867 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 7
2019-07-08 11:21:56.999 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 11:21:57.000 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 11:21:57.000 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 11:21:57.001 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426039749050368(String), default(String), 40(Integer)
2019-07-08 11:21:57.034 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 4
2019-07-08 11:21:57.171 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 11:21:57.171 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 11:21:57.172 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 11:21:57.172 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426039933599744(String), default(String), 40(Integer)
2019-07-08 11:21:57.198 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 6
2019-07-08 11:21:57.341 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 11:21:57.342 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 11:21:57.344 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 11:21:57.345 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426041137364992(String), default(String), 40(Integer)
2019-07-08 11:21:57.370 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 2
2019-07-08 11:21:57.507 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 11:21:57.508 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 11:21:57.508 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 11:21:57.509 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426041611321344(String), default(String), 40(Integer)
2019-07-08 11:21:57.534 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 2
2019-07-08 11:21:57.669 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 11:21:57.669 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 11:21:57.669 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 11:21:57.670 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426042123026432(String), default(String), 40(Integer)
2019-07-08 11:21:57.694 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 2
2019-07-08 11:21:57.826 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 11:21:57.826 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 11:21:57.827 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 11:21:57.827 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426042550845440(String), default(String), 40(Integer)
2019-07-08 11:21:57.853 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2019-07-08 11:21:57.986 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 11:21:57.986 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 11:21:57.987 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 11:21:57.987 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426043184185344(String), default(String), 40(Integer)
2019-07-08 11:21:58.013 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 7
2019-07-08 11:21:58.147 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 11:21:58.148 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 11:21:58.148 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 11:21:58.149 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426043947548672(String), default(String), 40(Integer)
2019-07-08 11:21:58.174 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 4
2019-07-08 11:21:58.311 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 11:21:58.311 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 11:21:58.312 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 11:21:58.312 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426046589960192(String), default(String), 40(Integer)
2019-07-08 11:21:58.337 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 7
2019-07-08 11:21:58.473 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 11:21:58.473 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 11:21:58.474 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 11:21:58.474 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426135861526528(String), default(String), 40(Integer)
2019-07-08 11:21:58.498 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2019-07-08 11:21:58.633 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 11:21:58.634 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 11:21:58.634 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 11:21:58.635 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426182074368000(String), default(String), 40(Integer)
2019-07-08 11:21:58.660 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 5
2019-07-08 11:21:58.794 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 11:21:58.795 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 11:21:58.795 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 11:21:58.795 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426205860265984(String), default(String), 40(Integer)
2019-07-08 11:21:58.819 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 2
2019-07-08 11:21:58.952 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 11:21:58.953 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 11:21:58.953 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 11:21:58.954 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426241822228480(String), default(String), 40(Integer)
2019-07-08 11:21:58.978 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 2
2019-07-08 11:21:59.112 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 11:21:59.113 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 11:21:59.113 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 11:21:59.114 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426277415092224(String), default(String), 40(Integer)
2019-07-08 11:21:59.138 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2019-07-08 11:21:59.275 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 11:21:59.275 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 11:21:59.276 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 11:21:59.277 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426337687240704(String), default(String), 40(Integer)
2019-07-08 11:21:59.302 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 1
2019-07-08 11:21:59.446 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 11:21:59.446 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 11:21:59.446 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 11:21:59.447 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426366493720576(String), default(String), 40(Integer)
2019-07-08 11:21:59.471 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 4
2019-07-08 11:21:59.606 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 11:21:59.607 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 11:21:59.608 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 11:21:59.609 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1105274968404209664(String), default(String), 40(Integer)
2019-07-08 11:21:59.633 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 2
2019-07-08 11:21:59.766 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 11:21:59.767 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 11:21:59.767 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 11:21:59.768 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1115425480122118144(String), default(String), 40(Integer)
2019-07-08 11:21:59.792 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 1
2019-07-08 11:22:00.485 DEBUG 12160 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 7毫秒: SELECT a.id AS "id", a.msg_type AS "msgType", a.msg_title AS "msgTitle", a.msg_content AS "msgContent", a.biz_key AS "bizKey", a.biz_type AS "bizType", a.receive_code AS "receiveCode", a.receive_user_code AS "receiveUserCode", a.receive_user_name AS "receiveUserName", a.send_user_code AS "sendUserCode", a.send_user_name AS "sendUserName", a.send_date AS "sendDate", a.is_merge_push AS "isMergePush", a.plan_push_date AS "planPushDate", a.push_number AS "pushNumber", a.push_return_code AS "pushReturnCode", a.push_return_msg_id AS "pushReturnMsgId", a.push_return_content AS "pushReturnContent", a.push_status AS "pushStatus", a.push_date AS "pushDate", a.read_status AS "readStatus", a.read_date AS "readDate" FROM js_sys_msg_push a WHERE a.msg_type = #{sqlMap.where#msg_type#EQ1} AND a.receive_user_code = #{sqlMap.where#receive_user_code#EQ1} AND a.read_status = #{sqlMap.where#read_status#EQ1} ORDER BY a.id DESC
2019-07-08 11:22:00.486 DEBUG 12160 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 11:22:00.613 DEBUG 12160 [io-8980-exec-10] [c.j.modules.msg.dao.MsgPushDao.findList] - ==>  Preparing: SELECT count(0) FROM js_sys_msg_push a WHERE a.msg_type = ? AND a.receive_user_code = ? AND a.read_status = ? 
2019-07-08 11:22:00.623 DEBUG 12160 [io-8980-exec-10] [c.j.modules.msg.dao.MsgPushDao.findList] - ==> Parameters: pc(String), system(String), 2(String)
2019-07-08 11:22:00.666 DEBUG 12160 [io-8980-exec-10] [c.j.modules.msg.dao.MsgPushDao.findList] - ==>  Preparing: SELECT a.id AS "id", a.msg_type AS "msgType", a.msg_title AS "msgTitle", a.msg_content AS "msgContent", a.biz_key AS "bizKey", a.biz_type AS "bizType", a.receive_code AS "receiveCode", a.receive_user_code AS "receiveUserCode", a.receive_user_name AS "receiveUserName", a.send_user_code AS "sendUserCode", a.send_user_name AS "sendUserName", a.send_date AS "sendDate", a.is_merge_push AS "isMergePush", a.plan_push_date AS "planPushDate", a.push_number AS "pushNumber", a.push_return_code AS "pushReturnCode", a.push_return_msg_id AS "pushReturnMsgId", a.push_return_content AS "pushReturnContent", a.push_status AS "pushStatus", a.push_date AS "pushDate", a.read_status AS "readStatus", a.read_date AS "readDate" FROM js_sys_msg_push a WHERE a.msg_type = ? AND a.receive_user_code = ? AND a.read_status = ? ORDER BY a.id DESC LIMIT 5 
2019-07-08 11:22:00.666 DEBUG 12160 [io-8980-exec-10] [c.j.modules.msg.dao.MsgPushDao.findList] - ==> Parameters: pc(String), system(String), 2(String)
2019-07-08 11:22:00.689 DEBUG 12160 [io-8980-exec-10] [c.j.modules.msg.dao.MsgPushDao.findList] - <==      Total: 0
2019-07-08 11:22:00.776 DEBUG 12160 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.msg_type AS "msgType", a.msg_title AS "msgTitle", a.msg_content AS "msgContent", a.biz_key AS "bizKey", a.biz_type AS "bizType", a.receive_code AS "receiveCode", a.receive_user_code AS "receiveUserCode", a.receive_user_name AS "receiveUserName", a.send_user_code AS "sendUserCode", a.send_user_name AS "sendUserName", a.send_date AS "sendDate", a.is_merge_push AS "isMergePush", a.plan_push_date AS "planPushDate", a.push_number AS "pushNumber", a.push_return_code AS "pushReturnCode", a.push_return_msg_id AS "pushReturnMsgId", a.push_return_content AS "pushReturnContent", a.push_status AS "pushStatus", a.push_date AS "pushDate", a.read_status AS "readStatus", a.read_date AS "readDate" FROM js_sys_msg_push a WHERE a.msg_type = #{sqlMap.where#msg_type#EQ1} AND a.receive_user_code = #{sqlMap.where#receive_user_code#EQ1} AND a.read_status = #{sqlMap.where#read_status#EQ1} ORDER BY a.id DESC
2019-07-08 11:22:00.784 DEBUG 12160 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will not be managed by Spring
2019-07-08 11:22:00.784 DEBUG 12160 [io-8980-exec-10] [c.j.modules.msg.dao.MsgPushDao.findList] - ==>  Preparing: SELECT a.id AS "id", a.msg_type AS "msgType", a.msg_title AS "msgTitle", a.msg_content AS "msgContent", a.biz_key AS "bizKey", a.biz_type AS "bizType", a.receive_code AS "receiveCode", a.receive_user_code AS "receiveUserCode", a.receive_user_name AS "receiveUserName", a.send_user_code AS "sendUserCode", a.send_user_name AS "sendUserName", a.send_date AS "sendDate", a.is_merge_push AS "isMergePush", a.plan_push_date AS "planPushDate", a.push_number AS "pushNumber", a.push_return_code AS "pushReturnCode", a.push_return_msg_id AS "pushReturnMsgId", a.push_return_content AS "pushReturnContent", a.push_status AS "pushStatus", a.push_date AS "pushDate", a.read_status AS "readStatus", a.read_date AS "readDate" FROM js_sys_msg_push a WHERE a.msg_type = ? AND a.receive_user_code = ? AND a.read_status = ? ORDER BY a.id DESC 
2019-07-08 11:22:00.784 DEBUG 12160 [io-8980-exec-10] [c.j.modules.msg.dao.MsgPushDao.findList] - ==> Parameters: pc(String), system(String), 0(String)
2019-07-08 11:22:00.807 DEBUG 12160 [io-8980-exec-10] [c.j.modules.msg.dao.MsgPushDao.findList] - <==      Total: 0
2019-07-08 11:23:35.342 DEBUG 12160 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 11:23:35.362 INFO  12160 [nio-8980-exec-1] [com.jeesite.common.cache.CacheUtils    ] - removeCache: userCache_system
2019-07-08 11:23:35.363 INFO  12160 [nio-8980-exec-1] [com.jeesite.common.cache.CacheUtils    ] - removeCache: userCache_system
2019-07-08 11:23:35.365 DEBUG 12160 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6983f33d] will be managed by Spring
2019-07-08 11:23:35.366 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 11:23:35.367 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148070094685126656(String), loginLogout(String), 系统退出(String), system(String), 超级管理员(String), 2019-07-08 11:23:35.34(Timestamp), /js/a/logout(String), GET(String), (String), 192.168.1.161(String), http://192.168.1.28:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36(String), Windows 10(String), Chrome(String), 0(Long)
2019-07-08 11:23:35.413 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 14:10:55.572 DEBUG 12160 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 135毫秒: SELECT a.id AS "id", a.config_name AS "configName", a.config_key AS "configKey", a.config_value AS "configValue", a.is_sys AS "isSys", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_sys_config a ORDER BY a.config_key
2019-07-08 14:10:56.216 DEBUG 12160 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will not be managed by Spring
2019-07-08 14:10:56.224 DEBUG 12160 [nio-8980-exec-7] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.id AS "id", a.config_name AS "configName", a.config_key AS "configKey", a.config_value AS "configValue", a.is_sys AS "isSys", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_sys_config a ORDER BY a.config_key 
2019-07-08 14:10:56.245 DEBUG 12160 [nio-8980-exec-7] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2019-07-08 14:10:56.344 DEBUG 12160 [nio-8980-exec-7] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2019-07-08 14:11:03.818 DEBUG 12160 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:03.838 DEBUG 12160 [nio-8980-exec-7] [c.j.m.sys.dao.UserDao.getByLoginCode   ] - ==>  Preparing: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.user_code AS "userCode", a.login_code AS "loginCode", a.user_name AS "userName", a.password AS "password", a.email AS "email", a.mobile AS "mobile", a.phone AS "phone", a.sex AS "sex", a.avatar AS "avatar", a.sign AS "sign", a.wx_openid AS "wxOpenid", a.mobile_imei AS "mobileImei", a.user_type AS "userType", a.ref_code AS "refCode", a.ref_name AS "refName", a.mgr_type AS "mgrType", a.pwd_security_level AS "pwdSecurityLevel", a.pwd_update_date AS "pwdUpdateDate", a.pwd_update_record AS "pwdUpdateRecord", a.pwd_question AS "pwdQuestion", a.pwd_question_answer AS "pwdQuestionAnswer", a.pwd_question_2 AS "pwdQuestion2", a.pwd_question_answer_2 AS "pwdQuestionAnswer2", a.pwd_question_3 AS "pwdQuestion3", a.pwd_question_answer_3 AS "pwdQuestionAnswer3", a.pwd_quest_update_date AS "pwdQuestUpdateDate", a.last_login_ip AS "lastLoginIp", a.last_login_date AS "lastLoginDate", a.freeze_date AS "freezeDate", a.freeze_cause AS "freezeCause", a.user_weight AS "userWeight", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_user a WHERE a.status != ? AND upper(a.login_code) = upper(?) 
2019-07-08 14:11:03.858 DEBUG 12160 [nio-8980-exec-7] [c.j.m.sys.dao.UserDao.getByLoginCode   ] - ==> Parameters: 1(String), system(String)
2019-07-08 14:11:03.933 DEBUG 12160 [nio-8980-exec-7] [c.j.m.sys.dao.UserDao.getByLoginCode   ] - <==      Total: 1
2019-07-08 14:11:04.109 DEBUG 12160 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:04.111 DEBUG 12160 [nio-8980-exec-7] [c.j.m.s.dao.RoleDao.findListByUserCode ] - ==>  Preparing: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.role_code AS "roleCode", a.role_name AS "roleName", a.role_type AS "roleType", a.role_sort AS "roleSort", a.is_sys AS "isSys", a.user_type AS "userType", a.data_scope AS "dataScope" FROM js_sys_role a JOIN js_sys_user_role ur ON a.role_code = ur.role_code WHERE a.status = ? AND ur.user_code = ? ORDER BY a.role_sort ASC 
2019-07-08 14:11:04.118 DEBUG 12160 [nio-8980-exec-7] [c.j.m.s.dao.RoleDao.findListByUserCode ] - ==> Parameters: 0(String), system(String)
2019-07-08 14:11:04.141 DEBUG 12160 [nio-8980-exec-7] [c.j.m.s.dao.RoleDao.findListByUserCode ] - <==      Total: 0
2019-07-08 14:11:04.348 INFO  12160 [nio-8980-exec-7] [com.jeesite.common.cache.CacheUtils    ] - removeCache: userCache_system
2019-07-08 14:11:04.403 DEBUG 12160 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:04.404 DEBUG 12160 [nio-8980-exec-7] [c.j.m.sys.dao.UserDao.updateLoginInfo  ] - ==>  Preparing: UPDATE js_sys_user SET last_login_ip = ?, last_login_date = ? WHERE user_code = ? 
2019-07-08 14:11:04.406 DEBUG 12160 [nio-8980-exec-7] [c.j.m.sys.dao.UserDao.updateLoginInfo  ] - ==> Parameters: 0:0:0:0:0:0:0:1(String), 2019-07-08 14:11:04.371(Timestamp), system(String)
2019-07-08 14:11:04.450 DEBUG 12160 [nio-8980-exec-7] [c.j.m.sys.dao.UserDao.updateLoginInfo  ] - <==    Updates: 1
2019-07-08 14:11:04.538 DEBUG 12160 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 14:11:04.539 DEBUG 12160 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:04.539 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:11:04.543 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148112243992608768(String), loginLogout(String), 系统登录(String), system(String), 超级管理员(String), 2019-07-08 14:11:04.518(Timestamp), /js/a/login(String), POST(String), username=F3EDC7D2C193E0B8DCF554C726719ED2&password=*&validCode=(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 0(Long)
2019-07-08 14:11:04.597 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 14:11:04.645 DEBUG 12160 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 14:11:04.655 DEBUG 12160 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:04.656 DEBUG 12160 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 14:11:04.664 DEBUG 12160 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2019-07-08 14:11:04.788 DEBUG 12160 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 70
2019-07-08 14:11:05.004 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.id AS "id", a.dict_name AS "dictName", a.dict_type AS "dictType", a.is_sys AS "isSys" FROM js_sys_dict_type a WHERE a.status = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2019-07-08 14:11:05.005 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will not be managed by Spring
2019-07-08 14:11:05.005 DEBUG 12160 [nio-8980-exec-1] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.id AS "id", a.dict_name AS "dictName", a.dict_type AS "dictType", a.is_sys AS "isSys" FROM js_sys_dict_type a WHERE a.status = ? ORDER BY a.dict_type, a.update_date DESC 
2019-07-08 14:11:05.006 DEBUG 12160 [nio-8980-exec-1] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2019-07-08 14:11:05.086 DEBUG 12160 [nio-8980-exec-1] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2019-07-08 14:11:05.134 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.dict_code AS "dictCode", a.dict_label AS "dictLabelOrig", a.dict_value AS "dictValue", a.dict_type AS "dictType", a.is_sys AS "isSys", a.description AS "description", a.css_style AS "cssStyle", a.css_class AS "cssClass", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_dict_data a WHERE a.status = #{sqlMap.where#status#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2019-07-08 14:11:05.134 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:05.135 DEBUG 12160 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.dict_code AS "dictCode", a.dict_label AS "dictLabelOrig", a.dict_value AS "dictValue", a.dict_type AS "dictType", a.is_sys AS "isSys", a.description AS "description", a.css_style AS "cssStyle", a.css_class AS "cssClass", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_dict_data a WHERE a.status = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code 
2019-07-08 14:11:05.135 DEBUG 12160 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), 1(String), 0(String)
2019-07-08 14:11:05.256 DEBUG 12160 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 126
2019-07-08 14:11:05.404 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 14:11:05.405 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:05.406 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 14:11:05.407 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String), default(String), 40(Integer)
2019-07-08 14:11:05.432 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2019-07-08 14:11:05.573 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 9毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 14:11:05.574 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:05.589 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 14:11:05.596 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426039438671872(String), default(String), 40(Integer)
2019-07-08 14:11:05.621 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 7
2019-07-08 14:11:05.776 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 26毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 14:11:05.778 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:05.779 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 14:11:05.825 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426039749050368(String), default(String), 40(Integer)
2019-07-08 14:11:05.849 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 4
2019-07-08 14:11:05.995 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 14:11:05.996 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:05.996 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 14:11:05.997 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426039933599744(String), default(String), 40(Integer)
2019-07-08 14:11:06.029 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 6
2019-07-08 14:11:06.166 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 9毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 14:11:06.166 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:06.167 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 14:11:06.167 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426041137364992(String), default(String), 40(Integer)
2019-07-08 14:11:06.197 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 2
2019-07-08 14:11:06.339 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 14:11:06.339 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:06.339 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 14:11:06.340 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426041611321344(String), default(String), 40(Integer)
2019-07-08 14:11:06.364 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 2
2019-07-08 14:11:06.564 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 66毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 14:11:06.565 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:06.576 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 14:11:06.577 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426042123026432(String), default(String), 40(Integer)
2019-07-08 14:11:06.624 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 2
2019-07-08 14:11:06.758 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 14:11:06.758 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:06.759 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 14:11:06.759 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426042550845440(String), default(String), 40(Integer)
2019-07-08 14:11:06.784 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2019-07-08 14:11:06.917 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 14:11:06.917 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:06.917 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 14:11:06.929 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426043184185344(String), default(String), 40(Integer)
2019-07-08 14:11:06.965 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 7
2019-07-08 14:11:07.103 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 14:11:07.104 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:07.117 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 14:11:07.118 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426043947548672(String), default(String), 40(Integer)
2019-07-08 14:11:07.169 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 4
2019-07-08 14:11:07.306 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 14:11:07.307 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:07.308 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 14:11:07.309 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426046589960192(String), default(String), 40(Integer)
2019-07-08 14:11:07.353 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 7
2019-07-08 14:11:07.516 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 14:11:07.523 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:07.524 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 14:11:07.525 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426135861526528(String), default(String), 40(Integer)
2019-07-08 14:11:07.550 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2019-07-08 14:11:07.692 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 9毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 14:11:07.697 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:07.698 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 14:11:07.698 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426182074368000(String), default(String), 40(Integer)
2019-07-08 14:11:07.729 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 5
2019-07-08 14:11:07.866 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 14:11:07.867 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:07.868 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 14:11:07.869 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426205860265984(String), default(String), 40(Integer)
2019-07-08 14:11:07.894 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 2
2019-07-08 14:11:08.047 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 14:11:08.047 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:08.049 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 14:11:08.050 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426241822228480(String), default(String), 40(Integer)
2019-07-08 14:11:08.115 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 2
2019-07-08 14:11:08.260 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 14:11:08.261 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:08.262 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 14:11:08.263 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426277415092224(String), default(String), 40(Integer)
2019-07-08 14:11:08.289 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2019-07-08 14:11:08.441 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 6毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 14:11:08.442 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:08.443 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 14:11:08.444 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426337687240704(String), default(String), 40(Integer)
2019-07-08 14:11:08.468 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 1
2019-07-08 14:11:08.612 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 10毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 14:11:08.613 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:08.615 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 14:11:08.616 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426366493720576(String), default(String), 40(Integer)
2019-07-08 14:11:08.642 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 4
2019-07-08 14:11:08.818 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 5毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 14:11:08.834 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:08.845 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 14:11:08.846 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1105274968404209664(String), default(String), 40(Integer)
2019-07-08 14:11:08.875 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 2
2019-07-08 14:11:09.009 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 14:11:09.010 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:09.021 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 14:11:09.022 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1115425480122118144(String), default(String), 40(Integer)
2019-07-08 14:11:09.046 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 1
2019-07-08 14:11:10.185 DEBUG 12160 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.id AS "id", a.msg_type AS "msgType", a.msg_title AS "msgTitle", a.msg_content AS "msgContent", a.biz_key AS "bizKey", a.biz_type AS "bizType", a.receive_code AS "receiveCode", a.receive_user_code AS "receiveUserCode", a.receive_user_name AS "receiveUserName", a.send_user_code AS "sendUserCode", a.send_user_name AS "sendUserName", a.send_date AS "sendDate", a.is_merge_push AS "isMergePush", a.plan_push_date AS "planPushDate", a.push_number AS "pushNumber", a.push_return_code AS "pushReturnCode", a.push_return_msg_id AS "pushReturnMsgId", a.push_return_content AS "pushReturnContent", a.push_status AS "pushStatus", a.push_date AS "pushDate", a.read_status AS "readStatus", a.read_date AS "readDate" FROM js_sys_msg_push a WHERE a.msg_type = #{sqlMap.where#msg_type#EQ1} AND a.receive_user_code = #{sqlMap.where#receive_user_code#EQ1} AND a.read_status = #{sqlMap.where#read_status#EQ1} ORDER BY a.id DESC
2019-07-08 14:11:10.186 DEBUG 12160 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:10.270 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.msg.dao.MsgPushDao.findList] - ==>  Preparing: SELECT count(0) FROM js_sys_msg_push a WHERE a.msg_type = ? AND a.receive_user_code = ? AND a.read_status = ? 
2019-07-08 14:11:10.275 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.msg.dao.MsgPushDao.findList] - ==> Parameters: pc(String), system(String), 2(String)
2019-07-08 14:11:10.298 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.msg.dao.MsgPushDao.findList] - ==>  Preparing: SELECT a.id AS "id", a.msg_type AS "msgType", a.msg_title AS "msgTitle", a.msg_content AS "msgContent", a.biz_key AS "bizKey", a.biz_type AS "bizType", a.receive_code AS "receiveCode", a.receive_user_code AS "receiveUserCode", a.receive_user_name AS "receiveUserName", a.send_user_code AS "sendUserCode", a.send_user_name AS "sendUserName", a.send_date AS "sendDate", a.is_merge_push AS "isMergePush", a.plan_push_date AS "planPushDate", a.push_number AS "pushNumber", a.push_return_code AS "pushReturnCode", a.push_return_msg_id AS "pushReturnMsgId", a.push_return_content AS "pushReturnContent", a.push_status AS "pushStatus", a.push_date AS "pushDate", a.read_status AS "readStatus", a.read_date AS "readDate" FROM js_sys_msg_push a WHERE a.msg_type = ? AND a.receive_user_code = ? AND a.read_status = ? ORDER BY a.id DESC LIMIT 5 
2019-07-08 14:11:10.299 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.msg.dao.MsgPushDao.findList] - ==> Parameters: pc(String), system(String), 2(String)
2019-07-08 14:11:10.321 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.msg.dao.MsgPushDao.findList] - <==      Total: 0
2019-07-08 14:11:10.410 DEBUG 12160 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.msg_type AS "msgType", a.msg_title AS "msgTitle", a.msg_content AS "msgContent", a.biz_key AS "bizKey", a.biz_type AS "bizType", a.receive_code AS "receiveCode", a.receive_user_code AS "receiveUserCode", a.receive_user_name AS "receiveUserName", a.send_user_code AS "sendUserCode", a.send_user_name AS "sendUserName", a.send_date AS "sendDate", a.is_merge_push AS "isMergePush", a.plan_push_date AS "planPushDate", a.push_number AS "pushNumber", a.push_return_code AS "pushReturnCode", a.push_return_msg_id AS "pushReturnMsgId", a.push_return_content AS "pushReturnContent", a.push_status AS "pushStatus", a.push_date AS "pushDate", a.read_status AS "readStatus", a.read_date AS "readDate" FROM js_sys_msg_push a WHERE a.msg_type = #{sqlMap.where#msg_type#EQ1} AND a.receive_user_code = #{sqlMap.where#receive_user_code#EQ1} AND a.read_status = #{sqlMap.where#read_status#EQ1} ORDER BY a.id DESC
2019-07-08 14:11:10.410 DEBUG 12160 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will not be managed by Spring
2019-07-08 14:11:10.411 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.msg.dao.MsgPushDao.findList] - ==>  Preparing: SELECT a.id AS "id", a.msg_type AS "msgType", a.msg_title AS "msgTitle", a.msg_content AS "msgContent", a.biz_key AS "bizKey", a.biz_type AS "bizType", a.receive_code AS "receiveCode", a.receive_user_code AS "receiveUserCode", a.receive_user_name AS "receiveUserName", a.send_user_code AS "sendUserCode", a.send_user_name AS "sendUserName", a.send_date AS "sendDate", a.is_merge_push AS "isMergePush", a.plan_push_date AS "planPushDate", a.push_number AS "pushNumber", a.push_return_code AS "pushReturnCode", a.push_return_msg_id AS "pushReturnMsgId", a.push_return_content AS "pushReturnContent", a.push_status AS "pushStatus", a.push_date AS "pushDate", a.read_status AS "readStatus", a.read_date AS "readDate" FROM js_sys_msg_push a WHERE a.msg_type = ? AND a.receive_user_code = ? AND a.read_status = ? ORDER BY a.id DESC 
2019-07-08 14:11:10.411 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.msg.dao.MsgPushDao.findList] - ==> Parameters: pc(String), system(String), 0(String)
2019-07-08 14:11:10.435 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.msg.dao.MsgPushDao.findList] - <==      Total: 0
2019-07-08 14:11:30.324 DEBUG 12160 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 02:11:30.261  URI: /js/a/gen/genTable/list
2019-07-08 14:11:31.117 INFO  12160 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> public java.lang.String com.jeesite.modules.gen.web.GenTableController.list(com.jeesite.modules.gen.entity.GenTable,org.springframework.ui.Model)
2019-07-08 14:11:31.755 DEBUG 12160 [  SaveLogThread] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 14:11:31.756 DEBUG 12160 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:31.756 DEBUG 12160 [  SaveLogThread] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 14:11:31.756 DEBUG 12160 [  SaveLogThread] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2019-07-08 14:11:31.794 DEBUG 12160 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 02:11:31.794  URI: /js/a/gen/genTable/listData
2019-07-08 14:11:31.918 DEBUG 12160 [  SaveLogThread] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 70
2019-07-08 14:11:31.990 DEBUG 12160 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 02:11:31.574  用时: 1秒  URI: /js/a/gen/genTable/list  总内存: 393.5MB  已用内存: 292.696MB
2019-07-08 14:11:32.008 DEBUG 12160 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 14:11:32.009 DEBUG 12160 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:32.012 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:11:32.042 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148112357477892096(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 14:11:31.575(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 1313(Long)
2019-07-08 14:11:32.156 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 14:11:32.783 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 9毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", (SELECT count(1) FROM js_gen_table WHERE parent_table_name=a.table_name) AS "childNum" FROM js_gen_table a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2019-07-08 14:11:32.784 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:32.824 DEBUG 12160 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM js_gen_table a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?) 
2019-07-08 14:11:32.824 DEBUG 12160 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2019-07-08 14:11:32.846 DEBUG 12160 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", (SELECT count(1) FROM js_gen_table WHERE parent_table_name=a.table_name) AS "childNum" FROM js_gen_table a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20 
2019-07-08 14:11:32.847 DEBUG 12160 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2019-07-08 14:11:32.996 DEBUG 12160 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 20
2019-07-08 14:11:33.222 DEBUG 12160 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 02:11:33.210  用时: 1秒  URI: /js/a/gen/genTable/listData  总内存: 393.5MB  已用内存: 300.180MB
2019-07-08 14:11:33.352 DEBUG 12160 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 14:11:33.352 DEBUG 12160 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:33.352 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:11:33.353 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148112364385910784(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 14:11:33.222(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 1416(Long)
2019-07-08 14:11:33.402 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 14:11:55.807 DEBUG 12160 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 02:11:55.807  URI: /js/a/gen/genTable/createMenu
2019-07-08 14:11:55.877 DEBUG 12160 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = #{tableName}
2019-07-08 14:11:55.877 DEBUG 12160 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:55.886 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = ? 
2019-07-08 14:11:55.886 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: sys_doctor_pic(String)
2019-07-08 14:11:55.922 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2019-07-08 14:11:55.941 DEBUG 12160 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 17毫秒: SELECT a.id AS "id", a.table_name AS "genTable.tableName", a.column_name AS "columnName", a.column_sort AS "columnSort", a.column_type AS "columnType", a.column_label AS "columnLabel", a.comments AS "comments", a.attr_name AS "fullAttrName", a.attr_type AS "attrType", a.is_pk AS "isPk", a.is_null AS "isNull", a.is_insert AS "isInsert", a.is_update AS "isUpdate", a.is_list AS "isList", a.is_query AS "isQuery", a.query_type AS "queryType", a.is_edit AS "isEdit", a.show_type AS "showType", a.options AS "options" FROM js_gen_table_column a WHERE a.table_name = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2019-07-08 14:11:55.951 DEBUG 12160 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.id AS "id", a.table_name AS "genTable.tableName", a.column_name AS "columnName", a.column_sort AS "columnSort", a.column_type AS "columnType", a.column_label AS "columnLabel", a.comments AS "comments", a.attr_name AS "fullAttrName", a.attr_type AS "attrType", a.is_pk AS "isPk", a.is_null AS "isNull", a.is_insert AS "isInsert", a.is_update AS "isUpdate", a.is_list AS "isList", a.is_query AS "isQuery", a.query_type AS "queryType", a.is_edit AS "isEdit", a.show_type AS "showType", a.options AS "options" FROM js_gen_table_column a WHERE a.table_name = ? ORDER BY a.column_sort 
2019-07-08 14:11:55.951 DEBUG 12160 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: sys_doctor_pic(String)
2019-07-08 14:11:55.977 DEBUG 12160 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 15
2019-07-08 14:11:56.137 INFO  12160 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: redirect:/a/sys/menu/form?menuName=sys_doctor_pic&menuHref=/app/doctorPic/list&permission=app:doctorPic:view,app:doctorPic:edit <<<<<<<<< /js/a/gen/genTable/createMenu >>>>>>>>> public java.lang.String com.jeesite.modules.gen.web.GenTableController.createMenu(com.jeesite.modules.gen.entity.GenTable,org.springframework.ui.Model)
2019-07-08 14:11:56.194 DEBUG 12160 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 02:11:56.194  用时: 387毫秒  URI: /js/a/gen/genTable/createMenu  总内存: 393.5MB  已用内存: 303.908MB
2019-07-08 14:11:56.206 DEBUG 12160 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 02:11:56.206  URI: /js/a/sys/menu/form
2019-07-08 14:11:56.324 DEBUG 12160 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 14:11:56.324 DEBUG 12160 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:56.325 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:11:56.326 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148112460737462272(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 14:11:56.194(Timestamp), /js/a/gen/genTable/createMenu(String), GET(String), tableName=sys_doctor_pic(String), sys_doctor_pic(String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 387(Long)
2019-07-08 14:11:56.372 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 14:11:56.657 DEBUG 12160 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} ORDER BY a.tree_sort DESC
2019-07-08 14:11:56.658 DEBUG 12160 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:56.659 DEBUG 12160 [nio-8980-exec-2] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? ORDER BY a.tree_sort DESC LIMIT 1 
2019-07-08 14:11:56.659 DEBUG 12160 [nio-8980-exec-2] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String)
2019-07-08 14:11:56.683 DEBUG 12160 [nio-8980-exec-2] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 1
2019-07-08 14:11:56.785 DEBUG 12160 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.module_code AS "moduleCode", a.module_name AS "moduleName", a.description AS "description", a.main_class_name AS "mainClassName", a.current_version AS "currentVersion", a.upgrade_info AS "upgradeInfo" FROM js_sys_module a WHERE a.status = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2019-07-08 14:11:56.805 DEBUG 12160 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will not be managed by Spring
2019-07-08 14:11:56.805 DEBUG 12160 [nio-8980-exec-2] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.module_code AS "moduleCode", a.module_name AS "moduleName", a.description AS "description", a.main_class_name AS "mainClassName", a.current_version AS "currentVersion", a.upgrade_info AS "upgradeInfo" FROM js_sys_module a WHERE a.status = ? ORDER BY a.update_date DESC 
2019-07-08 14:11:56.806 DEBUG 12160 [nio-8980-exec-2] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2019-07-08 14:11:56.827 DEBUG 12160 [nio-8980-exec-2] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 2
2019-07-08 14:11:56.829 INFO  12160 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/menuForm <<<<<<<<< /js/a/sys/menu/form >>>>>>>>> public java.lang.String com.jeesite.modules.sys.web.MenuController.form(com.jeesite.modules.sys.entity.Menu,org.springframework.ui.Model)
2019-07-08 14:11:57.703 DEBUG 12160 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 02:11:57.702  用时: 1秒  URI: /js/a/sys/menu/form  总内存: 383MB  已用内存: 92.552MB
2019-07-08 14:11:57.836 DEBUG 12160 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 14:11:57.836 DEBUG 12160 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:11:57.836 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:11:57.837 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148112467066667008(String), select(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2019-07-08 14:11:57.703(Timestamp), /js/a/sys/menu/form(String), GET(String), menuName=sys_doctor_pic&menuHref=/app/doctorPic/list&permission=app:doctorPic:view,app:doctorPic:edit(String), (String), Menu(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 1496(Long)
2019-07-08 14:11:57.882 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 14:12:01.359 DEBUG 12160 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 02:12:01.359  URI: /js/a/test/testData/list
2019-07-08 14:12:01.586 INFO  12160 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/test/testDataList <<<<<<<<< /js/a/test/testData/list >>>>>>>>> public java.lang.String com.jeesite.modules.test.web.TestDataController.list(com.jeesite.modules.test.entity.TestData,org.springframework.ui.Model)
2019-07-08 14:12:01.675 DEBUG 12160 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 02:12:01.674  用时: 315毫秒  URI: /js/a/test/testData/list  总内存: 383MB  已用内存: 109.425MB
2019-07-08 14:12:01.718 DEBUG 12160 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 02:12:01.718  URI: /js/a/test/testData/listData
2019-07-08 14:12:01.861 DEBUG 12160 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 14:12:01.862 DEBUG 12160 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:12:01.863 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:12:01.884 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148112483722248192(String), access(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2019-07-08 14:12:01.674(Timestamp), /js/a/test/testData/list(String), GET(String), (String), (String), TestData(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 315(Long)
2019-07-08 14:12:01.933 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 14:12:02.182 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.test_input AS "testInput", a.test_textarea AS "testTextarea", a.test_select AS "testSelect", a.test_select_multiple AS "testSelectMultiple", a.test_radio AS "testRadio", a.test_checkbox AS "testCheckbox", a.test_date AS "testDate", a.test_datetime AS "testDatetime", a.test_user_code AS "testUser.userCode", a.test_office_code AS "testOffice.officeCode", a.test_area_code AS "testAreaCode", a.test_area_name AS "testAreaName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", u10.user_name AS "testUser.userName", u11.office_name AS "testOffice.officeName" FROM test_data a LEFT JOIN js_sys_user u10 ON u10.user_code = a.test_user_code LEFT JOIN js_sys_office u11 ON u11.office_code = a.test_office_code WHERE a.status != #{STATUS_DELETE} ORDER BY a.update_date DESC
2019-07-08 14:12:02.183 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:12:02.188 DEBUG 12160 [nio-8980-exec-1] [c.j.m.test.dao.TestDataDao.findList    ] - ==>  Preparing: SELECT count(0) FROM test_data a LEFT JOIN js_sys_user u10 ON u10.user_code = a.test_user_code LEFT JOIN js_sys_office u11 ON u11.office_code = a.test_office_code WHERE a.status != ? 
2019-07-08 14:12:02.189 DEBUG 12160 [nio-8980-exec-1] [c.j.m.test.dao.TestDataDao.findList    ] - ==> Parameters: 1(String)
2019-07-08 14:12:02.212 DEBUG 12160 [nio-8980-exec-1] [c.j.m.test.dao.TestDataDao.findList    ] - ==>  Preparing: SELECT a.id AS "id", a.test_input AS "testInput", a.test_textarea AS "testTextarea", a.test_select AS "testSelect", a.test_select_multiple AS "testSelectMultiple", a.test_radio AS "testRadio", a.test_checkbox AS "testCheckbox", a.test_date AS "testDate", a.test_datetime AS "testDatetime", a.test_user_code AS "testUser.userCode", a.test_office_code AS "testOffice.officeCode", a.test_area_code AS "testAreaCode", a.test_area_name AS "testAreaName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", u10.user_name AS "testUser.userName", u11.office_name AS "testOffice.officeName" FROM test_data a LEFT JOIN js_sys_user u10 ON u10.user_code = a.test_user_code LEFT JOIN js_sys_office u11 ON u11.office_code = a.test_office_code WHERE a.status != ? ORDER BY a.update_date DESC LIMIT 20 
2019-07-08 14:12:02.213 DEBUG 12160 [nio-8980-exec-1] [c.j.m.test.dao.TestDataDao.findList    ] - ==> Parameters: 1(String)
2019-07-08 14:12:02.236 DEBUG 12160 [nio-8980-exec-1] [c.j.m.test.dao.TestDataDao.findList    ] - <==      Total: 0
2019-07-08 14:12:02.325 DEBUG 12160 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 02:12:02.325  用时: 607毫秒  URI: /js/a/test/testData/listData  总内存: 383MB  已用内存: 116.381MB
2019-07-08 14:12:02.456 DEBUG 12160 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 14:12:02.456 DEBUG 12160 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:12:02.457 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:12:02.457 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148112486452740096(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2019-07-08 14:12:02.325(Timestamp), /js/a/test/testData/listData(String), POST(String), testInput=&testTextarea=&testSelect=&!testSelectMultiple=&!testCheckbox=&testDate_gte=&testDate_lte=&testDatetime_gte=&testDatetime_lte=&testUser.userName=&testUser.userCode=&testOffice.officeName=&testOffice.officeCode=&testAreaName=&testAreaCode=&status=&remarks=&pageNo=&pageSize=&orderBy=(String), (String), TestData(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 607(Long)
2019-07-08 14:12:02.502 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 14:12:06.278 DEBUG 12160 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 02:12:06.278  URI: /js/a/gen/genTable/list
2019-07-08 14:12:06.280 INFO  12160 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> public java.lang.String com.jeesite.modules.gen.web.GenTableController.list(com.jeesite.modules.gen.entity.GenTable,org.springframework.ui.Model)
2019-07-08 14:12:06.285 DEBUG 12160 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 02:12:06.284  用时: 6毫秒  URI: /js/a/gen/genTable/list  总内存: 383MB  已用内存: 117.402MB
2019-07-08 14:12:06.346 DEBUG 12160 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 02:12:06.345  URI: /js/a/gen/genTable/listData
2019-07-08 14:12:06.417 DEBUG 12160 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", (SELECT count(1) FROM js_gen_table WHERE parent_table_name=a.table_name) AS "childNum" FROM js_gen_table a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2019-07-08 14:12:06.417 DEBUG 12160 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4c69ecbd] will be managed by Spring
2019-07-08 14:12:06.418 DEBUG 12160 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 14:12:06.418 DEBUG 12160 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:12:06.419 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:12:06.420 DEBUG 12160 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM js_gen_table a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?) 
2019-07-08 14:12:06.421 DEBUG 12160 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2019-07-08 14:12:06.420 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148112503062183936(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 14:12:06.285(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 6(Long)
2019-07-08 14:12:06.446 DEBUG 12160 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", (SELECT count(1) FROM js_gen_table WHERE parent_table_name=a.table_name) AS "childNum" FROM js_gen_table a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20 
2019-07-08 14:12:06.447 DEBUG 12160 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2019-07-08 14:12:06.468 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 14:12:06.477 DEBUG 12160 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 20
2019-07-08 14:12:06.570 DEBUG 12160 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 02:12:06.568  用时: 223毫秒  URI: /js/a/gen/genTable/listData  总内存: 383MB  已用内存: 119.393MB
2019-07-08 14:12:06.707 DEBUG 12160 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 14:12:06.708 DEBUG 12160 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4c69ecbd] will be managed by Spring
2019-07-08 14:12:06.708 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:12:06.709 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148112504253366272(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 14:12:06.569(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 223(Long)
2019-07-08 14:12:06.756 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 14:12:13.752 DEBUG 12160 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 02:12:13.752  URI: /js/a/gen/genTable/form
2019-07-08 14:12:13.798 DEBUG 12160 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = #{tableName}
2019-07-08 14:12:13.798 DEBUG 12160 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4c69ecbd] will be managed by Spring
2019-07-08 14:12:13.799 DEBUG 12160 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = ? 
2019-07-08 14:12:13.799 DEBUG 12160 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: sys_doctor_pic(String)
2019-07-08 14:12:13.824 DEBUG 12160 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2019-07-08 14:12:13.825 DEBUG 12160 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.id AS "id", a.table_name AS "genTable.tableName", a.column_name AS "columnName", a.column_sort AS "columnSort", a.column_type AS "columnType", a.column_label AS "columnLabel", a.comments AS "comments", a.attr_name AS "fullAttrName", a.attr_type AS "attrType", a.is_pk AS "isPk", a.is_null AS "isNull", a.is_insert AS "isInsert", a.is_update AS "isUpdate", a.is_list AS "isList", a.is_query AS "isQuery", a.query_type AS "queryType", a.is_edit AS "isEdit", a.show_type AS "showType", a.options AS "options" FROM js_gen_table_column a WHERE a.table_name = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2019-07-08 14:12:13.826 DEBUG 12160 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.id AS "id", a.table_name AS "genTable.tableName", a.column_name AS "columnName", a.column_sort AS "columnSort", a.column_type AS "columnType", a.column_label AS "columnLabel", a.comments AS "comments", a.attr_name AS "fullAttrName", a.attr_type AS "attrType", a.is_pk AS "isPk", a.is_null AS "isNull", a.is_insert AS "isInsert", a.is_update AS "isUpdate", a.is_list AS "isList", a.is_query AS "isQuery", a.query_type AS "queryType", a.is_edit AS "isEdit", a.show_type AS "showType", a.options AS "options" FROM js_gen_table_column a WHERE a.table_name = ? ORDER BY a.column_sort 
2019-07-08 14:12:13.826 DEBUG 12160 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: sys_doctor_pic(String)
2019-07-08 14:12:13.856 DEBUG 12160 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 15
2019-07-08 14:12:14.284 DEBUG 12160 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4c69ecbd] will be managed by Spring
2019-07-08 14:12:14.285 DEBUG 12160 [nio-8980-exec-6] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.table_name AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.`TABLES` t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.table_name AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.`VIEWS` t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName" 
2019-07-08 14:12:14.297 DEBUG 12160 [nio-8980-exec-6] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: sys_doctor_pic(String), sys_doctor_pic(String)
2019-07-08 14:12:14.332 DEBUG 12160 [nio-8980-exec-6] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2019-07-08 14:12:14.356 DEBUG 12160 [nio-8980-exec-6] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.`COLUMNS` t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION 
2019-07-08 14:12:14.356 DEBUG 12160 [nio-8980-exec-6] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: sys_doctor_pic(String)
2019-07-08 14:12:14.381 DEBUG 12160 [nio-8980-exec-6] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 15
2019-07-08 14:12:14.396 DEBUG 12160 [nio-8980-exec-6] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.`COLUMNS` au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY='PRI' AND au.TABLE_NAME = ? 
2019-07-08 14:12:14.396 DEBUG 12160 [nio-8980-exec-6] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: sys_doctor_pic(String)
2019-07-08 14:12:14.419 DEBUG 12160 [nio-8980-exec-6] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 1
2019-07-08 14:12:15.655 DEBUG 12160 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.id AS "id", a.dict_name AS "dictName", a.dict_type AS "dictType", a.is_sys AS "isSys" FROM js_sys_dict_type a WHERE a.status = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2019-07-08 14:12:15.656 DEBUG 12160 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4c69ecbd] will not be managed by Spring
2019-07-08 14:12:15.656 DEBUG 12160 [nio-8980-exec-6] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.id AS "id", a.dict_name AS "dictName", a.dict_type AS "dictType", a.is_sys AS "isSys" FROM js_sys_dict_type a WHERE a.status = ? ORDER BY a.dict_type, a.update_date DESC 
2019-07-08 14:12:15.656 DEBUG 12160 [nio-8980-exec-6] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2019-07-08 14:12:15.681 DEBUG 12160 [nio-8980-exec-6] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2019-07-08 14:12:15.681 DEBUG 12160 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a ORDER BY a.update_date DESC
2019-07-08 14:12:15.682 DEBUG 12160 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4c69ecbd] will not be managed by Spring
2019-07-08 14:12:15.682 DEBUG 12160 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a ORDER BY a.update_date DESC 
2019-07-08 14:12:15.683 DEBUG 12160 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2019-07-08 14:12:15.730 DEBUG 12160 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 38
2019-07-08 14:12:15.792 DEBUG 12160 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4c69ecbd] will be managed by Spring
2019-07-08 14:12:15.793 DEBUG 12160 [nio-8980-exec-6] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20 
2019-07-08 14:12:15.794 DEBUG 12160 [nio-8980-exec-6] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2019-07-08 14:12:15.819 DEBUG 12160 [nio-8980-exec-6] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 3
2019-07-08 14:12:15.917 INFO  12160 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> public java.lang.String com.jeesite.modules.gen.web.GenTableController.form(com.jeesite.modules.gen.entity.GenTable,java.lang.String,org.springframework.ui.Model,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-08 14:12:15.983 DEBUG 12160 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 02:12:15.982  用时: 2秒  URI: /js/a/gen/genTable/form  总内存: 383MB  已用内存: 132.586MB
2019-07-08 14:12:16.117 DEBUG 12160 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 14:12:16.118 DEBUG 12160 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4c69ecbd] will be managed by Spring
2019-07-08 14:12:16.119 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:12:16.119 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148112543734349824(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 14:12:15.982(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=sys_doctor_pic(String), sys_doctor_pic(String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 2230(Long)
2019-07-08 14:12:16.167 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 14:12:27.723 DEBUG 12160 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 02:12:27.689  URI: /js/a/gen/genTable/list
2019-07-08 14:12:27.724 DEBUG 12160 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.msg_type AS "msgType", a.msg_title AS "msgTitle", a.msg_content AS "msgContent", a.biz_key AS "bizKey", a.biz_type AS "bizType", a.receive_code AS "receiveCode", a.receive_user_code AS "receiveUserCode", a.receive_user_name AS "receiveUserName", a.send_user_code AS "sendUserCode", a.send_user_name AS "sendUserName", a.send_date AS "sendDate", a.is_merge_push AS "isMergePush", a.plan_push_date AS "planPushDate", a.push_number AS "pushNumber", a.push_return_code AS "pushReturnCode", a.push_return_msg_id AS "pushReturnMsgId", a.push_return_content AS "pushReturnContent", a.push_status AS "pushStatus", a.push_date AS "pushDate", a.read_status AS "readStatus", a.read_date AS "readDate" FROM js_sys_msg_push a WHERE a.msg_type = #{sqlMap.where#msg_type#EQ1} AND a.receive_user_code = #{sqlMap.where#receive_user_code#EQ1} AND a.read_status = #{sqlMap.where#read_status#EQ1} ORDER BY a.id DESC
2019-07-08 14:12:27.724 DEBUG 12160 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4c69ecbd] will be managed by Spring
2019-07-08 14:12:27.725 INFO  12160 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> public java.lang.String com.jeesite.modules.gen.web.GenTableController.list(com.jeesite.modules.gen.entity.GenTable,org.springframework.ui.Model)
2019-07-08 14:12:27.726 DEBUG 12160 [io-8980-exec-10] [c.j.modules.msg.dao.MsgPushDao.findList] - ==>  Preparing: SELECT count(0) FROM js_sys_msg_push a WHERE a.msg_type = ? AND a.receive_user_code = ? AND a.read_status = ? 
2019-07-08 14:12:27.726 DEBUG 12160 [io-8980-exec-10] [c.j.modules.msg.dao.MsgPushDao.findList] - ==> Parameters: pc(String), system(String), 2(String)
2019-07-08 14:12:27.728 DEBUG 12160 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 02:12:27.727  用时: 38毫秒  URI: /js/a/gen/genTable/list  总内存: 383MB  已用内存: 139.028MB
2019-07-08 14:12:27.749 DEBUG 12160 [io-8980-exec-10] [c.j.modules.msg.dao.MsgPushDao.findList] - ==>  Preparing: SELECT a.id AS "id", a.msg_type AS "msgType", a.msg_title AS "msgTitle", a.msg_content AS "msgContent", a.biz_key AS "bizKey", a.biz_type AS "bizType", a.receive_code AS "receiveCode", a.receive_user_code AS "receiveUserCode", a.receive_user_name AS "receiveUserName", a.send_user_code AS "sendUserCode", a.send_user_name AS "sendUserName", a.send_date AS "sendDate", a.is_merge_push AS "isMergePush", a.plan_push_date AS "planPushDate", a.push_number AS "pushNumber", a.push_return_code AS "pushReturnCode", a.push_return_msg_id AS "pushReturnMsgId", a.push_return_content AS "pushReturnContent", a.push_status AS "pushStatus", a.push_date AS "pushDate", a.read_status AS "readStatus", a.read_date AS "readDate" FROM js_sys_msg_push a WHERE a.msg_type = ? AND a.receive_user_code = ? AND a.read_status = ? ORDER BY a.id DESC LIMIT 5 
2019-07-08 14:12:27.749 DEBUG 12160 [io-8980-exec-10] [c.j.modules.msg.dao.MsgPushDao.findList] - ==> Parameters: pc(String), system(String), 2(String)
2019-07-08 14:12:27.773 DEBUG 12160 [io-8980-exec-10] [c.j.modules.msg.dao.MsgPushDao.findList] - <==      Total: 0
2019-07-08 14:12:27.802 DEBUG 12160 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 02:12:27.802  URI: /js/a/gen/genTable/listData
2019-07-08 14:12:27.861 DEBUG 12160 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 14:12:27.864 DEBUG 12160 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4c69ecbd] will be managed by Spring
2019-07-08 14:12:27.864 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:12:27.864 DEBUG 12160 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.id AS "id", a.msg_type AS "msgType", a.msg_title AS "msgTitle", a.msg_content AS "msgContent", a.biz_key AS "bizKey", a.biz_type AS "bizType", a.receive_code AS "receiveCode", a.receive_user_code AS "receiveUserCode", a.receive_user_name AS "receiveUserName", a.send_user_code AS "sendUserCode", a.send_user_name AS "sendUserName", a.send_date AS "sendDate", a.is_merge_push AS "isMergePush", a.plan_push_date AS "planPushDate", a.push_number AS "pushNumber", a.push_return_code AS "pushReturnCode", a.push_return_msg_id AS "pushReturnMsgId", a.push_return_content AS "pushReturnContent", a.push_status AS "pushStatus", a.push_date AS "pushDate", a.read_status AS "readStatus", a.read_date AS "readDate" FROM js_sys_msg_push a WHERE a.msg_type = #{sqlMap.where#msg_type#EQ1} AND a.receive_user_code = #{sqlMap.where#receive_user_code#EQ1} AND a.read_status = #{sqlMap.where#read_status#EQ1} ORDER BY a.id DESC
2019-07-08 14:12:27.865 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148112593000644608(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 14:12:27.728(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 38(Long)
2019-07-08 14:12:27.908 DEBUG 12160 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", (SELECT count(1) FROM js_gen_table WHERE parent_table_name=a.table_name) AS "childNum" FROM js_gen_table a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2019-07-08 14:12:27.909 DEBUG 12160 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:12:27.912 DEBUG 12160 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM js_gen_table a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?) 
2019-07-08 14:12:27.912 DEBUG 12160 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2019-07-08 14:12:27.914 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 14:12:27.914 DEBUG 12160 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4c69ecbd] will not be managed by Spring
2019-07-08 14:12:27.915 DEBUG 12160 [io-8980-exec-10] [c.j.modules.msg.dao.MsgPushDao.findList] - ==>  Preparing: SELECT a.id AS "id", a.msg_type AS "msgType", a.msg_title AS "msgTitle", a.msg_content AS "msgContent", a.biz_key AS "bizKey", a.biz_type AS "bizType", a.receive_code AS "receiveCode", a.receive_user_code AS "receiveUserCode", a.receive_user_name AS "receiveUserName", a.send_user_code AS "sendUserCode", a.send_user_name AS "sendUserName", a.send_date AS "sendDate", a.is_merge_push AS "isMergePush", a.plan_push_date AS "planPushDate", a.push_number AS "pushNumber", a.push_return_code AS "pushReturnCode", a.push_return_msg_id AS "pushReturnMsgId", a.push_return_content AS "pushReturnContent", a.push_status AS "pushStatus", a.push_date AS "pushDate", a.read_status AS "readStatus", a.read_date AS "readDate" FROM js_sys_msg_push a WHERE a.msg_type = ? AND a.receive_user_code = ? AND a.read_status = ? ORDER BY a.id DESC 
2019-07-08 14:12:27.915 DEBUG 12160 [io-8980-exec-10] [c.j.modules.msg.dao.MsgPushDao.findList] - ==> Parameters: pc(String), system(String), 0(String)
2019-07-08 14:12:27.935 DEBUG 12160 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", (SELECT count(1) FROM js_gen_table WHERE parent_table_name=a.table_name) AS "childNum" FROM js_gen_table a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20 
2019-07-08 14:12:27.935 DEBUG 12160 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2019-07-08 14:12:27.940 DEBUG 12160 [io-8980-exec-10] [c.j.modules.msg.dao.MsgPushDao.findList] - <==      Total: 0
2019-07-08 14:12:27.962 DEBUG 12160 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 20
2019-07-08 14:12:28.055 DEBUG 12160 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 02:12:28.052  用时: 250毫秒  URI: /js/a/gen/genTable/listData  总内存: 383MB  已用内存: 143.620MB
2019-07-08 14:12:28.195 DEBUG 12160 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 14:12:28.195 DEBUG 12160 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:12:28.196 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:12:28.196 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148112594367987712(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 14:12:28.054(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 250(Long)
2019-07-08 14:12:28.241 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 14:12:34.343 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.msg_type AS "msgType", a.msg_title AS "msgTitle", a.msg_content AS "msgContent", a.biz_key AS "bizKey", a.biz_type AS "bizType", a.receive_code AS "receiveCode", a.receive_user_code AS "receiveUserCode", a.receive_user_name AS "receiveUserName", a.send_user_code AS "sendUserCode", a.send_user_name AS "sendUserName", a.send_date AS "sendDate", a.is_merge_push AS "isMergePush", a.plan_push_date AS "planPushDate", a.push_number AS "pushNumber", a.push_return_code AS "pushReturnCode", a.push_return_msg_id AS "pushReturnMsgId", a.push_return_content AS "pushReturnContent", a.push_status AS "pushStatus", a.push_date AS "pushDate", a.read_status AS "readStatus", a.read_date AS "readDate" FROM js_sys_msg_push a ORDER BY a.id DESC
2019-07-08 14:12:34.344 DEBUG 12160 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:12:34.355 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.msg.dao.MsgPushDao.findList] - ==>  Preparing: SELECT count(0) FROM js_sys_msg_push a 
2019-07-08 14:12:34.356 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.msg.dao.MsgPushDao.findList] - ==> Parameters: 
2019-07-08 14:12:34.391 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.msg.dao.MsgPushDao.findList] - ==>  Preparing: SELECT a.id AS "id", a.msg_type AS "msgType", a.msg_title AS "msgTitle", a.msg_content AS "msgContent", a.biz_key AS "bizKey", a.biz_type AS "bizType", a.receive_code AS "receiveCode", a.receive_user_code AS "receiveUserCode", a.receive_user_name AS "receiveUserName", a.send_user_code AS "sendUserCode", a.send_user_name AS "sendUserName", a.send_date AS "sendDate", a.is_merge_push AS "isMergePush", a.plan_push_date AS "planPushDate", a.push_number AS "pushNumber", a.push_return_code AS "pushReturnCode", a.push_return_msg_id AS "pushReturnMsgId", a.push_return_content AS "pushReturnContent", a.push_status AS "pushStatus", a.push_date AS "pushDate", a.read_status AS "readStatus", a.read_date AS "readDate" FROM js_sys_msg_push a ORDER BY a.id DESC LIMIT 20 
2019-07-08 14:12:34.392 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.msg.dao.MsgPushDao.findList] - ==> Parameters: 
2019-07-08 14:12:34.415 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.msg.dao.MsgPushDao.findList] - <==      Total: 0
2019-07-08 14:12:35.294 DEBUG 12160 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.msg_type AS "msgType", a.msg_title AS "msgTitle", a.msg_content AS "msgContent", a.biz_key AS "bizKey", a.biz_type AS "bizType", a.receive_code AS "receiveCode", a.receive_user_code AS "receiveUserCode", a.receive_user_name AS "receiveUserName", a.send_user_code AS "sendUserCode", a.send_user_name AS "sendUserName", a.send_date AS "sendDate", a.is_merge_push AS "isMergePush", a.plan_push_date AS "planPushDate", a.push_number AS "pushNumber", a.push_return_code AS "pushReturnCode", a.push_return_msg_id AS "pushReturnMsgId", a.push_return_content AS "pushReturnContent", a.push_status AS "pushStatus", a.push_date AS "pushDate", a.read_status AS "readStatus", a.read_date AS "readDate" FROM js_sys_msg_pushed a ORDER BY a.id DESC
2019-07-08 14:12:35.294 DEBUG 12160 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:12:35.295 DEBUG 12160 [nio-8980-exec-4] [c.j.modules.msg.dao.MsgPushDao.findList] - ==>  Preparing: SELECT count(0) FROM js_sys_msg_pushed a 
2019-07-08 14:12:35.295 DEBUG 12160 [nio-8980-exec-4] [c.j.modules.msg.dao.MsgPushDao.findList] - ==> Parameters: 
2019-07-08 14:12:35.320 DEBUG 12160 [nio-8980-exec-4] [c.j.modules.msg.dao.MsgPushDao.findList] - ==>  Preparing: SELECT a.id AS "id", a.msg_type AS "msgType", a.msg_title AS "msgTitle", a.msg_content AS "msgContent", a.biz_key AS "bizKey", a.biz_type AS "bizType", a.receive_code AS "receiveCode", a.receive_user_code AS "receiveUserCode", a.receive_user_name AS "receiveUserName", a.send_user_code AS "sendUserCode", a.send_user_name AS "sendUserName", a.send_date AS "sendDate", a.is_merge_push AS "isMergePush", a.plan_push_date AS "planPushDate", a.push_number AS "pushNumber", a.push_return_code AS "pushReturnCode", a.push_return_msg_id AS "pushReturnMsgId", a.push_return_content AS "pushReturnContent", a.push_status AS "pushStatus", a.push_date AS "pushDate", a.read_status AS "readStatus", a.read_date AS "readDate" FROM js_sys_msg_pushed a ORDER BY a.id DESC LIMIT 20 
2019-07-08 14:12:35.321 DEBUG 12160 [nio-8980-exec-4] [c.j.modules.msg.dao.MsgPushDao.findList] - ==> Parameters: 
2019-07-08 14:12:35.344 DEBUG 12160 [nio-8980-exec-4] [c.j.modules.msg.dao.MsgPushDao.findList] - <==      Total: 0
2019-07-08 14:12:35.996 DEBUG 12160 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.module_code AS "moduleCode", a.module_name AS "moduleName", a.description AS "description", a.main_class_name AS "mainClassName", a.current_version AS "currentVersion", a.upgrade_info AS "upgradeInfo" FROM js_sys_module a WHERE a.status = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2019-07-08 14:12:35.997 DEBUG 12160 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will not be managed by Spring
2019-07-08 14:12:35.997 DEBUG 12160 [nio-8980-exec-8] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.module_code AS "moduleCode", a.module_name AS "moduleName", a.description AS "description", a.main_class_name AS "mainClassName", a.current_version AS "currentVersion", a.upgrade_info AS "upgradeInfo" FROM js_sys_module a WHERE a.status = ? ORDER BY a.update_date DESC 
2019-07-08 14:12:35.997 DEBUG 12160 [nio-8980-exec-8] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2019-07-08 14:12:36.022 DEBUG 12160 [nio-8980-exec-8] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 2
2019-07-08 14:12:36.155 DEBUG 12160 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 6毫秒: SELECT a.id AS "id", a.module_code AS "moduleCode", a.tpl_key AS "tplKey", a.tpl_name AS "tplName", a.tpl_type AS "tplType", a.tpl_content AS "tplContent", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_sys_msg_template a WHERE a.status != #{STATUS_DELETE} ORDER BY a.update_date DESC
2019-07-08 14:12:36.156 DEBUG 12160 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:12:36.160 DEBUG 12160 [nio-8980-exec-3] [c.j.m.msg.dao.MsgTemplateDao.findList  ] - ==>  Preparing: SELECT count(0) FROM js_sys_msg_template a WHERE a.status != ? 
2019-07-08 14:12:36.161 DEBUG 12160 [nio-8980-exec-3] [c.j.m.msg.dao.MsgTemplateDao.findList  ] - ==> Parameters: 1(String)
2019-07-08 14:12:36.215 DEBUG 12160 [nio-8980-exec-3] [c.j.m.msg.dao.MsgTemplateDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.module_code AS "moduleCode", a.tpl_key AS "tplKey", a.tpl_name AS "tplName", a.tpl_type AS "tplType", a.tpl_content AS "tplContent", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_sys_msg_template a WHERE a.status != ? ORDER BY a.update_date DESC LIMIT 20 
2019-07-08 14:12:36.215 DEBUG 12160 [nio-8980-exec-3] [c.j.m.msg.dao.MsgTemplateDao.findList  ] - ==> Parameters: 1(String)
2019-07-08 14:12:36.244 DEBUG 12160 [nio-8980-exec-3] [c.j.m.msg.dao.MsgTemplateDao.findList  ] - <==      Total: 0
2019-07-08 14:14:05.622 DEBUG 12160 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.module_code AS "moduleCode", a.module_name AS "moduleName", a.description AS "description", a.main_class_name AS "mainClassName", a.current_version AS "currentVersion", a.upgrade_info AS "upgradeInfo" FROM js_sys_module a WHERE a.status = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2019-07-08 14:14:05.640 DEBUG 12160 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.id AS "id", a.msg_type AS "msgType", a.msg_title AS "msgTitle", a.msg_content AS "msgContent", a.biz_key AS "bizKey", a.biz_type AS "bizType", a.receive_code AS "receiveCode", a.receive_user_code AS "receiveUserCode", a.receive_user_name AS "receiveUserName", a.send_user_code AS "sendUserCode", a.send_user_name AS "sendUserName", a.send_date AS "sendDate", a.is_merge_push AS "isMergePush", a.plan_push_date AS "planPushDate", a.push_number AS "pushNumber", a.push_return_code AS "pushReturnCode", a.push_return_msg_id AS "pushReturnMsgId", a.push_return_content AS "pushReturnContent", a.push_status AS "pushStatus", a.push_date AS "pushDate", a.read_status AS "readStatus", a.read_date AS "readDate" FROM js_sys_msg_push a WHERE a.msg_type = #{sqlMap.where#msg_type#EQ1} AND a.receive_user_code = #{sqlMap.where#receive_user_code#EQ1} AND a.read_status = #{sqlMap.where#read_status#EQ1} ORDER BY a.id DESC
2019-07-08 14:14:05.641 DEBUG 12160 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:14:05.645 DEBUG 12160 [nio-8980-exec-6] [c.j.modules.msg.dao.MsgPushDao.findList] - ==>  Preparing: SELECT count(0) FROM js_sys_msg_push a WHERE a.msg_type = ? AND a.receive_user_code = ? AND a.read_status = ? 
2019-07-08 14:14:05.645 DEBUG 12160 [nio-8980-exec-6] [c.j.modules.msg.dao.MsgPushDao.findList] - ==> Parameters: pc(String), system(String), 2(String)
2019-07-08 14:14:05.646 DEBUG 12160 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4254ab9c] will not be managed by Spring
2019-07-08 14:14:05.647 DEBUG 12160 [nio-8980-exec-4] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.module_code AS "moduleCode", a.module_name AS "moduleName", a.description AS "description", a.main_class_name AS "mainClassName", a.current_version AS "currentVersion", a.upgrade_info AS "upgradeInfo" FROM js_sys_module a WHERE a.status = ? ORDER BY a.update_date DESC 
2019-07-08 14:14:05.647 DEBUG 12160 [nio-8980-exec-4] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2019-07-08 14:14:05.670 DEBUG 12160 [nio-8980-exec-6] [c.j.modules.msg.dao.MsgPushDao.findList] - ==>  Preparing: SELECT a.id AS "id", a.msg_type AS "msgType", a.msg_title AS "msgTitle", a.msg_content AS "msgContent", a.biz_key AS "bizKey", a.biz_type AS "bizType", a.receive_code AS "receiveCode", a.receive_user_code AS "receiveUserCode", a.receive_user_name AS "receiveUserName", a.send_user_code AS "sendUserCode", a.send_user_name AS "sendUserName", a.send_date AS "sendDate", a.is_merge_push AS "isMergePush", a.plan_push_date AS "planPushDate", a.push_number AS "pushNumber", a.push_return_code AS "pushReturnCode", a.push_return_msg_id AS "pushReturnMsgId", a.push_return_content AS "pushReturnContent", a.push_status AS "pushStatus", a.push_date AS "pushDate", a.read_status AS "readStatus", a.read_date AS "readDate" FROM js_sys_msg_push a WHERE a.msg_type = ? AND a.receive_user_code = ? AND a.read_status = ? ORDER BY a.id DESC LIMIT 5 
2019-07-08 14:14:05.670 DEBUG 12160 [nio-8980-exec-6] [c.j.modules.msg.dao.MsgPushDao.findList] - ==> Parameters: pc(String), system(String), 2(String)
2019-07-08 14:14:05.672 DEBUG 12160 [nio-8980-exec-4] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 2
2019-07-08 14:14:05.693 DEBUG 12160 [nio-8980-exec-6] [c.j.modules.msg.dao.MsgPushDao.findList] - <==      Total: 0
2019-07-08 14:14:05.789 DEBUG 12160 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.id AS "id", a.msg_type AS "msgType", a.msg_title AS "msgTitle", a.msg_content AS "msgContent", a.biz_key AS "bizKey", a.biz_type AS "bizType", a.receive_code AS "receiveCode", a.receive_user_code AS "receiveUserCode", a.receive_user_name AS "receiveUserName", a.send_user_code AS "sendUserCode", a.send_user_name AS "sendUserName", a.send_date AS "sendDate", a.is_merge_push AS "isMergePush", a.plan_push_date AS "planPushDate", a.push_number AS "pushNumber", a.push_return_code AS "pushReturnCode", a.push_return_msg_id AS "pushReturnMsgId", a.push_return_content AS "pushReturnContent", a.push_status AS "pushStatus", a.push_date AS "pushDate", a.read_status AS "readStatus", a.read_date AS "readDate" FROM js_sys_msg_push a WHERE a.msg_type = #{sqlMap.where#msg_type#EQ1} AND a.receive_user_code = #{sqlMap.where#receive_user_code#EQ1} AND a.read_status = #{sqlMap.where#read_status#EQ1} ORDER BY a.id DESC
2019-07-08 14:14:05.790 DEBUG 12160 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will not be managed by Spring
2019-07-08 14:14:05.790 DEBUG 12160 [nio-8980-exec-6] [c.j.modules.msg.dao.MsgPushDao.findList] - ==>  Preparing: SELECT a.id AS "id", a.msg_type AS "msgType", a.msg_title AS "msgTitle", a.msg_content AS "msgContent", a.biz_key AS "bizKey", a.biz_type AS "bizType", a.receive_code AS "receiveCode", a.receive_user_code AS "receiveUserCode", a.receive_user_name AS "receiveUserName", a.send_user_code AS "sendUserCode", a.send_user_name AS "sendUserName", a.send_date AS "sendDate", a.is_merge_push AS "isMergePush", a.plan_push_date AS "planPushDate", a.push_number AS "pushNumber", a.push_return_code AS "pushReturnCode", a.push_return_msg_id AS "pushReturnMsgId", a.push_return_content AS "pushReturnContent", a.push_status AS "pushStatus", a.push_date AS "pushDate", a.read_status AS "readStatus", a.read_date AS "readDate" FROM js_sys_msg_push a WHERE a.msg_type = ? AND a.receive_user_code = ? AND a.read_status = ? ORDER BY a.id DESC 
2019-07-08 14:14:05.790 DEBUG 12160 [nio-8980-exec-6] [c.j.modules.msg.dao.MsgPushDao.findList] - ==> Parameters: pc(String), system(String), 0(String)
2019-07-08 14:14:05.813 DEBUG 12160 [nio-8980-exec-6] [c.j.modules.msg.dao.MsgPushDao.findList] - <==      Total: 0
2019-07-08 14:14:05.888 DEBUG 12160 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.module_code AS "moduleCode", a.tpl_key AS "tplKey", a.tpl_name AS "tplName", a.tpl_type AS "tplType", a.tpl_content AS "tplContent", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_sys_msg_template a WHERE a.status != #{STATUS_DELETE} ORDER BY a.update_date DESC
2019-07-08 14:14:05.890 DEBUG 12160 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:14:05.893 DEBUG 12160 [nio-8980-exec-8] [c.j.m.msg.dao.MsgTemplateDao.findList  ] - ==>  Preparing: SELECT count(0) FROM js_sys_msg_template a WHERE a.status != ? 
2019-07-08 14:14:05.893 DEBUG 12160 [nio-8980-exec-8] [c.j.m.msg.dao.MsgTemplateDao.findList  ] - ==> Parameters: 1(String)
2019-07-08 14:14:05.916 DEBUG 12160 [nio-8980-exec-8] [c.j.m.msg.dao.MsgTemplateDao.findList  ] - ==>  Preparing: SELECT a.id AS "id", a.module_code AS "moduleCode", a.tpl_key AS "tplKey", a.tpl_name AS "tplName", a.tpl_type AS "tplType", a.tpl_content AS "tplContent", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_sys_msg_template a WHERE a.status != ? ORDER BY a.update_date DESC LIMIT 20 
2019-07-08 14:14:05.916 DEBUG 12160 [nio-8980-exec-8] [c.j.m.msg.dao.MsgTemplateDao.findList  ] - ==> Parameters: 1(String)
2019-07-08 14:14:05.939 DEBUG 12160 [nio-8980-exec-8] [c.j.m.msg.dao.MsgTemplateDao.findList  ] - <==      Total: 0
2019-07-08 14:14:13.091 DEBUG 12160 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 02:14:13.091  URI: /js/a/gen/genTable/list
2019-07-08 14:14:13.093 INFO  12160 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> public java.lang.String com.jeesite.modules.gen.web.GenTableController.list(com.jeesite.modules.gen.entity.GenTable,org.springframework.ui.Model)
2019-07-08 14:14:13.097 DEBUG 12160 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 02:14:13.096  用时: 5毫秒  URI: /js/a/gen/genTable/list  总内存: 383MB  已用内存: 173.231MB
2019-07-08 14:14:13.175 DEBUG 12160 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 02:14:13.175  URI: /js/a/gen/genTable/listData
2019-07-08 14:14:13.225 DEBUG 12160 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", (SELECT count(1) FROM js_gen_table WHERE parent_table_name=a.table_name) AS "childNum" FROM js_gen_table a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2019-07-08 14:14:13.226 DEBUG 12160 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4254ab9c] will be managed by Spring
2019-07-08 14:14:13.228 DEBUG 12160 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM js_gen_table a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?) 
2019-07-08 14:14:13.228 DEBUG 12160 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2019-07-08 14:14:13.246 DEBUG 12160 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 14:14:13.247 DEBUG 12160 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:14:13.247 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:14:13.247 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148113034950262784(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 14:14:13.097(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 5(Long)
2019-07-08 14:14:13.253 DEBUG 12160 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", (SELECT count(1) FROM js_gen_table WHERE parent_table_name=a.table_name) AS "childNum" FROM js_gen_table a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20 
2019-07-08 14:14:13.255 DEBUG 12160 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2019-07-08 14:14:13.281 DEBUG 12160 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 20
2019-07-08 14:14:13.316 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 14:14:13.379 DEBUG 12160 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 02:14:13.378  用时: 203毫秒  URI: /js/a/gen/genTable/listData  总内存: 383MB  已用内存: 175.222MB
2019-07-08 14:14:13.520 DEBUG 12160 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 14:14:13.522 DEBUG 12160 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4254ab9c] will be managed by Spring
2019-07-08 14:14:13.523 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:14:13.525 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148113036133056512(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 14:14:13.379(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 203(Long)
2019-07-08 14:14:13.574 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 14:14:18.871 DEBUG 12160 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 02:14:18.871  URI: /js/a/gen/genTable/createMenu
2019-07-08 14:14:18.921 DEBUG 12160 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = #{tableName}
2019-07-08 14:14:18.921 DEBUG 12160 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4254ab9c] will be managed by Spring
2019-07-08 14:14:18.922 DEBUG 12160 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = ? 
2019-07-08 14:14:18.922 DEBUG 12160 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: sys_doctor_pic(String)
2019-07-08 14:14:18.947 DEBUG 12160 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2019-07-08 14:14:18.947 DEBUG 12160 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.id AS "id", a.table_name AS "genTable.tableName", a.column_name AS "columnName", a.column_sort AS "columnSort", a.column_type AS "columnType", a.column_label AS "columnLabel", a.comments AS "comments", a.attr_name AS "fullAttrName", a.attr_type AS "attrType", a.is_pk AS "isPk", a.is_null AS "isNull", a.is_insert AS "isInsert", a.is_update AS "isUpdate", a.is_list AS "isList", a.is_query AS "isQuery", a.query_type AS "queryType", a.is_edit AS "isEdit", a.show_type AS "showType", a.options AS "options" FROM js_gen_table_column a WHERE a.table_name = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2019-07-08 14:14:18.948 DEBUG 12160 [nio-8980-exec-7] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.id AS "id", a.table_name AS "genTable.tableName", a.column_name AS "columnName", a.column_sort AS "columnSort", a.column_type AS "columnType", a.column_label AS "columnLabel", a.comments AS "comments", a.attr_name AS "fullAttrName", a.attr_type AS "attrType", a.is_pk AS "isPk", a.is_null AS "isNull", a.is_insert AS "isInsert", a.is_update AS "isUpdate", a.is_list AS "isList", a.is_query AS "isQuery", a.query_type AS "queryType", a.is_edit AS "isEdit", a.show_type AS "showType", a.options AS "options" FROM js_gen_table_column a WHERE a.table_name = ? ORDER BY a.column_sort 
2019-07-08 14:14:18.948 DEBUG 12160 [nio-8980-exec-7] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: sys_doctor_pic(String)
2019-07-08 14:14:18.974 DEBUG 12160 [nio-8980-exec-7] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 15
2019-07-08 14:14:19.074 INFO  12160 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: redirect:/a/sys/menu/form?menuName=sys_doctor_pic&menuHref=/app/doctorPic/list&permission=app:doctorPic:view,app:doctorPic:edit <<<<<<<<< /js/a/gen/genTable/createMenu >>>>>>>>> public java.lang.String com.jeesite.modules.gen.web.GenTableController.createMenu(com.jeesite.modules.gen.entity.GenTable,org.springframework.ui.Model)
2019-07-08 14:14:19.076 DEBUG 12160 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 02:14:19.075  用时: 204毫秒  URI: /js/a/gen/genTable/createMenu  总内存: 383MB  已用内存: 176.906MB
2019-07-08 14:14:19.085 DEBUG 12160 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 02:14:19.085  URI: /js/a/sys/menu/form
2019-07-08 14:14:19.134 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} ORDER BY a.tree_sort DESC
2019-07-08 14:14:19.134 DEBUG 12160 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:14:19.135 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? ORDER BY a.tree_sort DESC LIMIT 1 
2019-07-08 14:14:19.135 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String)
2019-07-08 14:14:19.159 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 1
2019-07-08 14:14:19.213 DEBUG 12160 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 14:14:19.213 DEBUG 12160 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4254ab9c] will be managed by Spring
2019-07-08 14:14:19.213 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:14:19.214 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148113060023812096(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 14:14:19.075(Timestamp), /js/a/gen/genTable/createMenu(String), GET(String), tableName=sys_doctor_pic(String), sys_doctor_pic(String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 204(Long)
2019-07-08 14:14:19.243 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.module_code AS "moduleCode", a.module_name AS "moduleName", a.description AS "description", a.main_class_name AS "mainClassName", a.current_version AS "currentVersion", a.upgrade_info AS "upgradeInfo" FROM js_sys_module a WHERE a.status = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2019-07-08 14:14:19.244 DEBUG 12160 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will not be managed by Spring
2019-07-08 14:14:19.244 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.module_code AS "moduleCode", a.module_name AS "moduleName", a.description AS "description", a.main_class_name AS "mainClassName", a.current_version AS "currentVersion", a.upgrade_info AS "upgradeInfo" FROM js_sys_module a WHERE a.status = ? ORDER BY a.update_date DESC 
2019-07-08 14:14:19.244 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2019-07-08 14:14:19.268 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 14:14:19.268 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 2
2019-07-08 14:14:19.269 INFO  12160 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/menuForm <<<<<<<<< /js/a/sys/menu/form >>>>>>>>> public java.lang.String com.jeesite.modules.sys.web.MenuController.form(com.jeesite.modules.sys.entity.Menu,org.springframework.ui.Model)
2019-07-08 14:14:19.276 DEBUG 12160 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 02:14:19.275  用时: 190毫秒  URI: /js/a/sys/menu/form  总内存: 383MB  已用内存: 179.930MB
2019-07-08 14:14:19.414 DEBUG 12160 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 14:14:19.414 DEBUG 12160 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:14:19.414 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:14:19.415 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148113060862672896(String), select(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2019-07-08 14:14:19.275(Timestamp), /js/a/sys/menu/form(String), GET(String), menuName=sys_doctor_pic&menuHref=/app/doctorPic/list&permission=app:doctorPic:view,app:doctorPic:edit(String), (String), Menu(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 190(Long)
2019-07-08 14:14:19.461 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 14:14:21.285 DEBUG 12160 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 14:14:21.286 DEBUG 12160 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:14:21.286 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 14:14:21.286 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2019-07-08 14:14:21.338 DEBUG 12160 [nio-8980-exec-5] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 70
2019-07-08 14:14:43.063 DEBUG 12160 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 02:14:43.063  URI: /js/a/gen/genTable/listData
2019-07-08 14:14:43.111 DEBUG 12160 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", (SELECT count(1) FROM js_gen_table WHERE parent_table_name=a.table_name) AS "childNum" FROM js_gen_table a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2019-07-08 14:14:43.111 DEBUG 12160 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:14:43.113 DEBUG 12160 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM js_gen_table a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?) 
2019-07-08 14:14:43.113 DEBUG 12160 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2019-07-08 14:14:43.135 DEBUG 12160 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", (SELECT count(1) FROM js_gen_table WHERE parent_table_name=a.table_name) AS "childNum" FROM js_gen_table a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20,20 
2019-07-08 14:14:43.136 DEBUG 12160 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2019-07-08 14:14:43.164 DEBUG 12160 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 17
2019-07-08 14:14:43.253 DEBUG 12160 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 02:14:43.252  用时: 189毫秒  URI: /js/a/gen/genTable/listData  总内存: 383MB  已用内存: 192.113MB
2019-07-08 14:14:43.391 DEBUG 12160 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 14:14:43.392 DEBUG 12160 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:14:43.393 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:14:43.394 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148113161433694208(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 14:14:43.253(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=2&pageSize=20&orderBy=(String), (String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 189(Long)
2019-07-08 14:14:43.440 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 14:14:48.235 DEBUG 12160 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 02:14:48.234  URI: /js/a/gen/genTable/listData
2019-07-08 14:14:48.281 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", (SELECT count(1) FROM js_gen_table WHERE parent_table_name=a.table_name) AS "childNum" FROM js_gen_table a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2019-07-08 14:14:48.281 DEBUG 12160 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:14:48.283 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM js_gen_table a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?) 
2019-07-08 14:14:48.283 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2019-07-08 14:14:48.305 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", (SELECT count(1) FROM js_gen_table WHERE parent_table_name=a.table_name) AS "childNum" FROM js_gen_table a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20 
2019-07-08 14:14:48.305 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2019-07-08 14:14:48.330 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 20
2019-07-08 14:14:48.418 DEBUG 12160 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 02:14:48.417  用时: 183毫秒  URI: /js/a/gen/genTable/listData  总内存: 383MB  已用内存: 193.632MB
2019-07-08 14:14:48.550 DEBUG 12160 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 14:14:48.550 DEBUG 12160 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:14:48.551 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:14:48.552 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148113183097274368(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 14:14:48.418(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=1&pageSize=20&orderBy=(String), (String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 183(Long)
2019-07-08 14:14:48.597 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 14:14:50.353 DEBUG 12160 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 02:14:50.353  URI: /js/a/gen/genTable/listData
2019-07-08 14:14:50.399 DEBUG 12160 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", (SELECT count(1) FROM js_gen_table WHERE parent_table_name=a.table_name) AS "childNum" FROM js_gen_table a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2019-07-08 14:14:50.400 DEBUG 12160 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:14:50.401 DEBUG 12160 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM js_gen_table a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?) 
2019-07-08 14:14:50.401 DEBUG 12160 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2019-07-08 14:14:50.430 DEBUG 12160 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", (SELECT count(1) FROM js_gen_table WHERE parent_table_name=a.table_name) AS "childNum" FROM js_gen_table a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20,20 
2019-07-08 14:14:50.431 DEBUG 12160 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2019-07-08 14:14:50.456 DEBUG 12160 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 17
2019-07-08 14:14:50.546 DEBUG 12160 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 02:14:50.545  用时: 192毫秒  URI: /js/a/gen/genTable/listData  总内存: 383MB  已用内存: 195.633MB
2019-07-08 14:14:50.676 DEBUG 12160 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 14:14:50.676 DEBUG 12160 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:14:50.677 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:14:50.678 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148113192022753280(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 14:14:50.546(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=2&pageSize=20&orderBy=(String), (String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 192(Long)
2019-07-08 14:14:50.723 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 14:14:54.393 DEBUG 12160 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 02:14:54.393  URI: /js/a/gen/genTable/form
2019-07-08 14:14:54.529 DEBUG 12160 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.id AS "id", a.dict_name AS "dictName", a.dict_type AS "dictType", a.is_sys AS "isSys" FROM js_sys_dict_type a WHERE a.status = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2019-07-08 14:14:54.530 DEBUG 12160 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will not be managed by Spring
2019-07-08 14:14:54.530 DEBUG 12160 [nio-8980-exec-4] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.id AS "id", a.dict_name AS "dictName", a.dict_type AS "dictType", a.is_sys AS "isSys" FROM js_sys_dict_type a WHERE a.status = ? ORDER BY a.dict_type, a.update_date DESC 
2019-07-08 14:14:54.530 DEBUG 12160 [nio-8980-exec-4] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2019-07-08 14:14:54.553 DEBUG 12160 [nio-8980-exec-4] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2019-07-08 14:14:54.598 DEBUG 12160 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:14:54.598 DEBUG 12160 [nio-8980-exec-4] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.table_name AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.`TABLES` t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.table_name AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.`VIEWS` t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName" 
2019-07-08 14:14:54.598 DEBUG 12160 [nio-8980-exec-4] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2019-07-08 14:14:54.629 DEBUG 12160 [nio-8980-exec-4] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 93
2019-07-08 14:14:54.716 INFO  12160 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableFormSelect <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> public java.lang.String com.jeesite.modules.gen.web.GenTableController.form(com.jeesite.modules.gen.entity.GenTable,java.lang.String,org.springframework.ui.Model,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-08 14:14:54.725 DEBUG 12160 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 02:14:54.725  用时: 332毫秒  URI: /js/a/gen/genTable/form  总内存: 383MB  已用内存: 199.727MB
2019-07-08 14:14:54.857 DEBUG 12160 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 14:14:54.857 DEBUG 12160 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:14:54.857 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:14:54.858 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148113209550749696(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 14:14:54.725(Timestamp), /js/a/gen/genTable/form(String), GET(String), (String), (String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 332(Long)
2019-07-08 14:14:54.903 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 14:15:03.119 DEBUG 12160 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 02:15:03.119  URI: /js/a/gen/genTable/form
2019-07-08 14:15:03.165 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = #{tableName}
2019-07-08 14:15:03.166 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:15:03.167 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = ? 
2019-07-08 14:15:03.168 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: sys_dashang_order(String)
2019-07-08 14:15:03.191 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 0
2019-07-08 14:15:03.322 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = #{tableName}
2019-07-08 14:15:03.322 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:15:03.323 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = ? 
2019-07-08 14:15:03.323 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: sys_dashang_order(String)
2019-07-08 14:15:03.346 DEBUG 12160 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 0
2019-07-08 14:15:03.479 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:15:03.480 DEBUG 12160 [nio-8980-exec-1] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.table_name AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.`TABLES` t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.table_name AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.`VIEWS` t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName" 
2019-07-08 14:15:03.480 DEBUG 12160 [nio-8980-exec-1] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: sys_dashang_order(String), sys_dashang_order(String)
2019-07-08 14:15:03.506 DEBUG 12160 [nio-8980-exec-1] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2019-07-08 14:15:03.509 DEBUG 12160 [nio-8980-exec-1] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.`COLUMNS` t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION 
2019-07-08 14:15:03.509 DEBUG 12160 [nio-8980-exec-1] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: sys_dashang_order(String)
2019-07-08 14:15:03.534 DEBUG 12160 [nio-8980-exec-1] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 16
2019-07-08 14:15:03.536 DEBUG 12160 [nio-8980-exec-1] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.`COLUMNS` au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY='PRI' AND au.TABLE_NAME = ? 
2019-07-08 14:15:03.537 DEBUG 12160 [nio-8980-exec-1] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: sys_dashang_order(String)
2019-07-08 14:15:03.560 DEBUG 12160 [nio-8980-exec-1] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 1
2019-07-08 14:15:03.654 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.id AS "id", a.dict_name AS "dictName", a.dict_type AS "dictType", a.is_sys AS "isSys" FROM js_sys_dict_type a WHERE a.status = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2019-07-08 14:15:03.655 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will not be managed by Spring
2019-07-08 14:15:03.655 DEBUG 12160 [nio-8980-exec-1] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.id AS "id", a.dict_name AS "dictName", a.dict_type AS "dictType", a.is_sys AS "isSys" FROM js_sys_dict_type a WHERE a.status = ? ORDER BY a.dict_type, a.update_date DESC 
2019-07-08 14:15:03.656 DEBUG 12160 [nio-8980-exec-1] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2019-07-08 14:15:03.679 DEBUG 12160 [nio-8980-exec-1] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2019-07-08 14:15:03.680 DEBUG 12160 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a ORDER BY a.update_date DESC
2019-07-08 14:15:03.680 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will not be managed by Spring
2019-07-08 14:15:03.680 DEBUG 12160 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a ORDER BY a.update_date DESC 
2019-07-08 14:15:03.680 DEBUG 12160 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2019-07-08 14:15:03.734 DEBUG 12160 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 38
2019-07-08 14:15:03.778 DEBUG 12160 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:15:03.779 DEBUG 12160 [nio-8980-exec-1] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20 
2019-07-08 14:15:03.779 DEBUG 12160 [nio-8980-exec-1] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2019-07-08 14:15:03.803 DEBUG 12160 [nio-8980-exec-1] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 3
2019-07-08 14:15:03.908 INFO  12160 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> public java.lang.String com.jeesite.modules.gen.web.GenTableController.form(com.jeesite.modules.gen.entity.GenTable,java.lang.String,org.springframework.ui.Model,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-08 14:15:03.976 DEBUG 12160 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 02:15:03.974  用时: 855毫秒  URI: /js/a/gen/genTable/form  总内存: 383MB  已用内存: 205.453MB
2019-07-08 14:15:04.107 DEBUG 12160 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 14:15:04.108 DEBUG 12160 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:15:04.108 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:15:04.109 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148113248348061696(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 14:15:03.975(Timestamp), /js/a/gen/genTable/form(String), POST(String), isNewRecord=true&tableName=sys_dashang_order(String), sys_dashang_order(String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 855(Long)
2019-07-08 14:15:04.155 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 14:16:31.032 DEBUG 12160 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 02:16:31.031  URI: /js/a/gen/genTable/save
2019-07-08 14:16:31.097 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = #{tableName}
2019-07-08 14:16:31.098 DEBUG 12160 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:16:31.098 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = ? 
2019-07-08 14:16:31.099 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: sys_dashang_order(String)
2019-07-08 14:16:31.122 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 0
2019-07-08 14:16:33.586 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_gen_table (`table_name`, `class_name`, `comments`, `parent_table_name`, `parent_table_fk_name`, `data_source_name`, `tpl_category`, `package_name`, `module_name`, `sub_module_name`, `function_name`, `function_name_simple`, `function_author`, `gen_base_dir`, `options`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`) VALUES (#{tableName}, #{className}, #{comments}, #{parentTableName}, #{parentTableFkName}, #{dataSourceName}, #{tplCategory}, #{packageName}, #{moduleName}, #{subModuleName}, #{functionName}, #{functionNameSimple}, #{functionAuthor}, #{genBaseDir}, #{options}, #{createBy}, #{createDate}, #{updateBy}, #{updateDate}, #{remarks})
2019-07-08 14:16:33.586 DEBUG 12160 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:16:33.587 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table (`table_name`, `class_name`, `comments`, `parent_table_name`, `parent_table_fk_name`, `data_source_name`, `tpl_category`, `package_name`, `module_name`, `sub_module_name`, `function_name`, `function_name_simple`, `function_author`, `gen_base_dir`, `options`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:16:33.587 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.insert ] - ==> Parameters: sys_dashang_order(String), DashangOrder(String), 打赏订单表(String), (String), (String), (String), (String), com.jeesite.modules(String), sys(String), (String), sys_dashang_order(String), sys_dashang_order(String), 范耘诚(String), E:\gitlabHome\HaoLangZhongProject\HaoLangZhong(String), {"treeViewName":"","isHaveDelete":"1","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isImageUpload":"0"}(String), system(String), 2019-07-08 14:16:33.585(Timestamp), system(String), 2019-07-08 14:16:33.586(Timestamp), 打赏订单表(String)
2019-07-08 14:16:33.632 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.insert ] - <==    Updates: 1
2019-07-08 14:16:33.633 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 14:16:33.633 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:16:33.633 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148113624396775424(String), sys_dashang_order(String), id(String), 10(Integer), varchar(64)(String), 主键(String), 主键(String), id(String), String(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 14:16:33.677 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 14:16:33.678 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 14:16:33.679 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:16:33.679 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148113624585519104(String), sys_dashang_order(String), order_no(String), 20(Integer), varchar(64)(String), 订单编号(String), 订单编号(String), orderNo(String), String(String), (String), 0(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 14:16:33.723 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 14:16:33.724 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 14:16:33.724 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:16:33.724 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148113624778457088(String), sys_dashang_order(String), order_status(String), 30(Integer), varchar(64)(String), 订单状态订单状态 0未付款 1已付款, 3已使用(String), 订单状态订单状态 0未付款 1已付款, 3已使用(String), orderStatus(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 14:16:33.767 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 14:16:33.768 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 14:16:33.768 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:16:33.769 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148113624963006464(String), sys_dashang_order(String), count(String), 40(Integer), varchar(64)(String), 订单数量(String), 订单数量(String), count(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 14:16:33.811 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 14:16:33.814 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.InsertSqlProvider   ] - 3毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 14:16:33.815 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:16:33.816 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148113625151750144(String), sys_dashang_order(String), total_price(String), 50(Integer), varchar(64)(String), 订单总价(String), 订单总价(String), totalPrice(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 14:16:33.859 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 14:16:33.861 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 14:16:33.861 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:16:33.861 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148113625353076736(String), sys_dashang_order(String), come_cost(String), 60(Integer), varchar(64)(String), 订单单价(String), 订单单价(String), comeCost(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 14:16:33.905 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 14:16:33.906 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 14:16:33.907 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:16:33.907 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148113625546014720(String), sys_dashang_order(String), docid(String), 70(Integer), varchar(64)(String), 医生id(String), 医生id(String), docid(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 14:16:33.951 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 14:16:33.952 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 14:16:33.952 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:16:33.953 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148113625734758400(String), sys_dashang_order(String), userid(String), 80(Integer), varchar(64)(String), 用户id(String), 用户id(String), userid(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 14:16:33.996 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 14:16:33.998 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 14:16:33.999 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:16:33.999 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148113625927696384(String), sys_dashang_order(String), create_date(String), 90(Integer), datetime(String), 创建时间(String), 创建时间(String), createDate(String), java.util.Date(String), (String), 1(String), 1(String), (String), (String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 14:16:34.044 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 14:16:34.045 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 14:16:34.046 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:16:34.047 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148113626124828672(String), sys_dashang_order(String), update_date(String), 100(Integer), datetime(String), 更新时间(String), 更新时间(String), updateDate(String), java.util.Date(String), (String), 1(String), 1(String), 1(String), 1(String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 14:16:34.090 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 14:16:34.092 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 14:16:34.093 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:16:34.094 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148113626321960960(String), sys_dashang_order(String), remarks(String), 110(Integer), varchar(64)(String), 备注(String), 备注(String), remarks(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), LIKE(String), 1(String), textarea(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/10","dictType":""}(String)
2019-07-08 14:16:34.137 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 14:16:34.139 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 14:16:34.140 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:16:34.141 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148113626514898944(String), sys_dashang_order(String), out_trade_no(String), 120(Integer), varchar(64)(String), 第三方编号(String), 第三方编号(String), outTradeNo(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 14:16:34.183 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 14:16:34.186 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 14:16:34.187 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:16:34.187 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148113626712031232(String), sys_dashang_order(String), pay_date(String), 130(Integer), datetime(String), 支付时间(String), 支付时间(String), payDate(String), java.util.Date(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), datetime(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 14:16:34.232 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 14:16:34.234 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 14:16:34.234 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:16:34.235 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148113626913357824(String), sys_dashang_order(String), trade_no(String), 140(Integer), varchar(64)(String), 支付宝专用的号(String), 支付宝专用的号(String), tradeNo(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 14:16:34.279 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 14:16:34.281 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 14:16:34.282 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:16:34.283 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148113627114684416(String), sys_dashang_order(String), pay_channel(String), 150(Integer), varchar(64)(String), 支付类型(String), 支付类型(String), payChannel(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 14:16:34.326 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 14:16:34.328 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 14:16:34.329 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:16:34.330 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148113627311816704(String), sys_dashang_order(String), del_flag(String), 160(Integer), varchar(64)(String), 是否删除(String), 是否删除(String), delFlag(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 14:16:34.373 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 14:16:34.576 DEBUG 12160 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 02:16:34.443  用时: 3秒  URI: /js/a/gen/genTable/save  总内存: 383MB  已用内存: 242.480MB
2019-07-08 14:16:34.577 DEBUG 12160 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 02:16:34.577  URI: /js/a/gen/genTable/form
2019-07-08 14:16:34.647 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = #{tableName}
2019-07-08 14:16:34.647 DEBUG 12160 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4254ab9c] will be managed by Spring
2019-07-08 14:16:34.648 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = ? 
2019-07-08 14:16:34.648 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: sys_dashang_order(String)
2019-07-08 14:16:34.673 DEBUG 12160 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2019-07-08 14:16:34.673 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.id AS "id", a.table_name AS "genTable.tableName", a.column_name AS "columnName", a.column_sort AS "columnSort", a.column_type AS "columnType", a.column_label AS "columnLabel", a.comments AS "comments", a.attr_name AS "fullAttrName", a.attr_type AS "attrType", a.is_pk AS "isPk", a.is_null AS "isNull", a.is_insert AS "isInsert", a.is_update AS "isUpdate", a.is_list AS "isList", a.is_query AS "isQuery", a.query_type AS "queryType", a.is_edit AS "isEdit", a.show_type AS "showType", a.options AS "options" FROM js_gen_table_column a WHERE a.table_name = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2019-07-08 14:16:34.674 DEBUG 12160 [nio-8980-exec-9] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.id AS "id", a.table_name AS "genTable.tableName", a.column_name AS "columnName", a.column_sort AS "columnSort", a.column_type AS "columnType", a.column_label AS "columnLabel", a.comments AS "comments", a.attr_name AS "fullAttrName", a.attr_type AS "attrType", a.is_pk AS "isPk", a.is_null AS "isNull", a.is_insert AS "isInsert", a.is_update AS "isUpdate", a.is_list AS "isList", a.is_query AS "isQuery", a.query_type AS "queryType", a.is_edit AS "isEdit", a.show_type AS "showType", a.options AS "options" FROM js_gen_table_column a WHERE a.table_name = ? ORDER BY a.column_sort 
2019-07-08 14:16:34.674 DEBUG 12160 [nio-8980-exec-9] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: sys_dashang_order(String)
2019-07-08 14:16:34.699 DEBUG 12160 [nio-8980-exec-9] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 16
2019-07-08 14:16:34.706 DEBUG 12160 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 14:16:34.707 DEBUG 12160 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:16:34.707 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:16:34.708 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148113628352004096(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 14:16:34.575(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=true&tableName=sys_dashang_order&comments=打赏订单表&className=DashangOrder&functionAuthor=范耘诚&parentTableName=&parentTableFkName=&remarks=打赏订单表&columnList[0].id=&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=id&columnList[0].comments=主键&columnList[0].columnType=varchar(64)&columnList[0].attrType=String&columnList[0].fullAttrName=id&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=6/4/8&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=order_no&columnList[1].comments=订单编号&columnList[1].columnType=varchar(64)&columnList[1].attrType=String&columnList[1].fullAttrName=orderNo&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].isRequired=1&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=6/4/8&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[2].id=&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=order_status&columnList[2].comments=订单状态订单状态 0未付款 1已付款, 3已使用&columnList[2].columnType=varchar(64)&columnList[2].attrType=String&columnList[2].fullAttrName=orderStatus&!columnList[2].isPk=&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&columnList[2].isUpdate=1&!columnList[2].isList=&columnList[2].isList=1&!columnList[2].isQuery=&columnList[2].isQuery=1&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].showType=input&columnList[2].optionMap['gridRowCol']=6/4/8&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&columnList[3].id=&columnList[3].status=&columnList[3].columnSort=40&columnList[3].columnName=count&columnList[3].comments= 订单数量&columnList[3].columnType=varchar(64)&columnList[3].attrType=String&columnList[3].fullAttrName=count&!columnList[3].isPk=&!columnList[3].isInsert=&columnList[3].isInsert=1&!columnList[3].isUpdate=&columnList[3].isUpdate=1&!columnList[3].isList=&columnList[3].isList=1&!columnList[3].isQuery=&columnList[3].isQuery=1&columnList[3].queryType=EQ&!columnList[3].isEdit=&columnList[3].isEdit=1&!columnList[3].isRequired=&columnList[3].showType=input&columnList[3].optionMap['gridRowCol']=6/4/8&!columnList[3].optionMap['isNewLine']=&columnList[3].optionMap['dictName']=&columnList[3].optionMap['dictType']=&!columnList[3].optionMap['fieldValid']=&columnList[4].id=&columnList[4].status=&columnList[4].columnSort=50&columnList[4].columnName=total_price&columnList[4].comments=订单总价&columnList[4].columnType=varchar(64)&columnList[4].attrType=String&columnList[4].fullAttrName=totalPrice&!columnList[4].isPk=&!columnList[4].isInsert=&columnList[4].isInsert=1&!columnList[4].isUpdate=&columnList[4].isUpdate=1&!columnList[4].isList=&columnList[4].isList=1&!columnList[4].isQuery=&columnList[4].isQuery=1&columnList[4].queryType=EQ&!columnList[4].isEdit=&columnList[4].isEdit=1&!columnList[4].isRequired=&columnList[4].showType=input&columnList[4].optionMap['gridRowCol']=6/4/8&!columnList[4].optionMap['isNewLine']=&columnList[4].optionMap['dictName']=&columnList[4].optionMap['dictType']=&!columnList[4].optionMap['fieldValid']=&columnList[5].id=&columnList[5].status=&columnList[5].columnSort=60&columnList[5].columnName=come_cost&columnList[5].comments=订单单价&columnList[5].columnType=varchar(64)&columnList[5].attrType=String&columnList[5].fullAttrName=comeCost&!columnList[5].isPk=&!columnList[5].isInsert=&columnList[5].isInsert=1&!columnList[5].isUpdate=&columnList[5].isUpdate=1&!columnList[5].isList=&columnList[5].isList=1&!columnList[5].isQuery=&columnList[5].isQuery=1&columnList[5].queryType=EQ&!columnList[5].isEdit=&columnList[5].isEdit=1&!columnList[5].isRequired=&columnList[5].showType=input&columnList[5].optionMap['gridRowCol']=6/4/8&!columnList[5].optionMap['isNewLine']=&columnList[5].optionMap['dictName']=&columnList[5].optionMap['dictType']=&!columnList[5].optionMap['fieldValid']=&columnList[6].id=&columnList[6].status=&columnList[6].columnSort=70&columnList[6].columnName=docid&columnList[6].comments=医生id&columnList[6].columnType=varchar(64)&columnList[6].attrType=String&columnList[6].fullAttrName=docid&!columnList[6].isPk=&!columnList[6].isInsert=&columnList[6].isInsert=1&!columnList[6].isUpdate=&columnList[6].isUpdate=1&!columnList[6].isList=&columnList[6].isList=1&!columnList[6].isQuery=&columnList[6].isQuery=1&columnList[6].queryType=EQ&!columnList[6].isEdit=&columnList[6].isEdit=1&!columnList[6].isRequired=&columnList[6].showType=input&columnList[6].optionMap['gridRowCol']=6/4/8&!columnList[6].optionMap['isNewLine']=&columnList[6].optionMap['dictName']=&columnList[6].optionMap['dictType']=&!columnList[6].optionMap['fieldValid']=&columnList[7].id=&columnList[7].status=&columnList[7].columnSort=80&columnList[7].columnName=userid&columnList[7].comments=用户id&columnList[7].columnType=varchar(64)&columnList[7].attrType=String&columnList[7].fullAttrName=userid&!columnList[7].isPk=&!columnList[7].isInsert=&columnList[7].isInsert=1&!columnList[7].isUpdate=&columnList[7].isUpdate=1&!columnList[7].isList=&columnList[7].isList=1&!columnList[7].isQuery=&columnList[7].isQuery=1&columnList[7].queryType=EQ&!columnList[7].isEdit=&columnList[7].isEdit=1&!columnList[7].isRequired=&columnList[7].showType=input&columnList[7].optionMap['gridRowCol']=6/4/8&!columnList[7].optionMap['isNewLine']=&columnList[7].optionMap['dictName']=&columnList[7].optionMap['dictType']=&!columnList[7].optionMap['fieldValid']=&columnList[8].id=&columnList[8].status=&columnList[8].columnSort=90&columnList[8].columnName=create_date&columnList[8].comments=创建时间&columnList[8].columnType=datetime&columnList[8].attrType=java.util.Date&columnList[8].fullAttrName=createDate&!columnList[8].isPk=&!columnList[8].isInsert=&columnList[8].isInsert=1&!columnList[8].isUpdate=&!columnList[8].isList=&!columnList[8].isQuery=&columnList[8].queryType=EQ&!columnList[8].isEdit=&!columnList[8].isRequired=&columnList[8].showType=input&columnList[8].optionMap['gridRowCol']=6/4/8&!columnList[8].optionMap['isNewLine']=&columnList[8].optionMap['dictName']=&columnList[8].optionMap['dictType']=&!columnList[8].optionMap['fieldValid']=&columnList[9].id=&columnList[9].status=&columnList[9].columnSort=100&columnList[9].columnName=update_date&columnList[9].comments=更新时间&columnList[9].columnType=datetime&columnList[9].attrType=java.util.Date&columnList[9].fullAttrName=updateDate&!columnList[9].isPk=&!columnList[9].isInsert=&columnList[9].isInsert=1&!columnList[9].isUpdate=&columnList[9].isUpdate=1&!columnList[9].isList=&columnList[9].isList=1&!columnList[9].isQuery=&columnList[9].queryType=EQ&!columnList[9].isEdit=&!columnList[9].isRequired=&columnList[9].showType=input&columnList[9].optionMap['gridRowCol']=6/4/8&!columnList[9].optionMap['isNewLine']=&columnList[9].optionMap['dictName']=&columnList[9].optionMap['dictType']=&!columnList[9].optionMap['fieldValid']=&columnList[10].id=&columnList[10].status=&columnList[10].columnSort=110&columnList[10].columnName=remarks&columnList[10].comments=备注&columnList[10].columnType=varchar(64)&columnList[10].attrType=String&columnList[10].fullAttrName=remarks&!columnList[10].isPk=&!columnList[10].isInsert=&columnList[10].isInsert=1&!columnList[10].isUpdate=&columnList[10].isUpdate=1&!columnList[10].isList=&columnList[10].isList=1&!columnList[10].isQuery=&columnList[10].isQuery=1&columnList[10].queryType=LIKE&!columnList[10].isEdit=&columnList[10].isEdit=1&!columnList[10].isRequired=&columnList[10].showType=textarea&columnList[10].optionMap['gridRowCol']=12/2/10&!columnList[10].optionMap['isNewLine']=&columnList[10].optionMap['isNewLine']=1&columnList[10].optionMap['dictName']=&columnList[10].optionMap['dictType']=&!columnList[10].optionMap['fieldValid']=&columnList[11].id=&columnList[11].status=&columnList[11].columnSort=120&columnList[11].columnName=out_trade_no&columnList[11].comments=第三方编号&columnList[11].columnType=varchar(64)&columnList[11].attrType=String&columnList[11].fullAttrName=outTradeNo&!columnList[11].isPk=&!columnList[11].isInsert=&columnList[11].isInsert=1&!columnList[11].isUpdate=&columnList[11].isUpdate=1&!columnList[11].isList=&columnList[11].isList=1&!columnList[11].isQuery=&columnList[11].isQuery=1&columnList[11].queryType=EQ&!columnList[11].isEdit=&columnList[11].isEdit=1&!columnList[11].isRequired=&columnList[11].showType=input&columnList[11].optionMap['gridRowCol']=6/4/8&!columnList[11].optionMap['isNewLine']=&columnList[11].optionMap['dictName']=&columnList[11].optionMap['dictType']=&!columnList[11].optionMap['fieldValid']=&columnList[12].id=&columnList[12].status=&columnList[12].columnSort=130&columnList[12].columnName=pay_date&columnList[12].comments=支付时间&columnList[12].columnType=datetime&columnList[12].attrType=java.util.Date&columnList[12].fullAttrName=payDate&!columnList[12].isPk=&!columnList[12].isInsert=&columnList[12].isInsert=1&!columnList[12].isUpdate=&columnList[12].isUpdate=1&!columnList[12].isList=&columnList[12].isList=1&!columnList[12].isQuery=&columnList[12].isQuery=1&columnList[12].queryType=EQ&!columnList[12].isEdit=&columnList[12].isEdit=1&!columnList[12].isRequired=&columnList[12].showType=datetime&columnList[12].optionMap['gridRowCol']=6/4/8&!columnList[12].optionMap['isNewLine']=&columnList[12].optionMap['dictName']=&columnList[12].optionMap['dictType']=&!columnList[12].optionMap['fieldValid']=&columnList[13].id=&columnList[13].status=&columnList[13].columnSort=140&columnList[13].columnName=trade_no&columnList[13].comments=支付宝专用的号&columnList[13].columnType=varchar(64)&columnList[13].attrType=String&columnList[13].fullAttrName=tradeNo&!columnList[13].isPk=&!columnList[13].isInsert=&columnList[13].isInsert=1&!columnList[13].isUpdate=&columnList[13].isUpdate=1&!columnList[13].isList=&columnList[13].isList=1&!columnList[13].isQuery=&columnList[13].isQuery=1&columnList[13].queryType=EQ&!columnList[13].isEdit=&columnList[13].isEdit=1&!columnList[13].isRequired=&columnList[13].showType=input&columnList[13].optionMap['gridRowCol']=6/4/8&!columnList[13].optionMap['isNewLine']=&columnList[13].optionMap['dictName']=&columnList[13].optionMap['dictType']=&!columnList[13].optionMap['fieldValid']=&columnList[14].id=&columnList[14].status=&columnList[14].columnSort=150&columnList[14].columnName=pay_channel&columnList[14].comments=支付类型&columnList[14].columnType=varchar(64)&columnList[14].attrType=String&columnList[14].fullAttrName=payChannel&!columnList[14].isPk=&!columnList[14].isInsert=&columnList[14].isInsert=1&!columnList[14].isUpdate=&columnList[14].isUpdate=1&!columnList[14].isList=&columnList[14].isList=1&!columnList[14].isQuery=&columnList[14].isQuery=1&columnList[14].queryType=EQ&!columnList[14].isEdit=&columnList[14].isEdit=1&!columnList[14].isRequired=&columnList[14].showType=input&columnList[14].optionMap['gridRowCol']=6/4/8&!columnList[14].optionMap['isNewLine']=&columnList[14].optionMap['dictName']=&columnList[14].optionMap['dictType']=&!columnList[14].optionMap['fieldValid']=&columnList[15].id=&columnList[15].status=&columnList[15].columnSort=160&columnList[15].columnName=del_flag&columnList[15].comments=是否删除&columnList[15].columnType=varchar(64)&columnList[15].attrType=String&columnList[15].fullAttrName=delFlag&!columnList[15].isPk=&!columnList[15].isInsert=&columnList[15].isInsert=1&!columnList[15].isUpdate=&columnList[15].isUpdate=1&!columnList[15].isList=&columnList[15].isList=1&!columnList[15].isQuery=&columnList[15].isQuery=1&columnList[15].queryType=EQ&!columnList[15].isEdit=&columnList[15].isEdit=1&!columnList[15].isRequired=&columnList[15].showType=input&columnList[15].optionMap['gridRowCol']=6/4/8&!columnList[15].optionMap['isNewLine']=&columnList[15].optionMap['dictName']=&columnList[15].optionMap['dictType']=&!columnList[15].optionMap['fieldValid']=&tplCategory=&packageName=com.jeesite.modules&moduleName=sys&subModuleName=&functionName=sys_dashang_order&functionNameSimple=sys_dashang_order&genBaseDir=E:\gitlabHome\HaoLangZhongProject\HaoLangZhong&optionMap['isHaveDisableEnable']=0&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&optionMap['isImageUpload']=0&optionMap['isFileUpload']=0&genFlag=0&!replaceFile=0(String), sys_dashang_order(String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 3412(Long)
2019-07-08 14:16:34.762 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 14:16:34.844 DEBUG 12160 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4254ab9c] will be managed by Spring
2019-07-08 14:16:34.845 DEBUG 12160 [nio-8980-exec-9] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.table_name AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.`TABLES` t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.table_name AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.`VIEWS` t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName" 
2019-07-08 14:16:34.845 DEBUG 12160 [nio-8980-exec-9] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: sys_dashang_order(String), sys_dashang_order(String)
2019-07-08 14:16:34.872 DEBUG 12160 [nio-8980-exec-9] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2019-07-08 14:16:34.873 DEBUG 12160 [nio-8980-exec-9] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.`COLUMNS` t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION 
2019-07-08 14:16:34.873 DEBUG 12160 [nio-8980-exec-9] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: sys_dashang_order(String)
2019-07-08 14:16:34.898 DEBUG 12160 [nio-8980-exec-9] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 16
2019-07-08 14:16:34.898 DEBUG 12160 [nio-8980-exec-9] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.`COLUMNS` au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY='PRI' AND au.TABLE_NAME = ? 
2019-07-08 14:16:34.899 DEBUG 12160 [nio-8980-exec-9] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: sys_dashang_order(String)
2019-07-08 14:16:34.922 DEBUG 12160 [nio-8980-exec-9] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 1
2019-07-08 14:16:35.021 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.id AS "id", a.dict_name AS "dictName", a.dict_type AS "dictType", a.is_sys AS "isSys" FROM js_sys_dict_type a WHERE a.status = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2019-07-08 14:16:35.022 DEBUG 12160 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4254ab9c] will not be managed by Spring
2019-07-08 14:16:35.023 DEBUG 12160 [nio-8980-exec-9] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.id AS "id", a.dict_name AS "dictName", a.dict_type AS "dictType", a.is_sys AS "isSys" FROM js_sys_dict_type a WHERE a.status = ? ORDER BY a.dict_type, a.update_date DESC 
2019-07-08 14:16:35.023 DEBUG 12160 [nio-8980-exec-9] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2019-07-08 14:16:35.053 DEBUG 12160 [nio-8980-exec-9] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2019-07-08 14:16:35.054 DEBUG 12160 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a ORDER BY a.update_date DESC
2019-07-08 14:16:35.054 DEBUG 12160 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4254ab9c] will not be managed by Spring
2019-07-08 14:16:35.054 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a ORDER BY a.update_date DESC 
2019-07-08 14:16:35.054 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2019-07-08 14:16:35.103 DEBUG 12160 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 39
2019-07-08 14:16:35.149 DEBUG 12160 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4254ab9c] will be managed by Spring
2019-07-08 14:16:35.149 DEBUG 12160 [nio-8980-exec-9] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20 
2019-07-08 14:16:35.150 DEBUG 12160 [nio-8980-exec-9] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2019-07-08 14:16:35.175 DEBUG 12160 [nio-8980-exec-9] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 3
2019-07-08 14:16:35.269 INFO  12160 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> public java.lang.String com.jeesite.modules.gen.web.GenTableController.form(com.jeesite.modules.gen.entity.GenTable,java.lang.String,org.springframework.ui.Model,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-08 14:16:35.278 DEBUG 12160 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 02:16:35.277  用时: 700毫秒  URI: /js/a/gen/genTable/form  总内存: 383MB  已用内存: 248.794MB
2019-07-08 14:16:35.416 DEBUG 12160 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 14:16:35.417 DEBUG 12160 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4254ab9c] will be managed by Spring
2019-07-08 14:16:35.417 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:16:35.418 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148113631296405504(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 14:16:35.277(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=sys_dashang_order&op=step3(String), sys_dashang_order(String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 700(Long)
2019-07-08 14:16:35.467 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 14:16:50.130 DEBUG 12160 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 02:16:50.130  URI: /js/a/gen/genTable/save
2019-07-08 14:16:50.177 DEBUG 12160 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = #{tableName}
2019-07-08 14:16:50.177 DEBUG 12160 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4254ab9c] will be managed by Spring
2019-07-08 14:16:50.177 DEBUG 12160 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = ? 
2019-07-08 14:16:50.177 DEBUG 12160 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: sys_dashang_order(String)
2019-07-08 14:16:50.202 DEBUG 12160 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2019-07-08 14:16:50.203 DEBUG 12160 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.table_name AS "genTable.tableName", a.column_name AS "columnName", a.column_sort AS "columnSort", a.column_type AS "columnType", a.column_label AS "columnLabel", a.comments AS "comments", a.attr_name AS "fullAttrName", a.attr_type AS "attrType", a.is_pk AS "isPk", a.is_null AS "isNull", a.is_insert AS "isInsert", a.is_update AS "isUpdate", a.is_list AS "isList", a.is_query AS "isQuery", a.query_type AS "queryType", a.is_edit AS "isEdit", a.show_type AS "showType", a.options AS "options" FROM js_gen_table_column a WHERE a.table_name = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2019-07-08 14:16:50.203 DEBUG 12160 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.id AS "id", a.table_name AS "genTable.tableName", a.column_name AS "columnName", a.column_sort AS "columnSort", a.column_type AS "columnType", a.column_label AS "columnLabel", a.comments AS "comments", a.attr_name AS "fullAttrName", a.attr_type AS "attrType", a.is_pk AS "isPk", a.is_null AS "isNull", a.is_insert AS "isInsert", a.is_update AS "isUpdate", a.is_list AS "isList", a.is_query AS "isQuery", a.query_type AS "queryType", a.is_edit AS "isEdit", a.show_type AS "showType", a.options AS "options" FROM js_gen_table_column a WHERE a.table_name = ? ORDER BY a.column_sort 
2019-07-08 14:16:50.203 DEBUG 12160 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: sys_dashang_order(String)
2019-07-08 14:16:50.229 DEBUG 12160 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 16
2019-07-08 14:16:50.376 DEBUG 12160 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE js_gen_table SET `class_name` = #{className}, `comments` = #{comments}, `parent_table_name` = #{parentTableName}, `parent_table_fk_name` = #{parentTableFkName}, `data_source_name` = #{dataSourceName}, `tpl_category` = #{tplCategory}, `package_name` = #{packageName}, `module_name` = #{moduleName}, `sub_module_name` = #{subModuleName}, `function_name` = #{functionName}, `function_name_simple` = #{functionNameSimple}, `function_author` = #{functionAuthor}, `gen_base_dir` = #{genBaseDir}, `options` = #{options}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `table_name` = #{tableName}
2019-07-08 14:16:50.376 DEBUG 12160 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4254ab9c] will be managed by Spring
2019-07-08 14:16:50.377 DEBUG 12160 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.update ] - ==>  Preparing: UPDATE js_gen_table SET `class_name` = ?, `comments` = ?, `parent_table_name` = ?, `parent_table_fk_name` = ?, `data_source_name` = ?, `tpl_category` = ?, `package_name` = ?, `module_name` = ?, `sub_module_name` = ?, `function_name` = ?, `function_name_simple` = ?, `function_author` = ?, `gen_base_dir` = ?, `options` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `table_name` = ? 
2019-07-08 14:16:50.377 DEBUG 12160 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.update ] - ==> Parameters: DashangOrder(String), 打赏订单表(String), (String), (String), (String), dao(String), com.jeesite.modules(String), app(String), (String), sys_dashang_order(String), sys_dashang_order(String), 范耘诚(String), E:\gitlabHome\HaoLangZhongProject\HaoLangZhong(String), {"treeViewName":"","isHaveDelete":"1","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isImageUpload":"0"}(String), system(String), 2019-07-08 14:16:50.376(Timestamp), 打赏订单表(String), sys_dashang_order(String)
2019-07-08 14:16:50.423 DEBUG 12160 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.update ] - <==    Updates: 1
2019-07-08 14:16:50.424 DEBUG 12160 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 14:16:50.425 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 14:16:50.425 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_dashang_order(String), id(String), 10(Integer), varchar(64)(String), 主键(String), 主键(String), id(String), String(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148113624396775424(String)
2019-07-08 14:16:50.471 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 14:16:50.471 DEBUG 12160 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 14:16:50.472 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 14:16:50.472 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_dashang_order(String), order_no(String), 20(Integer), varchar(64)(String), 订单编号(String), 订单编号(String), orderNo(String), String(String), (String), 0(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148113624585519104(String)
2019-07-08 14:16:50.518 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 14:16:50.518 DEBUG 12160 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 14:16:50.519 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 14:16:50.519 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_dashang_order(String), order_status(String), 30(Integer), varchar(64)(String), 订单状态订单状态 0未付款 1已付款, 3已使用(String), 订单状态订单状态 0未付款 1已付款, 3已使用(String), orderStatus(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148113624778457088(String)
2019-07-08 14:16:50.565 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 14:16:50.566 DEBUG 12160 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 14:16:50.566 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 14:16:50.567 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_dashang_order(String), count(String), 40(Integer), varchar(64)(String), 订单数量(String), 订单数量(String), count(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148113624963006464(String)
2019-07-08 14:16:50.612 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 14:16:50.612 DEBUG 12160 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 14:16:50.613 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 14:16:50.613 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_dashang_order(String), total_price(String), 50(Integer), varchar(64)(String), 订单总价(String), 订单总价(String), totalPrice(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148113625151750144(String)
2019-07-08 14:16:50.658 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 14:16:50.659 DEBUG 12160 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 14:16:50.659 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 14:16:50.659 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_dashang_order(String), come_cost(String), 60(Integer), varchar(64)(String), 订单单价(String), 订单单价(String), comeCost(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148113625353076736(String)
2019-07-08 14:16:50.705 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 14:16:50.705 DEBUG 12160 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 14:16:50.706 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 14:16:50.706 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_dashang_order(String), docid(String), 70(Integer), varchar(64)(String), 医生id(String), 医生id(String), docid(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148113625546014720(String)
2019-07-08 14:16:50.752 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 14:16:50.753 DEBUG 12160 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 14:16:50.754 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 14:16:50.755 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_dashang_order(String), userid(String), 80(Integer), varchar(64)(String), 用户id(String), 用户id(String), userid(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148113625734758400(String)
2019-07-08 14:16:50.803 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 14:16:50.804 DEBUG 12160 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 14:16:50.805 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 14:16:50.806 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_dashang_order(String), create_date(String), 90(Integer), datetime(String), 创建时间(String), 创建时间(String), createDate(String), java.util.Date(String), (String), 1(String), 1(String), (String), (String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148113625927696384(String)
2019-07-08 14:16:50.852 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 14:16:50.853 DEBUG 12160 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 14:16:50.853 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 14:16:50.853 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_dashang_order(String), update_date(String), 100(Integer), datetime(String), 更新时间(String), 更新时间(String), updateDate(String), java.util.Date(String), (String), 1(String), 1(String), 1(String), 1(String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148113626124828672(String)
2019-07-08 14:16:50.899 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 14:16:50.900 DEBUG 12160 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 14:16:50.900 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 14:16:50.901 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_dashang_order(String), remarks(String), 110(Integer), varchar(64)(String), 备注(String), 备注(String), remarks(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), LIKE(String), 1(String), textarea(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/10","dictType":""}(String), 1148113626321960960(String)
2019-07-08 14:16:50.946 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 14:16:50.947 DEBUG 12160 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 14:16:50.948 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 14:16:50.949 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_dashang_order(String), out_trade_no(String), 120(Integer), varchar(64)(String), 第三方编号(String), 第三方编号(String), outTradeNo(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148113626514898944(String)
2019-07-08 14:16:50.994 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 14:16:50.995 DEBUG 12160 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 14:16:50.996 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 14:16:50.997 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_dashang_order(String), pay_date(String), 130(Integer), datetime(String), 支付时间(String), 支付时间(String), payDate(String), java.util.Date(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), datetime(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148113626712031232(String)
2019-07-08 14:16:51.043 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 14:16:51.043 DEBUG 12160 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 14:16:51.044 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 14:16:51.044 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_dashang_order(String), trade_no(String), 140(Integer), varchar(64)(String), 支付宝专用的号(String), 支付宝专用的号(String), tradeNo(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148113626913357824(String)
2019-07-08 14:16:51.090 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 14:16:51.090 DEBUG 12160 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 14:16:51.091 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 14:16:51.091 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_dashang_order(String), pay_channel(String), 150(Integer), varchar(64)(String), 支付类型(String), 支付类型(String), payChannel(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148113627114684416(String)
2019-07-08 14:16:51.137 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 14:16:51.137 DEBUG 12160 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 14:16:51.138 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 14:16:51.138 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_dashang_order(String), del_flag(String), 160(Integer), varchar(64)(String), 是否删除(String), 是否删除(String), delFlag(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148113627311816704(String)
2019-07-08 14:16:51.184 DEBUG 12160 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 14:16:51.420 DEBUG 12160 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\resources\mappings\modules\app\DashangOrderDao.xml
2019-07-08 14:16:51.432 DEBUG 12160 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.app.dao.DashangOrderDao">
	
	<!-- 查询数据
	<select id="findList" resultType="DashangOrder">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2019-07-08 14:16:51.447 DEBUG 12160 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\resources\mappings\modules\app\DashangOrderDao.xml
2019-07-08 14:16:51.448 DEBUG 12160 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\java\com\jeesite\modules\app\entity\DashangOrder.java
2019-07-08 14:16:51.488 DEBUG 12160 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.app.entity;

import javax.validation.constraints.NotBlank;
import org.hibernate.validator.constraints.Length;
import java.util.Date;
import com.jeesite.common.mybatis.annotation.JoinTable;
import com.jeesite.common.mybatis.annotation.JoinTable.Type;
import com.fasterxml.jackson.annotation.JsonFormat;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * sys_dashang_orderEntity
 * @author 范耘诚
 * @version 2019-07-08
 */
@Table(name="sys_dashang_order", alias="a", columns={
		@Column(name="id", attrName="id", label="主键", isPK=true),
		@Column(name="order_no", attrName="orderNo", label="订单编号"),
		@Column(name="order_status", attrName="orderStatus", label="订单状态订单状态 0未付款 1已付款, 3已使用"),
		@Column(name="count", attrName="count", label="订单数量"),
		@Column(name="total_price", attrName="totalPrice", label="订单总价"),
		@Column(name="come_cost", attrName="comeCost", label="订单单价"),
		@Column(name="docid", attrName="docid", label="医生id"),
		@Column(name="userid", attrName="userid", label="用户id"),
		@Column(name="create_date", attrName="createDate", label="创建时间", isUpdate=false, isQuery=false),
		@Column(name="update_date", attrName="updateDate", label="更新时间", isQuery=false),
		@Column(name="remarks", attrName="remarks", label="备注", queryType=QueryType.LIKE),
		@Column(name="out_trade_no", attrName="outTradeNo", label="第三方编号"),
		@Column(name="pay_date", attrName="payDate", label="支付时间"),
		@Column(name="trade_no", attrName="tradeNo", label="支付宝专用的号"),
		@Column(name="pay_channel", attrName="payChannel", label="支付类型"),
		@Column(name="del_flag", attrName="delFlag", label="是否删除"),
	}, orderBy="a.update_date DESC"
)
public class DashangOrder extends DataEntity<DashangOrder> {
	
	private static final long serialVersionUID = 1L;
	private String orderNo;		// 订单编号
	private String orderStatus;		// 订单状态订单状态 0未付款 1已付款, 3已使用
	private String count;		// 订单数量
	private String totalPrice;		// 订单总价
	private String comeCost;		// 订单单价
	private String docid;		// 医生id
	private String userid;		// 用户id
	private String outTradeNo;		// 第三方编号
	private Date payDate;		// 支付时间
	private String tradeNo;		// 支付宝专用的号
	private String payChannel;		// 支付类型
	private String delFlag;		// 是否删除
	
	public DashangOrder() {
		this(null);
	}

	public DashangOrder(String id){
		super(id);
	}
	
	@NotBlank(message="订单编号不能为空")
	@Length(min=0, max=64, message="订单编号长度不能超过 64 个字符")
	public String getOrderNo() {
		return orderNo;
	}

	public void setOrderNo(String orderNo) {
		this.orderNo = orderNo;
	}
	
	@Length(min=0, max=64, message="订单状态订单状态 0未付款 1已付款, 3已使用长度不能超过 64 个字符")
	public String getOrderStatus() {
		return orderStatus;
	}

	public void setOrderStatus(String orderStatus) {
		this.orderStatus = orderStatus;
	}
	
	@Length(min=0, max=64, message="订单数量长度不能超过 64 个字符")
	public String getCount() {
		return count;
	}

	public void setCount(String count) {
		this.count = count;
	}
	
	@Length(min=0, max=64, message="订单总价长度不能超过 64 个字符")
	public String getTotalPrice() {
		return totalPrice;
	}

	public void setTotalPrice(String totalPrice) {
		this.totalPrice = totalPrice;
	}
	
	@Length(min=0, max=64, message="订单单价长度不能超过 64 个字符")
	public String getComeCost() {
		return comeCost;
	}

	public void setComeCost(String comeCost) {
		this.comeCost = comeCost;
	}
	
	@Length(min=0, max=64, message="医生id长度不能超过 64 个字符")
	public String getDocid() {
		return docid;
	}

	public void setDocid(String docid) {
		this.docid = docid;
	}
	
	@Length(min=0, max=64, message="用户id长度不能超过 64 个字符")
	public String getUserid() {
		return userid;
	}

	public void setUserid(String userid) {
		this.userid = userid;
	}
	
	@Length(min=0, max=64, message="第三方编号长度不能超过 64 个字符")
	public String getOutTradeNo() {
		return outTradeNo;
	}

	public void setOutTradeNo(String outTradeNo) {
		this.outTradeNo = outTradeNo;
	}
	
	@JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	public Date getPayDate() {
		return payDate;
	}

	public void setPayDate(Date payDate) {
		this.payDate = payDate;
	}
	
	@Length(min=0, max=64, message="支付宝专用的号长度不能超过 64 个字符")
	public String getTradeNo() {
		return tradeNo;
	}

	public void setTradeNo(String tradeNo) {
		this.tradeNo = tradeNo;
	}
	
	@Length(min=0, max=64, message="支付类型长度不能超过 64 个字符")
	public String getPayChannel() {
		return payChannel;
	}

	public void setPayChannel(String payChannel) {
		this.payChannel = payChannel;
	}
	
	@Length(min=0, max=64, message="是否删除长度不能超过 64 个字符")
	public String getDelFlag() {
		return delFlag;
	}

	public void setDelFlag(String delFlag) {
		this.delFlag = delFlag;
	}
	
}
2019-07-08 14:16:51.507 DEBUG 12160 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\java\com\jeesite\modules\app\entity\DashangOrder.java
2019-07-08 14:16:51.508 DEBUG 12160 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\java\com\jeesite\modules\app\dao\DashangOrderDao.java
2019-07-08 14:16:51.509 DEBUG 12160 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.app.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.app.entity.DashangOrder;

/**
 * sys_dashang_orderDAO接口
 * @author 范耘诚
 * @version 2019-07-08
 */
@MyBatisDao
public interface DashangOrderDao extends CrudDao<DashangOrder> {
	
}
2019-07-08 14:16:51.510 DEBUG 12160 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\java\com\jeesite\modules\app\dao\DashangOrderDao.java
2019-07-08 14:16:51.608 DEBUG 12160 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 02:16:51.603  用时: 1秒  URI: /js/a/gen/genTable/save  总内存: 383MB  已用内存: 274.672MB
2019-07-08 14:16:51.626 DEBUG 12160 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 02:16:51.626  URI: /js/a/gen/genTable/listData
2019-07-08 14:16:51.675 DEBUG 12160 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", (SELECT count(1) FROM js_gen_table WHERE parent_table_name=a.table_name) AS "childNum" FROM js_gen_table a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2019-07-08 14:16:51.676 DEBUG 12160 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:16:51.677 DEBUG 12160 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM js_gen_table a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?) 
2019-07-08 14:16:51.677 DEBUG 12160 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2019-07-08 14:16:51.700 DEBUG 12160 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", (SELECT count(1) FROM js_gen_table WHERE parent_table_name=a.table_name) AS "childNum" FROM js_gen_table a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20,20 
2019-07-08 14:16:51.700 DEBUG 12160 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2019-07-08 14:16:51.730 DEBUG 12160 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 18
2019-07-08 14:16:51.746 DEBUG 12160 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 14:16:51.746 DEBUG 12160 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4254ab9c] will be managed by Spring
2019-07-08 14:16:51.746 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:16:51.747 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148113699789389824(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 14:16:51.607(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=sys_dashang_order&comments=打赏订单表&className=DashangOrder&functionAuthor=范耘诚&parentTableName=&parentTableFkName=&remarks=打赏订单表&columnList[0].id=1148113624396775424&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=id&columnList[0].comments=主键&columnList[0].columnType=varchar(64)&columnList[0].attrType=String&columnList[0].fullAttrName=id&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=6/4/8&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1148113624585519104&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=order_no&columnList[1].comments=订单编号&columnList[1].columnType=varchar(64)&columnList[1].attrType=String&columnList[1].fullAttrName=orderNo&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].isRequired=1&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=6/4/8&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[2].id=1148113624778457088&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=order_status&columnList[2].comments=订单状态订单状态 0未付款 1已付款, 3已使用&columnList[2].columnType=varchar(64)&columnList[2].attrType=String&columnList[2].fullAttrName=orderStatus&!columnList[2].isPk=&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&columnList[2].isUpdate=1&!columnList[2].isList=&columnList[2].isList=1&!columnList[2].isQuery=&columnList[2].isQuery=1&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].showType=input&columnList[2].optionMap['gridRowCol']=6/4/8&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&columnList[3].id=1148113624963006464&columnList[3].status=&columnList[3].columnSort=40&columnList[3].columnName=count&columnList[3].comments=订单数量&columnList[3].columnType=varchar(64)&columnList[3].attrType=String&columnList[3].fullAttrName=count&!columnList[3].isPk=&!columnList[3].isInsert=&columnList[3].isInsert=1&!columnList[3].isUpdate=&columnList[3].isUpdate=1&!columnList[3].isList=&columnList[3].isList=1&!columnList[3].isQuery=&columnList[3].isQuery=1&columnList[3].queryType=EQ&!columnList[3].isEdit=&columnList[3].isEdit=1&!columnList[3].isRequired=&columnList[3].showType=input&columnList[3].optionMap['gridRowCol']=6/4/8&!columnList[3].optionMap['isNewLine']=&columnList[3].optionMap['dictName']=&columnList[3].optionMap['dictType']=&!columnList[3].optionMap['fieldValid']=&columnList[4].id=1148113625151750144&columnList[4].status=&columnList[4].columnSort=50&columnList[4].columnName=total_price&columnList[4].comments=订单总价&columnList[4].columnType=varchar(64)&columnList[4].attrType=String&columnList[4].fullAttrName=totalPrice&!columnList[4].isPk=&!columnList[4].isInsert=&columnList[4].isInsert=1&!columnList[4].isUpdate=&columnList[4].isUpdate=1&!columnList[4].isList=&columnList[4].isList=1&!columnList[4].isQuery=&columnList[4].isQuery=1&columnList[4].queryType=EQ&!columnList[4].isEdit=&columnList[4].isEdit=1&!columnList[4].isRequired=&columnList[4].showType=input&columnList[4].optionMap['gridRowCol']=6/4/8&!columnList[4].optionMap['isNewLine']=&columnList[4].optionMap['dictName']=&columnList[4].optionMap['dictType']=&!columnList[4].optionMap['fieldValid']=&columnList[5].id=1148113625353076736&columnList[5].status=&columnList[5].columnSort=60&columnList[5].columnName=come_cost&columnList[5].comments=订单单价&columnList[5].columnType=varchar(64)&columnList[5].attrType=String&columnList[5].fullAttrName=comeCost&!columnList[5].isPk=&!columnList[5].isInsert=&columnList[5].isInsert=1&!columnList[5].isUpdate=&columnList[5].isUpdate=1&!columnList[5].isList=&columnList[5].isList=1&!columnList[5].isQuery=&columnList[5].isQuery=1&columnList[5].queryType=EQ&!columnList[5].isEdit=&columnList[5].isEdit=1&!columnList[5].isRequired=&columnList[5].showType=input&columnList[5].optionMap['gridRowCol']=6/4/8&!columnList[5].optionMap['isNewLine']=&columnList[5].optionMap['dictName']=&columnList[5].optionMap['dictType']=&!columnList[5].optionMap['fieldValid']=&columnList[6].id=1148113625546014720&columnList[6].status=&columnList[6].columnSort=70&columnList[6].columnName=docid&columnList[6].comments=医生id&columnList[6].columnType=varchar(64)&columnList[6].attrType=String&columnList[6].fullAttrName=docid&!columnList[6].isPk=&!columnList[6].isInsert=&columnList[6].isInsert=1&!columnList[6].isUpdate=&columnList[6].isUpdate=1&!columnList[6].isList=&columnList[6].isList=1&!columnList[6].isQuery=&columnList[6].isQuery=1&columnList[6].queryType=EQ&!columnList[6].isEdit=&columnList[6].isEdit=1&!columnList[6].isRequired=&columnList[6].showType=input&columnList[6].optionMap['gridRowCol']=6/4/8&!columnList[6].optionMap['isNewLine']=&columnList[6].optionMap['dictName']=&columnList[6].optionMap['dictType']=&!columnList[6].optionMap['fieldValid']=&columnList[7].id=1148113625734758400&columnList[7].status=&columnList[7].columnSort=80&columnList[7].columnName=userid&columnList[7].comments=用户id&columnList[7].columnType=varchar(64)&columnList[7].attrType=String&columnList[7].fullAttrName=userid&!columnList[7].isPk=&!columnList[7].isInsert=&columnList[7].isInsert=1&!columnList[7].isUpdate=&columnList[7].isUpdate=1&!columnList[7].isList=&columnList[7].isList=1&!columnList[7].isQuery=&columnList[7].isQuery=1&columnList[7].queryType=EQ&!columnList[7].isEdit=&columnList[7].isEdit=1&!columnList[7].isRequired=&columnList[7].showType=input&columnList[7].optionMap['gridRowCol']=6/4/8&!columnList[7].optionMap['isNewLine']=&columnList[7].optionMap['dictName']=&columnList[7].optionMap['dictType']=&!columnList[7].optionMap['fieldValid']=&columnList[8].id=1148113625927696384&columnList[8].status=&columnList[8].columnSort=90&columnList[8].columnName=create_date&columnList[8].comments=创建时间&columnList[8].columnType=datetime&columnList[8].attrType=java.util.Date&columnList[8].fullAttrName=createDate&!columnList[8].isPk=&!columnList[8].isInsert=&columnList[8].isInsert=1&!columnList[8].isUpdate=&!columnList[8].isList=&!columnList[8].isQuery=&columnList[8].queryType=EQ&!columnList[8].isEdit=&!columnList[8].isRequired=&columnList[8].showType=input&columnList[8].optionMap['gridRowCol']=6/4/8&!columnList[8].optionMap['isNewLine']=&columnList[8].optionMap['dictName']=&columnList[8].optionMap['dictType']=&!columnList[8].optionMap['fieldValid']=&columnList[9].id=1148113626124828672&columnList[9].status=&columnList[9].columnSort=100&columnList[9].columnName=update_date&columnList[9].comments=更新时间&columnList[9].columnType=datetime&columnList[9].attrType=java.util.Date&columnList[9].fullAttrName=updateDate&!columnList[9].isPk=&!columnList[9].isInsert=&columnList[9].isInsert=1&!columnList[9].isUpdate=&columnList[9].isUpdate=1&!columnList[9].isList=&columnList[9].isList=1&!columnList[9].isQuery=&columnList[9].queryType=EQ&!columnList[9].isEdit=&!columnList[9].isRequired=&columnList[9].showType=input&columnList[9].optionMap['gridRowCol']=6/4/8&!columnList[9].optionMap['isNewLine']=&columnList[9].optionMap['dictName']=&columnList[9].optionMap['dictType']=&!columnList[9].optionMap['fieldValid']=&columnList[10].id=1148113626321960960&columnList[10].status=&columnList[10].columnSort=110&columnList[10].columnName=remarks&columnList[10].comments=备注&columnList[10].columnType=varchar(64)&columnList[10].attrType=String&columnList[10].fullAttrName=remarks&!columnList[10].isPk=&!columnList[10].isInsert=&columnList[10].isInsert=1&!columnList[10].isUpdate=&columnList[10].isUpdate=1&!columnList[10].isList=&columnList[10].isList=1&!columnList[10].isQuery=&columnList[10].isQuery=1&columnList[10].queryType=LIKE&!columnList[10].isEdit=&columnList[10].isEdit=1&!columnList[10].isRequired=&columnList[10].showType=textarea&columnList[10].optionMap['gridRowCol']=12/2/10&!columnList[10].optionMap['isNewLine']=&columnList[10].optionMap['isNewLine']=1&columnList[10].optionMap['dictName']=&columnList[10].optionMap['dictType']=&!columnList[10].optionMap['fieldValid']=&columnList[11].id=1148113626514898944&columnList[11].status=&columnList[11].columnSort=120&columnList[11].columnName=out_trade_no&columnList[11].comments=第三方编号&columnList[11].columnType=varchar(64)&columnList[11].attrType=String&columnList[11].fullAttrName=outTradeNo&!columnList[11].isPk=&!columnList[11].isInsert=&columnList[11].isInsert=1&!columnList[11].isUpdate=&columnList[11].isUpdate=1&!columnList[11].isList=&columnList[11].isList=1&!columnList[11].isQuery=&columnList[11].isQuery=1&columnList[11].queryType=EQ&!columnList[11].isEdit=&columnList[11].isEdit=1&!columnList[11].isRequired=&columnList[11].showType=input&columnList[11].optionMap['gridRowCol']=6/4/8&!columnList[11].optionMap['isNewLine']=&columnList[11].optionMap['dictName']=&columnList[11].optionMap['dictType']=&!columnList[11].optionMap['fieldValid']=&columnList[12].id=1148113626712031232&columnList[12].status=&columnList[12].columnSort=130&columnList[12].columnName=pay_date&columnList[12].comments=支付时间&columnList[12].columnType=datetime&columnList[12].attrType=java.util.Date&columnList[12].fullAttrName=payDate&!columnList[12].isPk=&!columnList[12].isInsert=&columnList[12].isInsert=1&!columnList[12].isUpdate=&columnList[12].isUpdate=1&!columnList[12].isList=&columnList[12].isList=1&!columnList[12].isQuery=&columnList[12].isQuery=1&columnList[12].queryType=EQ&!columnList[12].isEdit=&columnList[12].isEdit=1&!columnList[12].isRequired=&columnList[12].showType=datetime&columnList[12].optionMap['gridRowCol']=6/4/8&!columnList[12].optionMap['isNewLine']=&columnList[12].optionMap['dictName']=&columnList[12].optionMap['dictType']=&!columnList[12].optionMap['fieldValid']=&columnList[13].id=1148113626913357824&columnList[13].status=&columnList[13].columnSort=140&columnList[13].columnName=trade_no&columnList[13].comments=支付宝专用的号&columnList[13].columnType=varchar(64)&columnList[13].attrType=String&columnList[13].fullAttrName=tradeNo&!columnList[13].isPk=&!columnList[13].isInsert=&columnList[13].isInsert=1&!columnList[13].isUpdate=&columnList[13].isUpdate=1&!columnList[13].isList=&columnList[13].isList=1&!columnList[13].isQuery=&columnList[13].isQuery=1&columnList[13].queryType=EQ&!columnList[13].isEdit=&columnList[13].isEdit=1&!columnList[13].isRequired=&columnList[13].showType=input&columnList[13].optionMap['gridRowCol']=6/4/8&!columnList[13].optionMap['isNewLine']=&columnList[13].optionMap['dictName']=&columnList[13].optionMap['dictType']=&!columnList[13].optionMap['fieldValid']=&columnList[14].id=1148113627114684416&columnList[14].status=&columnList[14].columnSort=150&columnList[14].columnName=pay_channel&columnList[14].comments=支付类型&columnList[14].columnType=varchar(64)&columnList[14].attrType=String&columnList[14].fullAttrName=payChannel&!columnList[14].isPk=&!columnList[14].isInsert=&columnList[14].isInsert=1&!columnList[14].isUpdate=&columnList[14].isUpdate=1&!columnList[14].isList=&columnList[14].isList=1&!columnList[14].isQuery=&columnList[14].isQuery=1&columnList[14].queryType=EQ&!columnList[14].isEdit=&columnList[14].isEdit=1&!columnList[14].isRequired=&columnList[14].showType=input&columnList[14].optionMap['gridRowCol']=6/4/8&!columnList[14].optionMap['isNewLine']=&columnList[14].optionMap['dictName']=&columnList[14].optionMap['dictType']=&!columnList[14].optionMap['fieldValid']=&columnList[15].id=1148113627311816704&columnList[15].status=&columnList[15].columnSort=160&columnList[15].columnName=del_flag&columnList[15].comments=是否删除&columnList[15].columnType=varchar(64)&columnList[15].attrType=String&columnList[15].fullAttrName=delFlag&!columnList[15].isPk=&!columnList[15].isInsert=&columnList[15].isInsert=1&!columnList[15].isUpdate=&columnList[15].isUpdate=1&!columnList[15].isList=&columnList[15].isList=1&!columnList[15].isQuery=&columnList[15].isQuery=1&columnList[15].queryType=EQ&!columnList[15].isEdit=&columnList[15].isEdit=1&!columnList[15].isRequired=&columnList[15].showType=input&columnList[15].optionMap['gridRowCol']=6/4/8&!columnList[15].optionMap['isNewLine']=&columnList[15].optionMap['dictName']=&columnList[15].optionMap['dictType']=&!columnList[15].optionMap['fieldValid']=&tplCategory=dao&packageName=com.jeesite.modules&moduleName=app&subModuleName=&functionName=sys_dashang_order&functionNameSimple=sys_dashang_order&genBaseDir=E:\gitlabHome\HaoLangZhongProject\HaoLangZhong&optionMap['isHaveDisableEnable']=0&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&optionMap['isImageUpload']=0&optionMap['isFileUpload']=0&genFlag=2&!replaceFile=0(String), sys_dashang_order(String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 1473(Long)
2019-07-08 14:16:51.799 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 14:16:51.821 DEBUG 12160 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 02:16:51.819  用时: 193毫秒  URI: /js/a/gen/genTable/listData  总内存: 383MB  已用内存: 277.115MB
2019-07-08 14:16:51.952 DEBUG 12160 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 14:16:51.953 DEBUG 12160 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2e47238f] will be managed by Spring
2019-07-08 14:16:51.953 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 14:16:51.953 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148113700686970880(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 14:16:51.821(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=2&pageSize=20&orderBy=(String), (String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 193(Long)
2019-07-08 14:16:51.998 DEBUG 12160 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 15:11:16.424 INFO  13116 [           main] [com.jeesite.modules.Application        ] - Starting Application on DESKTOP-FVHI4E5 with PID 13116 (E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\webapp\WEB-INF\classes started by 1111111 in E:\gitlabHome\HaoLangZhongProject\HaoLangZhong)
2019-07-08 15:11:16.439 DEBUG 13116 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
2019-07-08 15:11:16.439 INFO  13116 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2019-07-08 15:11:20.259 INFO  13116 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2019-07-08 15:11:20.260 INFO  13116 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2019-07-08 15:11:25.589 INFO  13116 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/15040
2019-07-08 15:11:25.589 INFO  13116 [           main] [com.jeesite.common.config.Global       ] - user.dir: E:/gitlabHome/HaoLangZhongProject/HaoLangZhong
2019-07-08 15:11:25.589 INFO  13116 [           main] [com.jeesite.common.config.Global       ] - logPath: E:/gitlabHome/HaoLangZhongProject/HaoLangZhong/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.1.3 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.1

    您当前的版本为社区版，官方网站：http://jeesite.com

    机器码是：6c59ab5175477606a72e1628bfd13f1a
    产品名称：JeeSite Demo
    公司名称：ThinkGem

===================================================================

2019-07-08 15:11:29.765 INFO  13116 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2019-07-08 15:11:30.998 DEBUG 13116 [           main] [c.j.common.datasource.RoutingDataSource] - Set default target data source success.
2019-07-08 15:11:38.729 DEBUG 13116 [           main] [com.jeesite.common.beetl.BeetlUtils    ] - Beetl config files: [classpath:/config/beetl-core.properties, classpath:/config/beetl.properties]
2019-07-08 15:11:39.124 DEBUG 13116 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.module_code AS "moduleCode", a.module_name AS "moduleName", a.description AS "description", a.main_class_name AS "mainClassName", a.current_version AS "currentVersion", a.upgrade_info AS "upgradeInfo" FROM js_sys_module a WHERE a.status = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2019-07-08 15:11:39.161 DEBUG 13116 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7a05cdc8] will not be managed by Spring
2019-07-08 15:11:39.175 DEBUG 13116 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.module_code AS "moduleCode", a.module_name AS "moduleName", a.description AS "description", a.main_class_name AS "mainClassName", a.current_version AS "currentVersion", a.upgrade_info AS "upgradeInfo" FROM js_sys_module a WHERE a.status = ? ORDER BY a.update_date DESC 
2019-07-08 15:11:39.232 DEBUG 13116 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2019-07-08 15:11:39.273 DEBUG 13116 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 2
2019-07-08 15:11:39.427 DEBUG 13116 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.user_code AS "userCode", a.login_code AS "loginCode", a.user_name AS "userName", a.password AS "password", a.email AS "email", a.mobile AS "mobile", a.phone AS "phone", a.sex AS "sex", a.avatar AS "avatar", a.sign AS "sign", a.wx_openid AS "wxOpenid", a.mobile_imei AS "mobileImei", a.user_type AS "userType", a.ref_code AS "refCode", a.ref_name AS "refName", a.mgr_type AS "mgrType", a.pwd_security_level AS "pwdSecurityLevel", a.pwd_update_date AS "pwdUpdateDate", a.pwd_update_record AS "pwdUpdateRecord", a.pwd_question AS "pwdQuestion", a.pwd_question_answer AS "pwdQuestionAnswer", a.pwd_question_2 AS "pwdQuestion2", a.pwd_question_answer_2 AS "pwdQuestionAnswer2", a.pwd_question_3 AS "pwdQuestion3", a.pwd_question_answer_3 AS "pwdQuestionAnswer3", a.pwd_quest_update_date AS "pwdQuestUpdateDate", a.last_login_ip AS "lastLoginIp", a.last_login_date AS "lastLoginDate", a.freeze_date AS "freezeDate", a.freeze_cause AS "freezeCause", a.user_weight AS "userWeight", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_user a WHERE a.`user_code` = #{userCode}
2019-07-08 15:11:39.428 DEBUG 13116 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7a05cdc8] will be managed by Spring
2019-07-08 15:11:39.429 DEBUG 13116 [           main] [com.jeesite.modules.sys.dao.UserDao.get] - ==>  Preparing: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.user_code AS "userCode", a.login_code AS "loginCode", a.user_name AS "userName", a.password AS "password", a.email AS "email", a.mobile AS "mobile", a.phone AS "phone", a.sex AS "sex", a.avatar AS "avatar", a.sign AS "sign", a.wx_openid AS "wxOpenid", a.mobile_imei AS "mobileImei", a.user_type AS "userType", a.ref_code AS "refCode", a.ref_name AS "refName", a.mgr_type AS "mgrType", a.pwd_security_level AS "pwdSecurityLevel", a.pwd_update_date AS "pwdUpdateDate", a.pwd_update_record AS "pwdUpdateRecord", a.pwd_question AS "pwdQuestion", a.pwd_question_answer AS "pwdQuestionAnswer", a.pwd_question_2 AS "pwdQuestion2", a.pwd_question_answer_2 AS "pwdQuestionAnswer2", a.pwd_question_3 AS "pwdQuestion3", a.pwd_question_answer_3 AS "pwdQuestionAnswer3", a.pwd_quest_update_date AS "pwdQuestUpdateDate", a.last_login_ip AS "lastLoginIp", a.last_login_date AS "lastLoginDate", a.freeze_date AS "freezeDate", a.freeze_cause AS "freezeCause", a.user_weight AS "userWeight", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_user a WHERE a.`user_code` = ? 
2019-07-08 15:11:39.430 DEBUG 13116 [           main] [com.jeesite.modules.sys.dao.UserDao.get] - ==> Parameters: system(String)
2019-07-08 15:11:39.457 DEBUG 13116 [           main] [com.jeesite.modules.sys.dao.UserDao.get] - <==      Total: 1
2019-07-08 15:11:39.528 DEBUG 13116 [           main] [c.j.m.s.dao.RoleDao.findListByUserCode ] - ==>  Preparing: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.role_code AS "roleCode", a.role_name AS "roleName", a.role_type AS "roleType", a.role_sort AS "roleSort", a.is_sys AS "isSys", a.user_type AS "userType", a.data_scope AS "dataScope" FROM js_sys_role a JOIN js_sys_user_role ur ON a.role_code = ur.role_code WHERE a.status = ? AND ur.user_code = ? ORDER BY a.role_sort ASC 
2019-07-08 15:11:39.529 DEBUG 13116 [           main] [c.j.m.s.dao.RoleDao.findListByUserCode ] - ==> Parameters: 0(String), system(String)
2019-07-08 15:11:39.552 DEBUG 13116 [           main] [c.j.m.s.dao.RoleDao.findListByUserCode ] - <==      Total: 0
2019-07-08 15:11:39.603 DEBUG 13116 [           main] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 258毫秒: UPDATE js_sys_menu SET `status` = #{param1.status}, `update_by` = #{param1.updateBy}, `update_date` = #{param1.updateDate} WHERE status != #{param2.STATUS_DELETE} AND module_codes LIKE #{param2.sqlMap.where#module_codes#LIKE1}
2019-07-08 15:11:39.604 DEBUG 13116 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - ==>  Preparing: UPDATE js_sys_menu SET `status` = ?, `update_by` = ?, `update_date` = ? WHERE status != ? AND module_codes LIKE ? 
2019-07-08 15:11:39.606 DEBUG 13116 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - ==> Parameters: 2(String), system(String), 2019-07-08 15:11:39.602(Timestamp), 1(String), %cms%(String)
2019-07-08 15:11:39.653 DEBUG 13116 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - <==    Updates: 7
2019-07-08 15:11:39.781 DEBUG 13116 [           main] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 3毫秒: UPDATE js_sys_menu SET `status` = #{param1.status}, `update_by` = #{param1.updateBy}, `update_date` = #{param1.updateDate} WHERE status != #{param2.STATUS_DELETE} AND module_codes LIKE #{param2.sqlMap.where#module_codes#LIKE1}
2019-07-08 15:11:39.782 DEBUG 13116 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7a05cdc8] will be managed by Spring
2019-07-08 15:11:39.782 DEBUG 13116 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - ==>  Preparing: UPDATE js_sys_menu SET `status` = ?, `update_by` = ?, `update_date` = ? WHERE status != ? AND module_codes LIKE ? 
2019-07-08 15:11:39.783 DEBUG 13116 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - ==> Parameters: 0(String), system(String), 2019-07-08 15:11:39.781(Timestamp), 1(String), %core%(String)
2019-07-08 15:11:39.830 DEBUG 13116 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - <==    Updates: 70
2019-07-08 15:11:42.248 INFO  13116 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8980 (http) with context path '/js'
2019-07-08 15:11:42.252 INFO  13116 [           main] [com.jeesite.modules.Application        ] - Started Application in 27.327 seconds (JVM running for 31.18)
2019-07-08 15:12:06.848 DEBUG 13116 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.config_name AS "configName", a.config_key AS "configKey", a.config_value AS "configValue", a.is_sys AS "isSys", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_sys_config a ORDER BY a.config_key
2019-07-08 15:12:06.849 DEBUG 13116 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7a05cdc8] will not be managed by Spring
2019-07-08 15:12:06.850 DEBUG 13116 [nio-8980-exec-2] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.id AS "id", a.config_name AS "configName", a.config_key AS "configKey", a.config_value AS "configValue", a.is_sys AS "isSys", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_sys_config a ORDER BY a.config_key 
2019-07-08 15:12:06.850 DEBUG 13116 [nio-8980-exec-2] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2019-07-08 15:12:06.882 DEBUG 13116 [nio-8980-exec-2] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2019-07-08 15:39:35.866 INFO  18888 [           main] [com.jeesite.modules.Application        ] - Starting Application on DESKTOP-FVHI4E5 with PID 18888 (E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\webapp\WEB-INF\classes started by 1111111 in E:\gitlabHome\HaoLangZhongProject\HaoLangZhong)
2019-07-08 15:39:35.871 DEBUG 18888 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
2019-07-08 15:39:35.871 INFO  18888 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2019-07-08 15:39:39.820 INFO  18888 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2019-07-08 15:39:39.821 INFO  18888 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2019-07-08 15:39:40.932 INFO  18888 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/15040
2019-07-08 15:39:40.932 INFO  18888 [           main] [com.jeesite.common.config.Global       ] - user.dir: E:/gitlabHome/HaoLangZhongProject/HaoLangZhong
2019-07-08 15:39:40.933 INFO  18888 [           main] [com.jeesite.common.config.Global       ] - logPath: E:/gitlabHome/HaoLangZhongProject/HaoLangZhong/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.1.3 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.1

    您当前的版本为社区版，官方网站：http://jeesite.com

    机器码是：6c59ab5175477606a72e1628bfd13f1a
    产品名称：JeeSite Demo
    公司名称：ThinkGem

===================================================================

2019-07-08 15:39:42.508 INFO  18888 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2019-07-08 15:39:43.978 DEBUG 18888 [           main] [c.j.common.datasource.RoutingDataSource] - Set default target data source success.
2019-07-08 15:39:52.933 DEBUG 18888 [           main] [com.jeesite.common.beetl.BeetlUtils    ] - Beetl config files: [classpath:/config/beetl-core.properties, classpath:/config/beetl.properties]
2019-07-08 15:39:54.318 DEBUG 18888 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.module_code AS "moduleCode", a.module_name AS "moduleName", a.description AS "description", a.main_class_name AS "mainClassName", a.current_version AS "currentVersion", a.upgrade_info AS "upgradeInfo" FROM js_sys_module a WHERE a.status = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2019-07-08 15:39:54.339 DEBUG 18888 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will not be managed by Spring
2019-07-08 15:39:54.370 DEBUG 18888 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.module_code AS "moduleCode", a.module_name AS "moduleName", a.description AS "description", a.main_class_name AS "mainClassName", a.current_version AS "currentVersion", a.upgrade_info AS "upgradeInfo" FROM js_sys_module a WHERE a.status = ? ORDER BY a.update_date DESC 
2019-07-08 15:39:54.457 DEBUG 18888 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2019-07-08 15:39:54.506 DEBUG 18888 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 2
2019-07-08 15:39:55.015 DEBUG 18888 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.user_code AS "userCode", a.login_code AS "loginCode", a.user_name AS "userName", a.password AS "password", a.email AS "email", a.mobile AS "mobile", a.phone AS "phone", a.sex AS "sex", a.avatar AS "avatar", a.sign AS "sign", a.wx_openid AS "wxOpenid", a.mobile_imei AS "mobileImei", a.user_type AS "userType", a.ref_code AS "refCode", a.ref_name AS "refName", a.mgr_type AS "mgrType", a.pwd_security_level AS "pwdSecurityLevel", a.pwd_update_date AS "pwdUpdateDate", a.pwd_update_record AS "pwdUpdateRecord", a.pwd_question AS "pwdQuestion", a.pwd_question_answer AS "pwdQuestionAnswer", a.pwd_question_2 AS "pwdQuestion2", a.pwd_question_answer_2 AS "pwdQuestionAnswer2", a.pwd_question_3 AS "pwdQuestion3", a.pwd_question_answer_3 AS "pwdQuestionAnswer3", a.pwd_quest_update_date AS "pwdQuestUpdateDate", a.last_login_ip AS "lastLoginIp", a.last_login_date AS "lastLoginDate", a.freeze_date AS "freezeDate", a.freeze_cause AS "freezeCause", a.user_weight AS "userWeight", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_user a WHERE a.`user_code` = #{userCode}
2019-07-08 15:39:55.016 DEBUG 18888 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will be managed by Spring
2019-07-08 15:39:55.017 DEBUG 18888 [           main] [com.jeesite.modules.sys.dao.UserDao.get] - ==>  Preparing: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.user_code AS "userCode", a.login_code AS "loginCode", a.user_name AS "userName", a.password AS "password", a.email AS "email", a.mobile AS "mobile", a.phone AS "phone", a.sex AS "sex", a.avatar AS "avatar", a.sign AS "sign", a.wx_openid AS "wxOpenid", a.mobile_imei AS "mobileImei", a.user_type AS "userType", a.ref_code AS "refCode", a.ref_name AS "refName", a.mgr_type AS "mgrType", a.pwd_security_level AS "pwdSecurityLevel", a.pwd_update_date AS "pwdUpdateDate", a.pwd_update_record AS "pwdUpdateRecord", a.pwd_question AS "pwdQuestion", a.pwd_question_answer AS "pwdQuestionAnswer", a.pwd_question_2 AS "pwdQuestion2", a.pwd_question_answer_2 AS "pwdQuestionAnswer2", a.pwd_question_3 AS "pwdQuestion3", a.pwd_question_answer_3 AS "pwdQuestionAnswer3", a.pwd_quest_update_date AS "pwdQuestUpdateDate", a.last_login_ip AS "lastLoginIp", a.last_login_date AS "lastLoginDate", a.freeze_date AS "freezeDate", a.freeze_cause AS "freezeCause", a.user_weight AS "userWeight", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_user a WHERE a.`user_code` = ? 
2019-07-08 15:39:55.053 DEBUG 18888 [           main] [com.jeesite.modules.sys.dao.UserDao.get] - ==> Parameters: system(String)
2019-07-08 15:39:55.080 DEBUG 18888 [           main] [com.jeesite.modules.sys.dao.UserDao.get] - <==      Total: 1
2019-07-08 15:39:55.124 DEBUG 18888 [           main] [c.j.m.s.dao.RoleDao.findListByUserCode ] - ==>  Preparing: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.role_code AS "roleCode", a.role_name AS "roleName", a.role_type AS "roleType", a.role_sort AS "roleSort", a.is_sys AS "isSys", a.user_type AS "userType", a.data_scope AS "dataScope" FROM js_sys_role a JOIN js_sys_user_role ur ON a.role_code = ur.role_code WHERE a.status = ? AND ur.user_code = ? ORDER BY a.role_sort ASC 
2019-07-08 15:39:55.124 DEBUG 18888 [           main] [c.j.m.s.dao.RoleDao.findListByUserCode ] - ==> Parameters: 0(String), system(String)
2019-07-08 15:39:55.148 DEBUG 18888 [           main] [c.j.m.s.dao.RoleDao.findListByUserCode ] - <==      Total: 0
2019-07-08 15:39:55.212 DEBUG 18888 [           main] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 639毫秒: UPDATE js_sys_menu SET `status` = #{param1.status}, `update_by` = #{param1.updateBy}, `update_date` = #{param1.updateDate} WHERE status != #{param2.STATUS_DELETE} AND module_codes LIKE #{param2.sqlMap.where#module_codes#LIKE1}
2019-07-08 15:39:55.213 DEBUG 18888 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - ==>  Preparing: UPDATE js_sys_menu SET `status` = ?, `update_by` = ?, `update_date` = ? WHERE status != ? AND module_codes LIKE ? 
2019-07-08 15:39:55.216 DEBUG 18888 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - ==> Parameters: 2(String), system(String), 2019-07-08 15:39:55.212(Timestamp), 1(String), %cms%(String)
2019-07-08 15:39:55.263 DEBUG 18888 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - <==    Updates: 7
2019-07-08 15:39:55.397 DEBUG 18888 [           main] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 2毫秒: UPDATE js_sys_menu SET `status` = #{param1.status}, `update_by` = #{param1.updateBy}, `update_date` = #{param1.updateDate} WHERE status != #{param2.STATUS_DELETE} AND module_codes LIKE #{param2.sqlMap.where#module_codes#LIKE1}
2019-07-08 15:39:55.397 DEBUG 18888 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will be managed by Spring
2019-07-08 15:39:55.397 DEBUG 18888 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - ==>  Preparing: UPDATE js_sys_menu SET `status` = ?, `update_by` = ?, `update_date` = ? WHERE status != ? AND module_codes LIKE ? 
2019-07-08 15:39:55.398 DEBUG 18888 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - ==> Parameters: 0(String), system(String), 2019-07-08 15:39:55.396(Timestamp), 1(String), %core%(String)
2019-07-08 15:39:55.444 DEBUG 18888 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - <==    Updates: 70
2019-07-08 15:39:57.510 INFO  18888 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8980 (http) with context path '/js'
2019-07-08 15:39:57.514 INFO  18888 [           main] [com.jeesite.modules.Application        ] - Started Application in 22.552 seconds (JVM running for 23.273)
2019-07-08 15:40:06.799 DEBUG 18888 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.id AS "id", a.config_name AS "configName", a.config_key AS "configKey", a.config_value AS "configValue", a.is_sys AS "isSys", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_sys_config a ORDER BY a.config_key
2019-07-08 15:40:06.801 DEBUG 18888 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will not be managed by Spring
2019-07-08 15:40:06.802 DEBUG 18888 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.id AS "id", a.config_name AS "configName", a.config_key AS "configKey", a.config_value AS "configValue", a.is_sys AS "isSys", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_sys_config a ORDER BY a.config_key 
2019-07-08 15:40:06.803 DEBUG 18888 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2019-07-08 15:40:06.834 DEBUG 18888 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2019-07-08 15:44:54.684 DEBUG 18888 [nio-8980-exec-9] [c.j.c.m.m.provider.InsertSqlProvider   ] - 68毫秒: INSERT INTO sys_dashang_order (`id`, `order_no`, `order_status`, `total_price`, `docid`, `userid`, `create_date`, `update_date`) VALUES (#{id}, #{orderNo}, #{orderStatus}, #{totalPrice}, #{docid}, #{userid}, #{createDate}, #{updateDate})
2019-07-08 15:44:54.686 DEBUG 18888 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will be managed by Spring
2019-07-08 15:44:54.689 DEBUG 18888 [nio-8980-exec-9] [c.j.m.app.dao.DashangOrderDao.insert   ] - ==>  Preparing: INSERT INTO sys_dashang_order (`id`, `order_no`, `order_status`, `total_price`, `docid`, `userid`, `create_date`, `update_date`) VALUES (?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 15:44:54.693 DEBUG 18888 [nio-8980-exec-9] [c.j.m.app.dao.DashangOrderDao.insert   ] - ==> Parameters: 1148135858335137792(String), 070815445454701(String), 0(String), 60(String), 0f2067603f1111e99752bcaec5595fa3(String), 123(String), 2019-07-08 15:44:54.547(Timestamp), 2019-07-08 15:44:54.684(Timestamp)
2019-07-08 15:44:54.749 DEBUG 18888 [nio-8980-exec-9] [c.j.m.app.dao.DashangOrderDao.insert   ] - <==    Updates: 1
2019-07-08 16:13:39.901 INFO  18888 [nio-8980-exec-3] [com.jeesite.common.cache.CacheUtils    ] - removeCache: userCache_system
2019-07-08 16:13:39.969 DEBUG 18888 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will be managed by Spring
2019-07-08 16:13:39.970 DEBUG 18888 [nio-8980-exec-3] [c.j.m.sys.dao.UserDao.updateLoginInfo  ] - ==>  Preparing: UPDATE js_sys_user SET last_login_ip = ?, last_login_date = ? WHERE user_code = ? 
2019-07-08 16:13:39.973 DEBUG 18888 [nio-8980-exec-3] [c.j.m.sys.dao.UserDao.updateLoginInfo  ] - ==> Parameters: 0:0:0:0:0:0:0:1(String), 2019-07-08 16:13:39.954(Timestamp), system(String)
2019-07-08 16:13:40.017 DEBUG 18888 [nio-8980-exec-3] [c.j.m.sys.dao.UserDao.updateLoginInfo  ] - <==    Updates: 1
2019-07-08 16:13:40.198 DEBUG 18888 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 16:13:40.226 DEBUG 18888 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 16:13:40.244 DEBUG 18888 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will be managed by Spring
2019-07-08 16:13:40.244 DEBUG 18888 [nio-8980-exec-3] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 16:13:40.247 DEBUG 18888 [nio-8980-exec-3] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2019-07-08 16:13:40.322 DEBUG 18888 [nio-8980-exec-3] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 70
2019-07-08 16:13:40.412 DEBUG 18888 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will be managed by Spring
2019-07-08 16:13:40.413 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:13:40.535 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148143095812210688(String), loginLogout(String), 系统登录(String), system(String), 超级管理员(String), 2019-07-08 16:13:40.165(Timestamp), /js/a/login(String), POST(String), username=F3EDC7D2C193E0B8DCF554C726719ED2&password=*&validCode=(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 0(Long)
2019-07-08 16:13:40.584 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 16:13:40.791 DEBUG 18888 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.id AS "id", a.dict_name AS "dictName", a.dict_type AS "dictType", a.is_sys AS "isSys" FROM js_sys_dict_type a WHERE a.status = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2019-07-08 16:13:40.792 DEBUG 18888 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will not be managed by Spring
2019-07-08 16:13:40.793 DEBUG 18888 [nio-8980-exec-7] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.id AS "id", a.dict_name AS "dictName", a.dict_type AS "dictType", a.is_sys AS "isSys" FROM js_sys_dict_type a WHERE a.status = ? ORDER BY a.dict_type, a.update_date DESC 
2019-07-08 16:13:40.793 DEBUG 18888 [nio-8980-exec-7] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2019-07-08 16:13:40.824 DEBUG 18888 [nio-8980-exec-7] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2019-07-08 16:13:40.899 DEBUG 18888 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.dict_code AS "dictCode", a.dict_label AS "dictLabelOrig", a.dict_value AS "dictValue", a.dict_type AS "dictType", a.is_sys AS "isSys", a.description AS "description", a.css_style AS "cssStyle", a.css_class AS "cssClass", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_dict_data a WHERE a.status = #{sqlMap.where#status#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2019-07-08 16:13:40.901 DEBUG 18888 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will be managed by Spring
2019-07-08 16:13:40.902 DEBUG 18888 [nio-8980-exec-7] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.dict_code AS "dictCode", a.dict_label AS "dictLabelOrig", a.dict_value AS "dictValue", a.dict_type AS "dictType", a.is_sys AS "isSys", a.description AS "description", a.css_style AS "cssStyle", a.css_class AS "cssClass", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_dict_data a WHERE a.status = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code 
2019-07-08 16:13:40.902 DEBUG 18888 [nio-8980-exec-7] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), 1(String), 0(String)
2019-07-08 16:13:40.975 DEBUG 18888 [nio-8980-exec-7] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 126
2019-07-08 16:13:41.172 DEBUG 18888 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 16:13:41.173 DEBUG 18888 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will be managed by Spring
2019-07-08 16:13:41.174 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 16:13:41.175 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String), default(String), 40(Integer)
2019-07-08 16:13:41.201 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2019-07-08 16:13:41.346 DEBUG 18888 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 16:13:41.347 DEBUG 18888 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will be managed by Spring
2019-07-08 16:13:41.348 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 16:13:41.349 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426039438671872(String), default(String), 40(Integer)
2019-07-08 16:13:41.375 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 7
2019-07-08 16:13:41.512 DEBUG 18888 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 16:13:41.512 DEBUG 18888 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will be managed by Spring
2019-07-08 16:13:41.513 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 16:13:41.513 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426039749050368(String), default(String), 40(Integer)
2019-07-08 16:13:41.539 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 4
2019-07-08 16:13:41.677 DEBUG 18888 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 16:13:41.678 DEBUG 18888 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will be managed by Spring
2019-07-08 16:13:41.680 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 16:13:41.682 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426039933599744(String), default(String), 40(Integer)
2019-07-08 16:13:41.708 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 6
2019-07-08 16:13:41.845 DEBUG 18888 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 16:13:41.845 DEBUG 18888 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will be managed by Spring
2019-07-08 16:13:41.845 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 16:13:41.846 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426041137364992(String), default(String), 40(Integer)
2019-07-08 16:13:41.871 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 2
2019-07-08 16:13:42.013 DEBUG 18888 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 6毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 16:13:42.014 DEBUG 18888 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will be managed by Spring
2019-07-08 16:13:42.017 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 16:13:42.019 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426041611321344(String), default(String), 40(Integer)
2019-07-08 16:13:42.046 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 2
2019-07-08 16:13:42.190 DEBUG 18888 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 16:13:42.191 DEBUG 18888 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will be managed by Spring
2019-07-08 16:13:42.191 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 16:13:42.192 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426042123026432(String), default(String), 40(Integer)
2019-07-08 16:13:42.217 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 2
2019-07-08 16:13:42.359 DEBUG 18888 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 16:13:42.360 DEBUG 18888 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will be managed by Spring
2019-07-08 16:13:42.362 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 16:13:42.364 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426042550845440(String), default(String), 40(Integer)
2019-07-08 16:13:42.390 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2019-07-08 16:13:42.534 DEBUG 18888 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 5毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 16:13:42.535 DEBUG 18888 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will be managed by Spring
2019-07-08 16:13:42.538 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 16:13:42.538 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426043184185344(String), default(String), 40(Integer)
2019-07-08 16:13:42.565 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 7
2019-07-08 16:13:42.703 DEBUG 18888 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 16:13:42.704 DEBUG 18888 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will be managed by Spring
2019-07-08 16:13:42.704 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 16:13:42.705 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426043947548672(String), default(String), 40(Integer)
2019-07-08 16:13:42.730 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 4
2019-07-08 16:13:42.875 DEBUG 18888 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 5毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 16:13:42.877 DEBUG 18888 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will be managed by Spring
2019-07-08 16:13:42.879 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 16:13:42.881 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426046589960192(String), default(String), 40(Integer)
2019-07-08 16:13:42.910 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 7
2019-07-08 16:13:43.053 DEBUG 18888 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 16:13:43.053 DEBUG 18888 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will be managed by Spring
2019-07-08 16:13:43.054 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 16:13:43.055 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426135861526528(String), default(String), 40(Integer)
2019-07-08 16:13:43.080 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2019-07-08 16:13:43.224 DEBUG 18888 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 5毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 16:13:43.225 DEBUG 18888 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will be managed by Spring
2019-07-08 16:13:43.226 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 16:13:43.226 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426182074368000(String), default(String), 40(Integer)
2019-07-08 16:13:43.251 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 5
2019-07-08 16:13:43.386 DEBUG 18888 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 16:13:43.387 DEBUG 18888 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will be managed by Spring
2019-07-08 16:13:43.387 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 16:13:43.388 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426205860265984(String), default(String), 40(Integer)
2019-07-08 16:13:43.413 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 2
2019-07-08 16:13:43.553 DEBUG 18888 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 16:13:43.554 DEBUG 18888 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will be managed by Spring
2019-07-08 16:13:43.556 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 16:13:43.557 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426241822228480(String), default(String), 40(Integer)
2019-07-08 16:13:43.581 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 2
2019-07-08 16:13:43.719 DEBUG 18888 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 16:13:43.720 DEBUG 18888 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will be managed by Spring
2019-07-08 16:13:43.721 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 16:13:43.722 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426277415092224(String), default(String), 40(Integer)
2019-07-08 16:13:43.747 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2019-07-08 16:13:43.885 DEBUG 18888 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 16:13:43.886 DEBUG 18888 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will be managed by Spring
2019-07-08 16:13:43.887 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 16:13:43.888 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426337687240704(String), default(String), 40(Integer)
2019-07-08 16:13:43.913 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 1
2019-07-08 16:13:44.051 DEBUG 18888 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 16:13:44.052 DEBUG 18888 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will be managed by Spring
2019-07-08 16:13:44.053 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 16:13:44.055 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1098426366493720576(String), default(String), 40(Integer)
2019-07-08 16:13:44.082 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 4
2019-07-08 16:13:44.225 DEBUG 18888 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 16:13:44.227 DEBUG 18888 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will be managed by Spring
2019-07-08 16:13:44.228 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 16:13:44.230 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1105274968404209664(String), default(String), 40(Integer)
2019-07-08 16:13:44.255 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 2
2019-07-08 16:13:44.397 DEBUG 18888 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} AND a.parent_code = #{sqlMap.where#parent_code#EQ1} AND a.sys_code = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 16:13:44.398 DEBUG 18888 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will be managed by Spring
2019-07-08 16:13:44.400 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? AND a.parent_code = ? AND a.sys_code = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 16:13:44.401 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1115425480122118144(String), default(String), 40(Integer)
2019-07-08 16:13:44.426 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 1
2019-07-08 16:13:44.823 DEBUG 18888 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.msg_type AS "msgType", a.msg_title AS "msgTitle", a.msg_content AS "msgContent", a.biz_key AS "bizKey", a.biz_type AS "bizType", a.receive_code AS "receiveCode", a.receive_user_code AS "receiveUserCode", a.receive_user_name AS "receiveUserName", a.send_user_code AS "sendUserCode", a.send_user_name AS "sendUserName", a.send_date AS "sendDate", a.is_merge_push AS "isMergePush", a.plan_push_date AS "planPushDate", a.push_number AS "pushNumber", a.push_return_code AS "pushReturnCode", a.push_return_msg_id AS "pushReturnMsgId", a.push_return_content AS "pushReturnContent", a.push_status AS "pushStatus", a.push_date AS "pushDate", a.read_status AS "readStatus", a.read_date AS "readDate" FROM js_sys_msg_push a WHERE a.msg_type = #{sqlMap.where#msg_type#EQ1} AND a.receive_user_code = #{sqlMap.where#receive_user_code#EQ1} AND a.read_status = #{sqlMap.where#read_status#EQ1} ORDER BY a.id DESC
2019-07-08 16:13:44.825 DEBUG 18888 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will be managed by Spring
2019-07-08 16:13:45.053 DEBUG 18888 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.id AS "id", a.msg_type AS "msgType", a.msg_title AS "msgTitle", a.msg_content AS "msgContent", a.biz_key AS "bizKey", a.biz_type AS "bizType", a.receive_code AS "receiveCode", a.receive_user_code AS "receiveUserCode", a.receive_user_name AS "receiveUserName", a.send_user_code AS "sendUserCode", a.send_user_name AS "sendUserName", a.send_date AS "sendDate", a.is_merge_push AS "isMergePush", a.plan_push_date AS "planPushDate", a.push_number AS "pushNumber", a.push_return_code AS "pushReturnCode", a.push_return_msg_id AS "pushReturnMsgId", a.push_return_content AS "pushReturnContent", a.push_status AS "pushStatus", a.push_date AS "pushDate", a.read_status AS "readStatus", a.read_date AS "readDate" FROM js_sys_msg_push a WHERE a.msg_type = #{sqlMap.where#msg_type#EQ1} AND a.receive_user_code = #{sqlMap.where#receive_user_code#EQ1} AND a.read_status = #{sqlMap.where#read_status#EQ1} ORDER BY a.id DESC
2019-07-08 16:13:45.053 DEBUG 18888 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:13:45.074 DEBUG 18888 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 04:13:44.989  URI: /js/a/gen/genTable/list
2019-07-08 16:13:45.115 DEBUG 18888 [nio-8980-exec-6] [c.j.modules.msg.dao.MsgPushDao.findList] - ==>  Preparing: SELECT count(0) FROM js_sys_msg_push a WHERE a.msg_type = ? AND a.receive_user_code = ? AND a.read_status = ? 
2019-07-08 16:13:45.115 DEBUG 18888 [nio-8980-exec-3] [c.j.modules.msg.dao.MsgPushDao.findList] - ==>  Preparing: SELECT count(0) FROM js_sys_msg_push a WHERE a.msg_type = ? AND a.receive_user_code = ? AND a.read_status = ? 
2019-07-08 16:13:45.115 DEBUG 18888 [nio-8980-exec-3] [c.j.modules.msg.dao.MsgPushDao.findList] - ==> Parameters: pc(String), system(String), 2(String)
2019-07-08 16:13:45.115 DEBUG 18888 [nio-8980-exec-6] [c.j.modules.msg.dao.MsgPushDao.findList] - ==> Parameters: pc(String), system(String), 2(String)
2019-07-08 16:13:45.156 DEBUG 18888 [nio-8980-exec-6] [c.j.modules.msg.dao.MsgPushDao.findList] - ==>  Preparing: SELECT a.id AS "id", a.msg_type AS "msgType", a.msg_title AS "msgTitle", a.msg_content AS "msgContent", a.biz_key AS "bizKey", a.biz_type AS "bizType", a.receive_code AS "receiveCode", a.receive_user_code AS "receiveUserCode", a.receive_user_name AS "receiveUserName", a.send_user_code AS "sendUserCode", a.send_user_name AS "sendUserName", a.send_date AS "sendDate", a.is_merge_push AS "isMergePush", a.plan_push_date AS "planPushDate", a.push_number AS "pushNumber", a.push_return_code AS "pushReturnCode", a.push_return_msg_id AS "pushReturnMsgId", a.push_return_content AS "pushReturnContent", a.push_status AS "pushStatus", a.push_date AS "pushDate", a.read_status AS "readStatus", a.read_date AS "readDate" FROM js_sys_msg_push a WHERE a.msg_type = ? AND a.receive_user_code = ? AND a.read_status = ? ORDER BY a.id DESC LIMIT 5 
2019-07-08 16:13:45.156 DEBUG 18888 [nio-8980-exec-3] [c.j.modules.msg.dao.MsgPushDao.findList] - ==>  Preparing: SELECT a.id AS "id", a.msg_type AS "msgType", a.msg_title AS "msgTitle", a.msg_content AS "msgContent", a.biz_key AS "bizKey", a.biz_type AS "bizType", a.receive_code AS "receiveCode", a.receive_user_code AS "receiveUserCode", a.receive_user_name AS "receiveUserName", a.send_user_code AS "sendUserCode", a.send_user_name AS "sendUserName", a.send_date AS "sendDate", a.is_merge_push AS "isMergePush", a.plan_push_date AS "planPushDate", a.push_number AS "pushNumber", a.push_return_code AS "pushReturnCode", a.push_return_msg_id AS "pushReturnMsgId", a.push_return_content AS "pushReturnContent", a.push_status AS "pushStatus", a.push_date AS "pushDate", a.read_status AS "readStatus", a.read_date AS "readDate" FROM js_sys_msg_push a WHERE a.msg_type = ? AND a.receive_user_code = ? AND a.read_status = ? ORDER BY a.id DESC LIMIT 5 
2019-07-08 16:13:45.158 DEBUG 18888 [nio-8980-exec-3] [c.j.modules.msg.dao.MsgPushDao.findList] - ==> Parameters: pc(String), system(String), 2(String)
2019-07-08 16:13:45.158 DEBUG 18888 [nio-8980-exec-6] [c.j.modules.msg.dao.MsgPushDao.findList] - ==> Parameters: pc(String), system(String), 2(String)
2019-07-08 16:13:45.151 INFO  18888 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> public java.lang.String com.jeesite.modules.gen.web.GenTableController.list(com.jeesite.modules.gen.entity.GenTable,org.springframework.ui.Model)
2019-07-08 16:13:45.181 DEBUG 18888 [nio-8980-exec-3] [c.j.modules.msg.dao.MsgPushDao.findList] - <==      Total: 0
2019-07-08 16:13:45.182 DEBUG 18888 [nio-8980-exec-6] [c.j.modules.msg.dao.MsgPushDao.findList] - <==      Total: 0
2019-07-08 16:13:45.270 DEBUG 18888 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.id AS "id", a.msg_type AS "msgType", a.msg_title AS "msgTitle", a.msg_content AS "msgContent", a.biz_key AS "bizKey", a.biz_type AS "bizType", a.receive_code AS "receiveCode", a.receive_user_code AS "receiveUserCode", a.receive_user_name AS "receiveUserName", a.send_user_code AS "sendUserCode", a.send_user_name AS "sendUserName", a.send_date AS "sendDate", a.is_merge_push AS "isMergePush", a.plan_push_date AS "planPushDate", a.push_number AS "pushNumber", a.push_return_code AS "pushReturnCode", a.push_return_msg_id AS "pushReturnMsgId", a.push_return_content AS "pushReturnContent", a.push_status AS "pushStatus", a.push_date AS "pushDate", a.read_status AS "readStatus", a.read_date AS "readDate" FROM js_sys_msg_push a WHERE a.msg_type = #{sqlMap.where#msg_type#EQ1} AND a.receive_user_code = #{sqlMap.where#receive_user_code#EQ1} AND a.read_status = #{sqlMap.where#read_status#EQ1} ORDER BY a.id DESC
2019-07-08 16:13:45.271 DEBUG 18888 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will not be managed by Spring
2019-07-08 16:13:45.272 DEBUG 18888 [nio-8980-exec-3] [c.j.modules.msg.dao.MsgPushDao.findList] - ==>  Preparing: SELECT a.id AS "id", a.msg_type AS "msgType", a.msg_title AS "msgTitle", a.msg_content AS "msgContent", a.biz_key AS "bizKey", a.biz_type AS "bizType", a.receive_code AS "receiveCode", a.receive_user_code AS "receiveUserCode", a.receive_user_name AS "receiveUserName", a.send_user_code AS "sendUserCode", a.send_user_name AS "sendUserName", a.send_date AS "sendDate", a.is_merge_push AS "isMergePush", a.plan_push_date AS "planPushDate", a.push_number AS "pushNumber", a.push_return_code AS "pushReturnCode", a.push_return_msg_id AS "pushReturnMsgId", a.push_return_content AS "pushReturnContent", a.push_status AS "pushStatus", a.push_date AS "pushDate", a.read_status AS "readStatus", a.read_date AS "readDate" FROM js_sys_msg_push a WHERE a.msg_type = ? AND a.receive_user_code = ? AND a.read_status = ? ORDER BY a.id DESC 
2019-07-08 16:13:45.273 DEBUG 18888 [nio-8980-exec-3] [c.j.modules.msg.dao.MsgPushDao.findList] - ==> Parameters: pc(String), system(String), 0(String)
2019-07-08 16:13:45.278 DEBUG 18888 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.msg_type AS "msgType", a.msg_title AS "msgTitle", a.msg_content AS "msgContent", a.biz_key AS "bizKey", a.biz_type AS "bizType", a.receive_code AS "receiveCode", a.receive_user_code AS "receiveUserCode", a.receive_user_name AS "receiveUserName", a.send_user_code AS "sendUserCode", a.send_user_name AS "sendUserName", a.send_date AS "sendDate", a.is_merge_push AS "isMergePush", a.plan_push_date AS "planPushDate", a.push_number AS "pushNumber", a.push_return_code AS "pushReturnCode", a.push_return_msg_id AS "pushReturnMsgId", a.push_return_content AS "pushReturnContent", a.push_status AS "pushStatus", a.push_date AS "pushDate", a.read_status AS "readStatus", a.read_date AS "readDate" FROM js_sys_msg_push a WHERE a.msg_type = #{sqlMap.where#msg_type#EQ1} AND a.receive_user_code = #{sqlMap.where#receive_user_code#EQ1} AND a.read_status = #{sqlMap.where#read_status#EQ1} ORDER BY a.id DESC
2019-07-08 16:13:45.296 DEBUG 18888 [nio-8980-exec-3] [c.j.modules.msg.dao.MsgPushDao.findList] - <==      Total: 0
2019-07-08 16:13:45.298 DEBUG 18888 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6eff05e7] will not be managed by Spring
2019-07-08 16:13:45.299 DEBUG 18888 [nio-8980-exec-6] [c.j.modules.msg.dao.MsgPushDao.findList] - ==>  Preparing: SELECT a.id AS "id", a.msg_type AS "msgType", a.msg_title AS "msgTitle", a.msg_content AS "msgContent", a.biz_key AS "bizKey", a.biz_type AS "bizType", a.receive_code AS "receiveCode", a.receive_user_code AS "receiveUserCode", a.receive_user_name AS "receiveUserName", a.send_user_code AS "sendUserCode", a.send_user_name AS "sendUserName", a.send_date AS "sendDate", a.is_merge_push AS "isMergePush", a.plan_push_date AS "planPushDate", a.push_number AS "pushNumber", a.push_return_code AS "pushReturnCode", a.push_return_msg_id AS "pushReturnMsgId", a.push_return_content AS "pushReturnContent", a.push_status AS "pushStatus", a.push_date AS "pushDate", a.read_status AS "readStatus", a.read_date AS "readDate" FROM js_sys_msg_push a WHERE a.msg_type = ? AND a.receive_user_code = ? AND a.read_status = ? ORDER BY a.id DESC 
2019-07-08 16:13:45.420 DEBUG 18888 [nio-8980-exec-6] [c.j.modules.msg.dao.MsgPushDao.findList] - ==> Parameters: pc(String), system(String), 0(String)
2019-07-08 16:13:45.420 DEBUG 18888 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 04:13:45.263  用时: 274毫秒  URI: /js/a/gen/genTable/list  总内存: 736.5MB  已用内存: 615.667MB
2019-07-08 16:13:45.442 DEBUG 18888 [  SaveLogThread] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2019-07-08 16:13:45.443 DEBUG 18888 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:13:45.443 DEBUG 18888 [nio-8980-exec-6] [c.j.modules.msg.dao.MsgPushDao.findList] - <==      Total: 0
2019-07-08 16:13:45.444 DEBUG 18888 [  SaveLogThread] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.parent_code AS "parentCode", a.parent_codes AS "parentCodes", a.tree_sort AS "treeSort", a.tree_sorts AS "treeSorts", a.tree_leaf AS "treeLeaf", a.tree_level AS "treeLevel", a.tree_names AS "treeNames", a.menu_code AS "menuCode", a.menu_name AS "menuNameOrig", a.menu_type AS "menuType", a.menu_href AS "menuHref", a.menu_target AS "menuTarget", a.menu_icon AS "menuIcon", a.menu_color AS "menuColor", a.permission AS "permission", a.weight AS "weight", a.is_show AS "isShow", a.sys_code AS "sysCode", a.module_codes AS "moduleCodes", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_menu a WHERE a.status = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code 
2019-07-08 16:13:45.444 DEBUG 18888 [  SaveLogThread] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2019-07-08 16:13:45.501 DEBUG 18888 [  SaveLogThread] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 70
2019-07-08 16:13:45.596 DEBUG 18888 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 16:13:45.596 DEBUG 18888 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:13:45.597 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:13:45.598 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148143117207355392(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 16:13:45.266(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 274(Long)
2019-07-08 16:13:45.648 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 16:13:45.827 DEBUG 18888 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 04:13:45.827  URI: /js/a/gen/genTable/listData
2019-07-08 16:13:45.979 DEBUG 18888 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", (SELECT count(1) FROM js_gen_table WHERE parent_table_name=a.table_name) AS "childNum" FROM js_gen_table a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2019-07-08 16:13:45.985 DEBUG 18888 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:13:46.054 DEBUG 18888 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM js_gen_table a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?) 
2019-07-08 16:13:46.055 DEBUG 18888 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2019-07-08 16:13:46.081 DEBUG 18888 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", (SELECT count(1) FROM js_gen_table WHERE parent_table_name=a.table_name) AS "childNum" FROM js_gen_table a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20 
2019-07-08 16:13:46.082 DEBUG 18888 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2019-07-08 16:13:46.116 DEBUG 18888 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 20
2019-07-08 16:13:46.266 DEBUG 18888 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 04:13:46.262  用时: 435毫秒  URI: /js/a/gen/genTable/listData  总内存: 736.5MB  已用内存: 633.293MB
2019-07-08 16:13:46.412 DEBUG 18888 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 16:13:46.412 DEBUG 18888 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:13:46.413 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:13:46.414 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148143121401659392(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 16:13:46.266(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 435(Long)
2019-07-08 16:13:46.463 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 16:13:49.111 DEBUG 18888 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 04:13:49.111  URI: /js/a/gen/genTable/form
2019-07-08 16:13:49.480 DEBUG 18888 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.id AS "id", a.dict_name AS "dictName", a.dict_type AS "dictType", a.is_sys AS "isSys" FROM js_sys_dict_type a WHERE a.status = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2019-07-08 16:13:49.481 DEBUG 18888 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will not be managed by Spring
2019-07-08 16:13:49.481 DEBUG 18888 [nio-8980-exec-5] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.id AS "id", a.dict_name AS "dictName", a.dict_type AS "dictType", a.is_sys AS "isSys" FROM js_sys_dict_type a WHERE a.status = ? ORDER BY a.dict_type, a.update_date DESC 
2019-07-08 16:13:49.481 DEBUG 18888 [nio-8980-exec-5] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2019-07-08 16:13:49.509 DEBUG 18888 [nio-8980-exec-5] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2019-07-08 16:13:49.564 DEBUG 18888 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:13:49.565 DEBUG 18888 [nio-8980-exec-5] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.table_name AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.`TABLES` t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.table_name AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.`VIEWS` t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName" 
2019-07-08 16:13:49.565 DEBUG 18888 [nio-8980-exec-5] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2019-07-08 16:13:49.626 DEBUG 18888 [nio-8980-exec-5] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 93
2019-07-08 16:13:49.721 INFO  18888 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableFormSelect <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> public java.lang.String com.jeesite.modules.gen.web.GenTableController.form(com.jeesite.modules.gen.entity.GenTable,java.lang.String,org.springframework.ui.Model,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-08 16:13:49.772 DEBUG 18888 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 04:13:49.768  用时: 657毫秒  URI: /js/a/gen/genTable/form  总内存: 736.5MB  已用内存: 650.926MB
2019-07-08 16:13:49.928 DEBUG 18888 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 16:13:49.929 DEBUG 18888 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:13:49.929 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:13:49.930 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148143136102694912(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 16:13:49.771(Timestamp), /js/a/gen/genTable/form(String), GET(String), (String), (String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 657(Long)
2019-07-08 16:13:49.983 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 16:14:16.847 DEBUG 18888 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 04:14:16.847  URI: /js/a/gen/genTable/form
2019-07-08 16:14:16.897 DEBUG 18888 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = #{tableName}
2019-07-08 16:14:16.899 DEBUG 18888 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:14:16.900 DEBUG 18888 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = ? 
2019-07-08 16:14:16.901 DEBUG 18888 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: sys_air_drug_label(String)
2019-07-08 16:14:16.925 DEBUG 18888 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 0
2019-07-08 16:14:17.071 DEBUG 18888 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = #{tableName}
2019-07-08 16:14:17.072 DEBUG 18888 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:14:17.073 DEBUG 18888 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = ? 
2019-07-08 16:14:17.073 DEBUG 18888 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: sys_air_drug_label(String)
2019-07-08 16:14:17.097 DEBUG 18888 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 0
2019-07-08 16:14:17.237 DEBUG 18888 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:14:17.238 DEBUG 18888 [nio-8980-exec-3] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.table_name AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.`TABLES` t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.table_name AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.`VIEWS` t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName" 
2019-07-08 16:14:17.238 DEBUG 18888 [nio-8980-exec-3] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: sys_air_drug_label(String), sys_air_drug_label(String)
2019-07-08 16:14:17.265 DEBUG 18888 [nio-8980-exec-3] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2019-07-08 16:14:17.267 DEBUG 18888 [nio-8980-exec-3] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.`COLUMNS` t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION 
2019-07-08 16:14:17.268 DEBUG 18888 [nio-8980-exec-3] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: sys_air_drug_label(String)
2019-07-08 16:14:17.295 DEBUG 18888 [nio-8980-exec-3] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 8
2019-07-08 16:14:17.297 DEBUG 18888 [nio-8980-exec-3] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.`COLUMNS` au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY='PRI' AND au.TABLE_NAME = ? 
2019-07-08 16:14:17.297 DEBUG 18888 [nio-8980-exec-3] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: sys_air_drug_label(String)
2019-07-08 16:14:17.321 DEBUG 18888 [nio-8980-exec-3] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 1
2019-07-08 16:14:17.430 DEBUG 18888 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.id AS "id", a.dict_name AS "dictName", a.dict_type AS "dictType", a.is_sys AS "isSys" FROM js_sys_dict_type a WHERE a.status = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2019-07-08 16:14:17.432 DEBUG 18888 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will not be managed by Spring
2019-07-08 16:14:17.433 DEBUG 18888 [nio-8980-exec-3] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.id AS "id", a.dict_name AS "dictName", a.dict_type AS "dictType", a.is_sys AS "isSys" FROM js_sys_dict_type a WHERE a.status = ? ORDER BY a.dict_type, a.update_date DESC 
2019-07-08 16:14:17.434 DEBUG 18888 [nio-8980-exec-3] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2019-07-08 16:14:17.459 DEBUG 18888 [nio-8980-exec-3] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2019-07-08 16:14:17.460 DEBUG 18888 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a ORDER BY a.update_date DESC
2019-07-08 16:14:17.460 DEBUG 18888 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will not be managed by Spring
2019-07-08 16:14:17.461 DEBUG 18888 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a ORDER BY a.update_date DESC 
2019-07-08 16:14:17.461 DEBUG 18888 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2019-07-08 16:14:17.511 DEBUG 18888 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 39
2019-07-08 16:14:17.559 DEBUG 18888 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:14:17.560 DEBUG 18888 [nio-8980-exec-3] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20 
2019-07-08 16:14:17.560 DEBUG 18888 [nio-8980-exec-3] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2019-07-08 16:14:17.587 DEBUG 18888 [nio-8980-exec-3] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 3
2019-07-08 16:14:17.685 INFO  18888 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> public java.lang.String com.jeesite.modules.gen.web.GenTableController.form(com.jeesite.modules.gen.entity.GenTable,java.lang.String,org.springframework.ui.Model,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-08 16:14:17.873 DEBUG 18888 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 04:14:17.872  用时: 1秒  URI: /js/a/gen/genTable/form  总内存: 714MB  已用内存: 111.621MB
2019-07-08 16:14:18.021 DEBUG 18888 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 3毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 16:14:18.023 DEBUG 18888 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:14:18.027 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:14:18.028 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148143253971025920(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 16:14:17.873(Timestamp), /js/a/gen/genTable/form(String), POST(String), isNewRecord=true&tableName=sys_air_drug_label(String), sys_air_drug_label(String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 1025(Long)
2019-07-08 16:14:18.077 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 16:14:34.581 DEBUG 18888 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 04:14:34.581  URI: /js/a/gen/genTable/save
2019-07-08 16:14:34.630 DEBUG 18888 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = #{tableName}
2019-07-08 16:14:34.630 DEBUG 18888 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:14:34.631 DEBUG 18888 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = ? 
2019-07-08 16:14:34.631 DEBUG 18888 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: sys_air_drug_label(String)
2019-07-08 16:14:34.654 DEBUG 18888 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 0
2019-07-08 16:14:35.073 DEBUG 18888 [nio-8980-exec-6] [c.j.c.m.m.provider.InsertSqlProvider   ] - 3毫秒: INSERT INTO js_gen_table (`table_name`, `class_name`, `comments`, `parent_table_name`, `parent_table_fk_name`, `data_source_name`, `tpl_category`, `package_name`, `module_name`, `sub_module_name`, `function_name`, `function_name_simple`, `function_author`, `gen_base_dir`, `options`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`) VALUES (#{tableName}, #{className}, #{comments}, #{parentTableName}, #{parentTableFkName}, #{dataSourceName}, #{tplCategory}, #{packageName}, #{moduleName}, #{subModuleName}, #{functionName}, #{functionNameSimple}, #{functionAuthor}, #{genBaseDir}, #{options}, #{createBy}, #{createDate}, #{updateBy}, #{updateDate}, #{remarks})
2019-07-08 16:14:35.073 DEBUG 18888 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:14:35.075 DEBUG 18888 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table (`table_name`, `class_name`, `comments`, `parent_table_name`, `parent_table_fk_name`, `data_source_name`, `tpl_category`, `package_name`, `module_name`, `sub_module_name`, `function_name`, `function_name_simple`, `function_author`, `gen_base_dir`, `options`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:14:35.076 DEBUG 18888 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.insert ] - ==> Parameters: sys_air_drug_label(String), AirDrugLabel(String), 药品标签表(String), (String), (String), (String), (String), com.jeesite.modules(String), sys(String), (String), 药品标签表(String), 药品标签表(String), 范耘诚(String), E:\gitlabHome\HaoLangZhongProject\HaoLangZhong(String), {"treeViewName":"","isHaveDelete":"1","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isImageUpload":"0"}(String), system(String), 2019-07-08 16:14:35.071(Timestamp), system(String), 2019-07-08 16:14:35.073(Timestamp), 药品标签表(String)
2019-07-08 16:14:35.122 DEBUG 18888 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.insert ] - <==    Updates: 1
2019-07-08 16:14:35.125 DEBUG 18888 [nio-8980-exec-6] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 16:14:35.125 DEBUG 18888 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:14:35.126 DEBUG 18888 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148143326322769920(String), sys_air_drug_label(String), id(String), 10(Integer), bigint(20)(String), 主键(String), 主键(String), id(String), Long(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 16:14:35.173 DEBUG 18888 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 16:14:35.175 DEBUG 18888 [nio-8980-exec-6] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 16:14:35.176 DEBUG 18888 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:14:35.177 DEBUG 18888 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148143326532485120(String), sys_air_drug_label(String), name(String), 20(Integer), varchar(64)(String), 标签名字(String), 标签名字(String), name(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), LIKE(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 16:14:35.223 DEBUG 18888 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 16:14:35.225 DEBUG 18888 [nio-8980-exec-6] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 16:14:35.227 DEBUG 18888 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:14:35.228 DEBUG 18888 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148143326742200320(String), sys_air_drug_label(String), create_date(String), 30(Integer), datetime(String), 创建时间(String), 创建时间(String), createDate(String), java.util.Date(String), (String), 1(String), 1(String), (String), (String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 16:14:35.274 DEBUG 18888 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 16:14:35.276 DEBUG 18888 [nio-8980-exec-6] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 16:14:35.277 DEBUG 18888 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:14:35.279 DEBUG 18888 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148143326956109824(String), sys_air_drug_label(String), update_date(String), 40(Integer), datetime(String), 更新时间(String), 更新时间(String), updateDate(String), java.util.Date(String), (String), 1(String), 1(String), 1(String), 1(String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 16:14:35.326 DEBUG 18888 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 16:14:35.328 DEBUG 18888 [nio-8980-exec-6] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 16:14:35.329 DEBUG 18888 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:14:35.329 DEBUG 18888 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148143327174213632(String), sys_air_drug_label(String), create_by(String), 50(Integer), varchar(64)(String), 创建人(String), 创建人(String), createBy(String), String(String), (String), 1(String), 1(String), (String), (String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 16:14:35.376 DEBUG 18888 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 16:14:35.380 DEBUG 18888 [nio-8980-exec-6] [c.j.c.m.m.provider.InsertSqlProvider   ] - 3毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 16:14:35.381 DEBUG 18888 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:14:35.382 DEBUG 18888 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148143327388123136(String), sys_air_drug_label(String), update_by(String), 60(Integer), varchar(64)(String), 更新人(String), 更新人(String), updateBy(String), String(String), (String), 1(String), 1(String), 1(String), (String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 16:14:35.428 DEBUG 18888 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 16:14:35.432 DEBUG 18888 [nio-8980-exec-6] [c.j.c.m.m.provider.InsertSqlProvider   ] - 3毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 16:14:35.433 DEBUG 18888 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:14:35.434 DEBUG 18888 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148143327606226944(String), sys_air_drug_label(String), remarks(String), 70(Integer), varchar(64)(String), 备注(String), 备注(String), remarks(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), LIKE(String), 1(String), textarea(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/10","dictType":""}(String)
2019-07-08 16:14:35.481 DEBUG 18888 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 16:14:35.483 DEBUG 18888 [nio-8980-exec-6] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 16:14:35.483 DEBUG 18888 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:14:35.485 DEBUG 18888 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148143327824330752(String), sys_air_drug_label(String), del_flag(String), 80(Integer), char(1)(String), 是否删除 0未删除 1删除(String), 是否删除 0未删除 1删除(String), delFlag(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 16:14:35.536 DEBUG 18888 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 16:14:35.614 DEBUG 18888 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 04:14:35.609  用时: 1秒  URI: /js/a/gen/genTable/save  总内存: 714MB  已用内存: 165.116MB
2019-07-08 16:14:35.628 DEBUG 18888 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 04:14:35.628  URI: /js/a/gen/genTable/form
2019-07-08 16:14:35.676 DEBUG 18888 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = #{tableName}
2019-07-08 16:14:35.677 DEBUG 18888 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@ba117a1] will be managed by Spring
2019-07-08 16:14:35.677 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = ? 
2019-07-08 16:14:35.677 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: sys_air_drug_label(String)
2019-07-08 16:14:35.702 DEBUG 18888 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2019-07-08 16:14:35.704 DEBUG 18888 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.table_name AS "genTable.tableName", a.column_name AS "columnName", a.column_sort AS "columnSort", a.column_type AS "columnType", a.column_label AS "columnLabel", a.comments AS "comments", a.attr_name AS "fullAttrName", a.attr_type AS "attrType", a.is_pk AS "isPk", a.is_null AS "isNull", a.is_insert AS "isInsert", a.is_update AS "isUpdate", a.is_list AS "isList", a.is_query AS "isQuery", a.query_type AS "queryType", a.is_edit AS "isEdit", a.show_type AS "showType", a.options AS "options" FROM js_gen_table_column a WHERE a.table_name = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2019-07-08 16:14:35.707 DEBUG 18888 [nio-8980-exec-7] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.id AS "id", a.table_name AS "genTable.tableName", a.column_name AS "columnName", a.column_sort AS "columnSort", a.column_type AS "columnType", a.column_label AS "columnLabel", a.comments AS "comments", a.attr_name AS "fullAttrName", a.attr_type AS "attrType", a.is_pk AS "isPk", a.is_null AS "isNull", a.is_insert AS "isInsert", a.is_update AS "isUpdate", a.is_list AS "isList", a.is_query AS "isQuery", a.query_type AS "queryType", a.is_edit AS "isEdit", a.show_type AS "showType", a.options AS "options" FROM js_gen_table_column a WHERE a.table_name = ? ORDER BY a.column_sort 
2019-07-08 16:14:35.708 DEBUG 18888 [nio-8980-exec-7] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: sys_air_drug_label(String)
2019-07-08 16:14:35.734 DEBUG 18888 [nio-8980-exec-7] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 8
2019-07-08 16:14:35.759 DEBUG 18888 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 16:14:35.760 DEBUG 18888 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:14:35.760 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:14:35.761 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148143328377978880(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 16:14:35.613(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=true&tableName=sys_air_drug_label&comments=药品标签表&className=AirDrugLabel&functionAuthor=范耘诚&parentTableName=&parentTableFkName=&remarks=药品标签表&columnList[0].id=&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=id&columnList[0].comments=主键&columnList[0].columnType=bigint(20)&columnList[0].attrType=Long&columnList[0].fullAttrName=id&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=6/4/8&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=name&columnList[1].comments=标签名字&columnList[1].columnType=varchar(64)&columnList[1].attrType=String&columnList[1].fullAttrName=name&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=LIKE&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=6/4/8&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[2].id=&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=create_date&columnList[2].comments=创建时间&columnList[2].columnType=datetime&columnList[2].attrType=java.util.Date&columnList[2].fullAttrName=createDate&!columnList[2].isPk=&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&!columnList[2].isList=&!columnList[2].isQuery=&columnList[2].queryType=EQ&!columnList[2].isEdit=&!columnList[2].isRequired=&columnList[2].showType=input&columnList[2].optionMap['gridRowCol']=6/4/8&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&columnList[3].id=&columnList[3].status=&columnList[3].columnSort=40&columnList[3].columnName=update_date&columnList[3].comments=更新时间&columnList[3].columnType=datetime&columnList[3].attrType=java.util.Date&columnList[3].fullAttrName=updateDate&!columnList[3].isPk=&!columnList[3].isInsert=&columnList[3].isInsert=1&!columnList[3].isUpdate=&columnList[3].isUpdate=1&!columnList[3].isList=&columnList[3].isList=1&!columnList[3].isQuery=&columnList[3].queryType=EQ&!columnList[3].isEdit=&!columnList[3].isRequired=&columnList[3].showType=input&columnList[3].optionMap['gridRowCol']=6/4/8&!columnList[3].optionMap['isNewLine']=&columnList[3].optionMap['dictName']=&columnList[3].optionMap['dictType']=&!columnList[3].optionMap['fieldValid']=&columnList[4].id=&columnList[4].status=&columnList[4].columnSort=50&columnList[4].columnName=create_by&columnList[4].comments=创建人&columnList[4].columnType=varchar(64)&columnList[4].attrType=String&columnList[4].fullAttrName=createBy&!columnList[4].isPk=&!columnList[4].isInsert=&columnList[4].isInsert=1&!columnList[4].isUpdate=&!columnList[4].isList=&!columnList[4].isQuery=&columnList[4].queryType=EQ&!columnList[4].isEdit=&!columnList[4].isRequired=&columnList[4].showType=input&columnList[4].optionMap['gridRowCol']=6/4/8&!columnList[4].optionMap['isNewLine']=&columnList[4].optionMap['dictName']=&columnList[4].optionMap['dictType']=&!columnList[4].optionMap['fieldValid']=&columnList[5].id=&columnList[5].status=&columnList[5].columnSort=60&columnList[5].columnName=update_by&columnList[5].comments=更新人&columnList[5].columnType=varchar(64)&columnList[5].attrType=String&columnList[5].fullAttrName=updateBy&!columnList[5].isPk=&!columnList[5].isInsert=&columnList[5].isInsert=1&!columnList[5].isUpdate=&columnList[5].isUpdate=1&!columnList[5].isList=&!columnList[5].isQuery=&columnList[5].queryType=EQ&!columnList[5].isEdit=&!columnList[5].isRequired=&columnList[5].showType=input&columnList[5].optionMap['gridRowCol']=6/4/8&!columnList[5].optionMap['isNewLine']=&columnList[5].optionMap['dictName']=&columnList[5].optionMap['dictType']=&!columnList[5].optionMap['fieldValid']=&columnList[6].id=&columnList[6].status=&columnList[6].columnSort=70&columnList[6].columnName=remarks&columnList[6].comments=备注&columnList[6].columnType=varchar(64)&columnList[6].attrType=String&columnList[6].fullAttrName=remarks&!columnList[6].isPk=&!columnList[6].isInsert=&columnList[6].isInsert=1&!columnList[6].isUpdate=&columnList[6].isUpdate=1&!columnList[6].isList=&columnList[6].isList=1&!columnList[6].isQuery=&columnList[6].isQuery=1&columnList[6].queryType=LIKE&!columnList[6].isEdit=&columnList[6].isEdit=1&!columnList[6].isRequired=&columnList[6].showType=textarea&columnList[6].optionMap['gridRowCol']=12/2/10&!columnList[6].optionMap['isNewLine']=&columnList[6].optionMap['isNewLine']=1&columnList[6].optionMap['dictName']=&columnList[6].optionMap['dictType']=&!columnList[6].optionMap['fieldValid']=&columnList[7].id=&columnList[7].status=&columnList[7].columnSort=80&columnList[7].columnName=del_flag&columnList[7].comments=是否删除 0未删除 1删除&columnList[7].columnType=char(1)&columnList[7].attrType=String&columnList[7].fullAttrName=delFlag&!columnList[7].isPk=&!columnList[7].isInsert=&columnList[7].isInsert=1&!columnList[7].isUpdate=&columnList[7].isUpdate=1&!columnList[7].isList=&columnList[7].isList=1&!columnList[7].isQuery=&columnList[7].isQuery=1&columnList[7].queryType=EQ&!columnList[7].isEdit=&columnList[7].isEdit=1&!columnList[7].isRequired=&columnList[7].showType=input&columnList[7].optionMap['gridRowCol']=6/4/8&!columnList[7].optionMap['isNewLine']=&columnList[7].optionMap['dictName']=&columnList[7].optionMap['dictType']=&!columnList[7].optionMap['fieldValid']=&tplCategory=&packageName=com.jeesite.modules&moduleName=sys&subModuleName=&functionName=药品标签表&functionNameSimple=药品标签表&genBaseDir=E:\gitlabHome\HaoLangZhongProject\HaoLangZhong&optionMap['isHaveDisableEnable']=0&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&optionMap['isImageUpload']=0&optionMap['isFileUpload']=0&genFlag=0&!replaceFile=0(String), sys_air_drug_label(String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 1028(Long)
2019-07-08 16:14:35.810 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 16:14:35.878 DEBUG 18888 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@ba117a1] will be managed by Spring
2019-07-08 16:14:35.879 DEBUG 18888 [nio-8980-exec-7] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.table_name AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.`TABLES` t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.table_name AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.`VIEWS` t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName" 
2019-07-08 16:14:35.879 DEBUG 18888 [nio-8980-exec-7] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: sys_air_drug_label(String), sys_air_drug_label(String)
2019-07-08 16:14:35.907 DEBUG 18888 [nio-8980-exec-7] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2019-07-08 16:14:35.908 DEBUG 18888 [nio-8980-exec-7] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.`COLUMNS` t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION 
2019-07-08 16:14:35.908 DEBUG 18888 [nio-8980-exec-7] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: sys_air_drug_label(String)
2019-07-08 16:14:35.932 DEBUG 18888 [nio-8980-exec-7] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 8
2019-07-08 16:14:35.933 DEBUG 18888 [nio-8980-exec-7] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.`COLUMNS` au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY='PRI' AND au.TABLE_NAME = ? 
2019-07-08 16:14:35.933 DEBUG 18888 [nio-8980-exec-7] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: sys_air_drug_label(String)
2019-07-08 16:14:35.957 DEBUG 18888 [nio-8980-exec-7] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 1
2019-07-08 16:14:36.053 DEBUG 18888 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.id AS "id", a.dict_name AS "dictName", a.dict_type AS "dictType", a.is_sys AS "isSys" FROM js_sys_dict_type a WHERE a.status = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2019-07-08 16:14:36.054 DEBUG 18888 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@ba117a1] will not be managed by Spring
2019-07-08 16:14:36.055 DEBUG 18888 [nio-8980-exec-7] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.id AS "id", a.dict_name AS "dictName", a.dict_type AS "dictType", a.is_sys AS "isSys" FROM js_sys_dict_type a WHERE a.status = ? ORDER BY a.dict_type, a.update_date DESC 
2019-07-08 16:14:36.055 DEBUG 18888 [nio-8980-exec-7] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2019-07-08 16:14:36.081 DEBUG 18888 [nio-8980-exec-7] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2019-07-08 16:14:36.082 DEBUG 18888 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a ORDER BY a.update_date DESC
2019-07-08 16:14:36.083 DEBUG 18888 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@ba117a1] will not be managed by Spring
2019-07-08 16:14:36.084 DEBUG 18888 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a ORDER BY a.update_date DESC 
2019-07-08 16:14:36.084 DEBUG 18888 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2019-07-08 16:14:36.137 DEBUG 18888 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 40
2019-07-08 16:14:36.183 DEBUG 18888 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@ba117a1] will be managed by Spring
2019-07-08 16:14:36.184 DEBUG 18888 [nio-8980-exec-7] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20 
2019-07-08 16:14:36.184 DEBUG 18888 [nio-8980-exec-7] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2019-07-08 16:14:36.209 DEBUG 18888 [nio-8980-exec-7] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 3
2019-07-08 16:14:36.300 INFO  18888 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> public java.lang.String com.jeesite.modules.gen.web.GenTableController.form(com.jeesite.modules.gen.entity.GenTable,java.lang.String,org.springframework.ui.Model,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-08 16:14:36.316 DEBUG 18888 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 04:14:36.315  用时: 687毫秒  URI: /js/a/gen/genTable/form  总内存: 714MB  已用内存: 169.980MB
2019-07-08 16:14:36.453 DEBUG 18888 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 16:14:36.453 DEBUG 18888 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@ba117a1] will be managed by Spring
2019-07-08 16:14:36.454 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:14:36.454 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148143331326574592(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 16:14:36.316(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=sys_air_drug_label&op=step3(String), sys_air_drug_label(String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 687(Long)
2019-07-08 16:14:36.501 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 16:14:43.727 DEBUG 18888 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 04:14:43.727  URI: /js/a/gen/genTable/save
2019-07-08 16:14:43.773 DEBUG 18888 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = #{tableName}
2019-07-08 16:14:43.774 DEBUG 18888 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@ba117a1] will be managed by Spring
2019-07-08 16:14:43.774 DEBUG 18888 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = ? 
2019-07-08 16:14:43.775 DEBUG 18888 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: sys_air_drug_label(String)
2019-07-08 16:14:43.799 DEBUG 18888 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2019-07-08 16:14:43.799 DEBUG 18888 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.id AS "id", a.table_name AS "genTable.tableName", a.column_name AS "columnName", a.column_sort AS "columnSort", a.column_type AS "columnType", a.column_label AS "columnLabel", a.comments AS "comments", a.attr_name AS "fullAttrName", a.attr_type AS "attrType", a.is_pk AS "isPk", a.is_null AS "isNull", a.is_insert AS "isInsert", a.is_update AS "isUpdate", a.is_list AS "isList", a.is_query AS "isQuery", a.query_type AS "queryType", a.is_edit AS "isEdit", a.show_type AS "showType", a.options AS "options" FROM js_gen_table_column a WHERE a.table_name = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2019-07-08 16:14:43.800 DEBUG 18888 [io-8980-exec-10] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.id AS "id", a.table_name AS "genTable.tableName", a.column_name AS "columnName", a.column_sort AS "columnSort", a.column_type AS "columnType", a.column_label AS "columnLabel", a.comments AS "comments", a.attr_name AS "fullAttrName", a.attr_type AS "attrType", a.is_pk AS "isPk", a.is_null AS "isNull", a.is_insert AS "isInsert", a.is_update AS "isUpdate", a.is_list AS "isList", a.is_query AS "isQuery", a.query_type AS "queryType", a.is_edit AS "isEdit", a.show_type AS "showType", a.options AS "options" FROM js_gen_table_column a WHERE a.table_name = ? ORDER BY a.column_sort 
2019-07-08 16:14:43.800 DEBUG 18888 [io-8980-exec-10] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: sys_air_drug_label(String)
2019-07-08 16:14:43.828 DEBUG 18888 [io-8980-exec-10] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 8
2019-07-08 16:14:43.984 DEBUG 18888 [io-8980-exec-10] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 3毫秒: UPDATE js_gen_table SET `class_name` = #{className}, `comments` = #{comments}, `parent_table_name` = #{parentTableName}, `parent_table_fk_name` = #{parentTableFkName}, `data_source_name` = #{dataSourceName}, `tpl_category` = #{tplCategory}, `package_name` = #{packageName}, `module_name` = #{moduleName}, `sub_module_name` = #{subModuleName}, `function_name` = #{functionName}, `function_name_simple` = #{functionNameSimple}, `function_author` = #{functionAuthor}, `gen_base_dir` = #{genBaseDir}, `options` = #{options}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `table_name` = #{tableName}
2019-07-08 16:14:43.984 DEBUG 18888 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@ba117a1] will be managed by Spring
2019-07-08 16:14:43.985 DEBUG 18888 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.update ] - ==>  Preparing: UPDATE js_gen_table SET `class_name` = ?, `comments` = ?, `parent_table_name` = ?, `parent_table_fk_name` = ?, `data_source_name` = ?, `tpl_category` = ?, `package_name` = ?, `module_name` = ?, `sub_module_name` = ?, `function_name` = ?, `function_name_simple` = ?, `function_author` = ?, `gen_base_dir` = ?, `options` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `table_name` = ? 
2019-07-08 16:14:43.987 DEBUG 18888 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.update ] - ==> Parameters: AirDrugLabel(String), 药品标签表(String), (String), (String), (String), dao(String), com.jeesite.modules(String), app(String), (String), 药品标签表(String), 药品标签表(String), 范耘诚(String), E:\gitlabHome\HaoLangZhongProject\HaoLangZhong(String), {"treeViewName":"","isHaveDelete":"1","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isImageUpload":"0"}(String), system(String), 2019-07-08 16:14:43.983(Timestamp), 药品标签表(String), sys_air_drug_label(String)
2019-07-08 16:14:44.032 DEBUG 18888 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.update ] - <==    Updates: 1
2019-07-08 16:14:44.033 DEBUG 18888 [io-8980-exec-10] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 16:14:44.034 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 16:14:44.035 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_air_drug_label(String), id(String), 10(Integer), bigint(20)(String), 主键(String), 主键(String), id(String), Long(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148143326322769920(String)
2019-07-08 16:14:44.081 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 16:14:44.082 DEBUG 18888 [io-8980-exec-10] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 16:14:44.083 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 16:14:44.084 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_air_drug_label(String), name(String), 20(Integer), varchar(64)(String), 标签名字(String), 标签名字(String), name(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), LIKE(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148143326532485120(String)
2019-07-08 16:14:44.129 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 16:14:44.130 DEBUG 18888 [io-8980-exec-10] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 16:14:44.130 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 16:14:44.131 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_air_drug_label(String), create_date(String), 30(Integer), datetime(String), 创建时间(String), 创建时间(String), createDate(String), java.util.Date(String), (String), 1(String), 1(String), (String), (String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148143326742200320(String)
2019-07-08 16:14:44.176 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 16:14:44.177 DEBUG 18888 [io-8980-exec-10] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 16:14:44.178 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 16:14:44.178 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_air_drug_label(String), update_date(String), 40(Integer), datetime(String), 更新时间(String), 更新时间(String), updateDate(String), java.util.Date(String), (String), 1(String), 1(String), 1(String), 1(String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148143326956109824(String)
2019-07-08 16:14:44.223 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 16:14:44.224 DEBUG 18888 [io-8980-exec-10] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 16:14:44.225 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 16:14:44.225 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_air_drug_label(String), create_by(String), 50(Integer), varchar(64)(String), 创建人(String), 创建人(String), createBy(String), String(String), (String), 1(String), 1(String), (String), (String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148143327174213632(String)
2019-07-08 16:14:44.271 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 16:14:44.271 DEBUG 18888 [io-8980-exec-10] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 16:14:44.272 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 16:14:44.273 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_air_drug_label(String), update_by(String), 60(Integer), varchar(64)(String), 更新人(String), 更新人(String), updateBy(String), String(String), (String), 1(String), 1(String), 1(String), (String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148143327388123136(String)
2019-07-08 16:14:44.318 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 16:14:44.319 DEBUG 18888 [io-8980-exec-10] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 16:14:44.320 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 16:14:44.320 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_air_drug_label(String), remarks(String), 70(Integer), varchar(64)(String), 备注(String), 备注(String), remarks(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), LIKE(String), 1(String), textarea(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/10","dictType":""}(String), 1148143327606226944(String)
2019-07-08 16:14:44.368 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 16:14:44.368 DEBUG 18888 [io-8980-exec-10] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 16:14:44.369 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 16:14:44.369 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_air_drug_label(String), del_flag(String), 80(Integer), char(1)(String), 是否删除 0未删除 1删除(String), 是否删除 0未删除 1删除(String), delFlag(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148143327824330752(String)
2019-07-08 16:14:44.414 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 16:14:44.626 DEBUG 18888 [io-8980-exec-10] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\resources\mappings\modules\app\AirDrugLabelDao.xml
2019-07-08 16:14:44.627 DEBUG 18888 [io-8980-exec-10] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.app.dao.AirDrugLabelDao">
	
	<!-- 查询数据
	<select id="findList" resultType="AirDrugLabel">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2019-07-08 16:14:44.628 DEBUG 18888 [io-8980-exec-10] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\resources\mappings\modules\app\AirDrugLabelDao.xml
2019-07-08 16:14:44.630 DEBUG 18888 [io-8980-exec-10] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\java\com\jeesite\modules\app\entity\AirDrugLabel.java
2019-07-08 16:14:44.660 DEBUG 18888 [io-8980-exec-10] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.app.entity;

import org.hibernate.validator.constraints.Length;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * 药品标签表Entity
 * @author 范耘诚
 * @version 2019-07-08
 */
@Table(name="sys_air_drug_label", alias="a", columns={
		@Column(name="id", attrName="id", label="主键", isPK=true),
		@Column(name="name", attrName="name", label="标签名字", queryType=QueryType.LIKE),
		@Column(name="create_date", attrName="createDate", label="创建时间", isUpdate=false, isQuery=false),
		@Column(name="update_date", attrName="updateDate", label="更新时间", isQuery=false),
		@Column(name="create_by", attrName="createBy", label="创建人", isUpdate=false, isQuery=false),
		@Column(name="update_by", attrName="updateBy", label="更新人", isQuery=false),
		@Column(name="remarks", attrName="remarks", label="备注", queryType=QueryType.LIKE),
		@Column(name="del_flag", attrName="delFlag", label="是否删除 0未删除 1删除"),
	}, orderBy="a.update_date DESC"
)
public class AirDrugLabel extends DataEntity<AirDrugLabel> {
	
	private static final long serialVersionUID = 1L;
	private String name;		// 标签名字
	private String delFlag;		// 是否删除 0未删除 1删除
	
	public AirDrugLabel() {
		this(null);
	}

	public AirDrugLabel(String id){
		super(id);
	}
	
	@Length(min=0, max=64, message="标签名字长度不能超过 64 个字符")
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}
	
	@Length(min=0, max=1, message="是否删除 0未删除 1删除长度不能超过 1 个字符")
	public String getDelFlag() {
		return delFlag;
	}

	public void setDelFlag(String delFlag) {
		this.delFlag = delFlag;
	}
	
}
2019-07-08 16:14:44.661 DEBUG 18888 [io-8980-exec-10] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\java\com\jeesite\modules\app\entity\AirDrugLabel.java
2019-07-08 16:14:44.662 DEBUG 18888 [io-8980-exec-10] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\java\com\jeesite\modules\app\dao\AirDrugLabelDao.java
2019-07-08 16:14:44.665 DEBUG 18888 [io-8980-exec-10] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.app.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.app.entity.AirDrugLabel;

/**
 * 药品标签表DAO接口
 * @author 范耘诚
 * @version 2019-07-08
 */
@MyBatisDao
public interface AirDrugLabelDao extends CrudDao<AirDrugLabel> {
	
}
2019-07-08 16:14:44.666 DEBUG 18888 [io-8980-exec-10] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\java\com\jeesite\modules\app\dao\AirDrugLabelDao.java
2019-07-08 16:14:44.761 DEBUG 18888 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 04:14:44.755  用时: 1秒  URI: /js/a/gen/genTable/save  总内存: 714MB  已用内存: 191.748MB
2019-07-08 16:14:44.771 DEBUG 18888 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 04:14:44.771  URI: /js/a/gen/genTable/listData
2019-07-08 16:14:44.822 DEBUG 18888 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", (SELECT count(1) FROM js_gen_table WHERE parent_table_name=a.table_name) AS "childNum" FROM js_gen_table a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2019-07-08 16:14:44.824 DEBUG 18888 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:14:44.835 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM js_gen_table a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?) 
2019-07-08 16:14:44.836 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2019-07-08 16:14:44.860 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", (SELECT count(1) FROM js_gen_table WHERE parent_table_name=a.table_name) AS "childNum" FROM js_gen_table a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20 
2019-07-08 16:14:44.860 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2019-07-08 16:14:44.889 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 20
2019-07-08 16:14:44.898 DEBUG 18888 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 16:14:44.899 DEBUG 18888 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@ba117a1] will be managed by Spring
2019-07-08 16:14:44.899 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:14:44.902 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148143366743277568(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 16:14:44.76(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=sys_air_drug_label&comments=药品标签表&className=AirDrugLabel&functionAuthor=范耘诚&parentTableName=&parentTableFkName=&remarks=药品标签表&columnList[0].id=1148143326322769920&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=id&columnList[0].comments=主键&columnList[0].columnType=bigint(20)&columnList[0].attrType=Long&columnList[0].fullAttrName=id&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=6/4/8&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1148143326532485120&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=name&columnList[1].comments=标签名字&columnList[1].columnType=varchar(64)&columnList[1].attrType=String&columnList[1].fullAttrName=name&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=LIKE&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=6/4/8&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[2].id=1148143326742200320&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=create_date&columnList[2].comments=创建时间&columnList[2].columnType=datetime&columnList[2].attrType=java.util.Date&columnList[2].fullAttrName=createDate&!columnList[2].isPk=&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&!columnList[2].isList=&!columnList[2].isQuery=&columnList[2].queryType=EQ&!columnList[2].isEdit=&!columnList[2].isRequired=&columnList[2].showType=input&columnList[2].optionMap['gridRowCol']=6/4/8&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&columnList[3].id=1148143326956109824&columnList[3].status=&columnList[3].columnSort=40&columnList[3].columnName=update_date&columnList[3].comments=更新时间&columnList[3].columnType=datetime&columnList[3].attrType=java.util.Date&columnList[3].fullAttrName=updateDate&!columnList[3].isPk=&!columnList[3].isInsert=&columnList[3].isInsert=1&!columnList[3].isUpdate=&columnList[3].isUpdate=1&!columnList[3].isList=&columnList[3].isList=1&!columnList[3].isQuery=&columnList[3].queryType=EQ&!columnList[3].isEdit=&!columnList[3].isRequired=&columnList[3].showType=input&columnList[3].optionMap['gridRowCol']=6/4/8&!columnList[3].optionMap['isNewLine']=&columnList[3].optionMap['dictName']=&columnList[3].optionMap['dictType']=&!columnList[3].optionMap['fieldValid']=&columnList[4].id=1148143327174213632&columnList[4].status=&columnList[4].columnSort=50&columnList[4].columnName=create_by&columnList[4].comments=创建人&columnList[4].columnType=varchar(64)&columnList[4].attrType=String&columnList[4].fullAttrName=createBy&!columnList[4].isPk=&!columnList[4].isInsert=&columnList[4].isInsert=1&!columnList[4].isUpdate=&!columnList[4].isList=&!columnList[4].isQuery=&columnList[4].queryType=EQ&!columnList[4].isEdit=&!columnList[4].isRequired=&columnList[4].showType=input&columnList[4].optionMap['gridRowCol']=6/4/8&!columnList[4].optionMap['isNewLine']=&columnList[4].optionMap['dictName']=&columnList[4].optionMap['dictType']=&!columnList[4].optionMap['fieldValid']=&columnList[5].id=1148143327388123136&columnList[5].status=&columnList[5].columnSort=60&columnList[5].columnName=update_by&columnList[5].comments=更新人&columnList[5].columnType=varchar(64)&columnList[5].attrType=String&columnList[5].fullAttrName=updateBy&!columnList[5].isPk=&!columnList[5].isInsert=&columnList[5].isInsert=1&!columnList[5].isUpdate=&columnList[5].isUpdate=1&!columnList[5].isList=&!columnList[5].isQuery=&columnList[5].queryType=EQ&!columnList[5].isEdit=&!columnList[5].isRequired=&columnList[5].showType=input&columnList[5].optionMap['gridRowCol']=6/4/8&!columnList[5].optionMap['isNewLine']=&columnList[5].optionMap['dictName']=&columnList[5].optionMap['dictType']=&!columnList[5].optionMap['fieldValid']=&columnList[6].id=1148143327606226944&columnList[6].status=&columnList[6].columnSort=70&columnList[6].columnName=remarks&columnList[6].comments=备注&columnList[6].columnType=varchar(64)&columnList[6].attrType=String&columnList[6].fullAttrName=remarks&!columnList[6].isPk=&!columnList[6].isInsert=&columnList[6].isInsert=1&!columnList[6].isUpdate=&columnList[6].isUpdate=1&!columnList[6].isList=&columnList[6].isList=1&!columnList[6].isQuery=&columnList[6].isQuery=1&columnList[6].queryType=LIKE&!columnList[6].isEdit=&columnList[6].isEdit=1&!columnList[6].isRequired=&columnList[6].showType=textarea&columnList[6].optionMap['gridRowCol']=12/2/10&!columnList[6].optionMap['isNewLine']=&columnList[6].optionMap['isNewLine']=1&columnList[6].optionMap['dictName']=&columnList[6].optionMap['dictType']=&!columnList[6].optionMap['fieldValid']=&columnList[7].id=1148143327824330752&columnList[7].status=&columnList[7].columnSort=80&columnList[7].columnName=del_flag&columnList[7].comments=是否删除 0未删除 1删除&columnList[7].columnType=char(1)&columnList[7].attrType=String&columnList[7].fullAttrName=delFlag&!columnList[7].isPk=&!columnList[7].isInsert=&columnList[7].isInsert=1&!columnList[7].isUpdate=&columnList[7].isUpdate=1&!columnList[7].isList=&columnList[7].isList=1&!columnList[7].isQuery=&columnList[7].isQuery=1&columnList[7].queryType=EQ&!columnList[7].isEdit=&columnList[7].isEdit=1&!columnList[7].isRequired=&columnList[7].showType=input&columnList[7].optionMap['gridRowCol']=6/4/8&!columnList[7].optionMap['isNewLine']=&columnList[7].optionMap['dictName']=&columnList[7].optionMap['dictType']=&!columnList[7].optionMap['fieldValid']=&tplCategory=dao&packageName=com.jeesite.modules&moduleName=app&subModuleName=&functionName=药品标签表&functionNameSimple=药品标签表&genBaseDir=E:\gitlabHome\HaoLangZhongProject\HaoLangZhong&optionMap['isHaveDisableEnable']=0&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&optionMap['isImageUpload']=0&optionMap['isFileUpload']=0&genFlag=2&!replaceFile=0(String), sys_air_drug_label(String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 1028(Long)
2019-07-08 16:14:44.952 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 16:14:44.986 DEBUG 18888 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 04:14:44.984  用时: 213毫秒  URI: /js/a/gen/genTable/listData  总内存: 714MB  已用内存: 192.683MB
2019-07-08 16:14:45.131 DEBUG 18888 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 5毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 16:14:45.132 DEBUG 18888 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:14:45.132 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:14:45.134 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148143367686995968(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 16:14:44.985(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 213(Long)
2019-07-08 16:14:45.182 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 16:17:19.254 DEBUG 18888 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 04:17:19.254  URI: /js/a/gen/genTable/form
2019-07-08 16:17:19.326 DEBUG 18888 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = #{tableName}
2019-07-08 16:17:19.326 DEBUG 18888 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:17:19.327 DEBUG 18888 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = ? 
2019-07-08 16:17:19.327 DEBUG 18888 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: sys_air_drug_label(String)
2019-07-08 16:17:19.353 DEBUG 18888 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2019-07-08 16:17:19.354 DEBUG 18888 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.table_name AS "genTable.tableName", a.column_name AS "columnName", a.column_sort AS "columnSort", a.column_type AS "columnType", a.column_label AS "columnLabel", a.comments AS "comments", a.attr_name AS "fullAttrName", a.attr_type AS "attrType", a.is_pk AS "isPk", a.is_null AS "isNull", a.is_insert AS "isInsert", a.is_update AS "isUpdate", a.is_list AS "isList", a.is_query AS "isQuery", a.query_type AS "queryType", a.is_edit AS "isEdit", a.show_type AS "showType", a.options AS "options" FROM js_gen_table_column a WHERE a.table_name = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2019-07-08 16:17:19.354 DEBUG 18888 [nio-8980-exec-3] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.id AS "id", a.table_name AS "genTable.tableName", a.column_name AS "columnName", a.column_sort AS "columnSort", a.column_type AS "columnType", a.column_label AS "columnLabel", a.comments AS "comments", a.attr_name AS "fullAttrName", a.attr_type AS "attrType", a.is_pk AS "isPk", a.is_null AS "isNull", a.is_insert AS "isInsert", a.is_update AS "isUpdate", a.is_list AS "isList", a.is_query AS "isQuery", a.query_type AS "queryType", a.is_edit AS "isEdit", a.show_type AS "showType", a.options AS "options" FROM js_gen_table_column a WHERE a.table_name = ? ORDER BY a.column_sort 
2019-07-08 16:17:19.355 DEBUG 18888 [nio-8980-exec-3] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: sys_air_drug_label(String)
2019-07-08 16:17:19.381 DEBUG 18888 [nio-8980-exec-3] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 8
2019-07-08 16:17:19.526 DEBUG 18888 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:17:19.527 DEBUG 18888 [nio-8980-exec-3] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.table_name AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.`TABLES` t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.table_name AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.`VIEWS` t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName" 
2019-07-08 16:17:19.528 DEBUG 18888 [nio-8980-exec-3] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: sys_air_drug_label(String), sys_air_drug_label(String)
2019-07-08 16:17:19.556 DEBUG 18888 [nio-8980-exec-3] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2019-07-08 16:17:19.557 DEBUG 18888 [nio-8980-exec-3] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.`COLUMNS` t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION 
2019-07-08 16:17:19.558 DEBUG 18888 [nio-8980-exec-3] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: sys_air_drug_label(String)
2019-07-08 16:17:19.583 DEBUG 18888 [nio-8980-exec-3] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 8
2019-07-08 16:17:19.585 DEBUG 18888 [nio-8980-exec-3] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.`COLUMNS` au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY='PRI' AND au.TABLE_NAME = ? 
2019-07-08 16:17:19.585 DEBUG 18888 [nio-8980-exec-3] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: sys_air_drug_label(String)
2019-07-08 16:17:19.609 DEBUG 18888 [nio-8980-exec-3] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 1
2019-07-08 16:17:19.705 DEBUG 18888 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.id AS "id", a.dict_name AS "dictName", a.dict_type AS "dictType", a.is_sys AS "isSys" FROM js_sys_dict_type a WHERE a.status = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2019-07-08 16:17:19.706 DEBUG 18888 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will not be managed by Spring
2019-07-08 16:17:19.706 DEBUG 18888 [nio-8980-exec-3] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.id AS "id", a.dict_name AS "dictName", a.dict_type AS "dictType", a.is_sys AS "isSys" FROM js_sys_dict_type a WHERE a.status = ? ORDER BY a.dict_type, a.update_date DESC 
2019-07-08 16:17:19.706 DEBUG 18888 [nio-8980-exec-3] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2019-07-08 16:17:19.732 DEBUG 18888 [nio-8980-exec-3] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2019-07-08 16:17:19.733 DEBUG 18888 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a ORDER BY a.update_date DESC
2019-07-08 16:17:19.734 DEBUG 18888 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will not be managed by Spring
2019-07-08 16:17:19.736 DEBUG 18888 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a ORDER BY a.update_date DESC 
2019-07-08 16:17:19.736 DEBUG 18888 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2019-07-08 16:17:19.787 DEBUG 18888 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 40
2019-07-08 16:17:19.834 DEBUG 18888 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:17:19.835 DEBUG 18888 [nio-8980-exec-3] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20 
2019-07-08 16:17:19.835 DEBUG 18888 [nio-8980-exec-3] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2019-07-08 16:17:19.861 DEBUG 18888 [nio-8980-exec-3] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 3
2019-07-08 16:17:19.957 INFO  18888 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> public java.lang.String com.jeesite.modules.gen.web.GenTableController.form(com.jeesite.modules.gen.entity.GenTable,java.lang.String,org.springframework.ui.Model,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-08 16:17:19.974 DEBUG 18888 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 04:17:19.972  用时: 718毫秒  URI: /js/a/gen/genTable/form  总内存: 714MB  已用内存: 210.743MB
2019-07-08 16:17:20.115 DEBUG 18888 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 16:17:20.116 DEBUG 18888 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:17:20.116 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:17:20.117 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148144017753784320(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 16:17:19.973(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=sys_air_drug_label(String), sys_air_drug_label(String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 718(Long)
2019-07-08 16:17:20.167 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 16:17:47.442 DEBUG 18888 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 04:17:47.442  URI: /js/a/gen/genTable/save
2019-07-08 16:17:47.491 DEBUG 18888 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = #{tableName}
2019-07-08 16:17:47.491 DEBUG 18888 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:17:47.491 DEBUG 18888 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = ? 
2019-07-08 16:17:47.492 DEBUG 18888 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: sys_air_drug_label(String)
2019-07-08 16:17:47.516 DEBUG 18888 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2019-07-08 16:17:47.517 DEBUG 18888 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.table_name AS "genTable.tableName", a.column_name AS "columnName", a.column_sort AS "columnSort", a.column_type AS "columnType", a.column_label AS "columnLabel", a.comments AS "comments", a.attr_name AS "fullAttrName", a.attr_type AS "attrType", a.is_pk AS "isPk", a.is_null AS "isNull", a.is_insert AS "isInsert", a.is_update AS "isUpdate", a.is_list AS "isList", a.is_query AS "isQuery", a.query_type AS "queryType", a.is_edit AS "isEdit", a.show_type AS "showType", a.options AS "options" FROM js_gen_table_column a WHERE a.table_name = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2019-07-08 16:17:47.517 DEBUG 18888 [nio-8980-exec-9] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.id AS "id", a.table_name AS "genTable.tableName", a.column_name AS "columnName", a.column_sort AS "columnSort", a.column_type AS "columnType", a.column_label AS "columnLabel", a.comments AS "comments", a.attr_name AS "fullAttrName", a.attr_type AS "attrType", a.is_pk AS "isPk", a.is_null AS "isNull", a.is_insert AS "isInsert", a.is_update AS "isUpdate", a.is_list AS "isList", a.is_query AS "isQuery", a.query_type AS "queryType", a.is_edit AS "isEdit", a.show_type AS "showType", a.options AS "options" FROM js_gen_table_column a WHERE a.table_name = ? ORDER BY a.column_sort 
2019-07-08 16:17:47.517 DEBUG 18888 [nio-8980-exec-9] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: sys_air_drug_label(String)
2019-07-08 16:17:47.543 DEBUG 18888 [nio-8980-exec-9] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 8
2019-07-08 16:17:47.677 DEBUG 18888 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE js_gen_table SET `class_name` = #{className}, `comments` = #{comments}, `parent_table_name` = #{parentTableName}, `parent_table_fk_name` = #{parentTableFkName}, `data_source_name` = #{dataSourceName}, `tpl_category` = #{tplCategory}, `package_name` = #{packageName}, `module_name` = #{moduleName}, `sub_module_name` = #{subModuleName}, `function_name` = #{functionName}, `function_name_simple` = #{functionNameSimple}, `function_author` = #{functionAuthor}, `gen_base_dir` = #{genBaseDir}, `options` = #{options}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `table_name` = #{tableName}
2019-07-08 16:17:47.677 DEBUG 18888 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:17:47.678 DEBUG 18888 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.update ] - ==>  Preparing: UPDATE js_gen_table SET `class_name` = ?, `comments` = ?, `parent_table_name` = ?, `parent_table_fk_name` = ?, `data_source_name` = ?, `tpl_category` = ?, `package_name` = ?, `module_name` = ?, `sub_module_name` = ?, `function_name` = ?, `function_name_simple` = ?, `function_author` = ?, `gen_base_dir` = ?, `options` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `table_name` = ? 
2019-07-08 16:17:47.678 DEBUG 18888 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.update ] - ==> Parameters: AirDrugLabel(String), 药品标签表(String), (String), (String), (String), dao(String), com.jeesite.modules(String), app(String), (String), 药品标签表(String), 药品标签表(String), 范耘诚(String), E:\gitlabHome\HaoLangZhongProject\HaoLangZhong(String), {"treeViewName":"","isHaveDelete":"1","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isImageUpload":"0"}(String), system(String), 2019-07-08 16:17:47.677(Timestamp), 药品标签表(String), sys_air_drug_label(String)
2019-07-08 16:17:47.725 DEBUG 18888 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.update ] - <==    Updates: 1
2019-07-08 16:17:47.726 DEBUG 18888 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 16:17:47.726 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 16:17:47.727 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_air_drug_label(String), id(String), 10(Integer), bigint(20)(String), 主键(String), 主键(String), id(String), Long(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148143326322769920(String)
2019-07-08 16:17:47.773 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 16:17:47.773 DEBUG 18888 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 16:17:47.774 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 16:17:47.774 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_air_drug_label(String), name(String), 20(Integer), varchar(64)(String), 标签名字(String), 标签名字(String), name(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), LIKE(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148143326532485120(String)
2019-07-08 16:17:47.821 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 16:17:47.822 DEBUG 18888 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 16:17:47.823 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 16:17:47.823 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_air_drug_label(String), create_date(String), 30(Integer), datetime(String), 创建时间(String), 创建时间(String), createDate(String), java.util.Date(String), (String), 1(String), 1(String), (String), (String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148143326742200320(String)
2019-07-08 16:17:47.870 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 16:17:47.871 DEBUG 18888 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 16:17:47.872 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 16:17:47.873 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_air_drug_label(String), update_date(String), 40(Integer), datetime(String), 更新时间(String), 更新时间(String), updateDate(String), java.util.Date(String), (String), 1(String), 1(String), 1(String), 1(String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148143326956109824(String)
2019-07-08 16:17:47.920 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 16:17:47.921 DEBUG 18888 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 16:17:47.922 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 16:17:47.922 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_air_drug_label(String), create_by(String), 50(Integer), varchar(64)(String), 创建人(String), 创建人(String), createBy(String), String(String), (String), 1(String), 1(String), (String), (String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148143327174213632(String)
2019-07-08 16:17:47.969 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 16:17:47.971 DEBUG 18888 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 16:17:47.973 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 16:17:47.974 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_air_drug_label(String), update_by(String), 60(Integer), varchar(64)(String), 更新人(String), 更新人(String), updateBy(String), String(String), (String), 1(String), 1(String), 1(String), (String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148143327388123136(String)
2019-07-08 16:17:48.022 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 16:17:48.022 DEBUG 18888 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 16:17:48.023 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 16:17:48.023 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_air_drug_label(String), remarks(String), 70(Integer), varchar(64)(String), 备注(String), 备注(String), remarks(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), LIKE(String), 1(String), textarea(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/10","dictType":""}(String), 1148143327606226944(String)
2019-07-08 16:17:48.069 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 16:17:48.070 DEBUG 18888 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 16:17:48.071 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 16:17:48.072 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_air_drug_label(String), del_flag(String), 80(Integer), char(1)(String), 是否删除 0未删除 1删除(String), 是否删除 0未删除 1删除(String), delFlag(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148143327824330752(String)
2019-07-08 16:17:48.118 DEBUG 18888 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 16:17:48.247 DEBUG 18888 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\resources\mappings\modules\app\AirDrugLabelDao.xml
2019-07-08 16:17:48.247 DEBUG 18888 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.app.dao.AirDrugLabelDao">
	
	<!-- 查询数据
	<select id="findList" resultType="AirDrugLabel">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2019-07-08 16:17:48.247 DEBUG 18888 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Extents ==> E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\resources\mappings\modules\app\AirDrugLabelDao.xml
2019-07-08 16:17:48.247 DEBUG 18888 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\java\com\jeesite\modules\app\entity\AirDrugLabel.java
2019-07-08 16:17:48.250 DEBUG 18888 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.app.entity;

import org.hibernate.validator.constraints.Length;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * 药品标签表Entity
 * @author 范耘诚
 * @version 2019-07-08
 */
@Table(name="sys_air_drug_label", alias="a", columns={
		@Column(name="id", attrName="id", label="主键", isPK=true),
		@Column(name="name", attrName="name", label="标签名字", queryType=QueryType.LIKE),
		@Column(name="create_date", attrName="createDate", label="创建时间", isUpdate=false, isQuery=false),
		@Column(name="update_date", attrName="updateDate", label="更新时间", isQuery=false),
		@Column(name="create_by", attrName="createBy", label="创建人", isUpdate=false, isQuery=false),
		@Column(name="update_by", attrName="updateBy", label="更新人", isQuery=false),
		@Column(name="remarks", attrName="remarks", label="备注", queryType=QueryType.LIKE),
		@Column(name="del_flag", attrName="delFlag", label="是否删除 0未删除 1删除"),
	}, orderBy="a.update_date DESC"
)
public class AirDrugLabel extends DataEntity<AirDrugLabel> {
	
	private static final long serialVersionUID = 1L;
	private String name;		// 标签名字
	private String delFlag;		// 是否删除 0未删除 1删除
	
	public AirDrugLabel() {
		this(null);
	}

	public AirDrugLabel(String id){
		super(id);
	}
	
	@Length(min=0, max=64, message="标签名字长度不能超过 64 个字符")
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}
	
	@Length(min=0, max=1, message="是否删除 0未删除 1删除长度不能超过 1 个字符")
	public String getDelFlag() {
		return delFlag;
	}

	public void setDelFlag(String delFlag) {
		this.delFlag = delFlag;
	}
	
}
2019-07-08 16:17:48.250 DEBUG 18888 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Extents ==> E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\java\com\jeesite\modules\app\entity\AirDrugLabel.java
2019-07-08 16:17:48.251 DEBUG 18888 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\java\com\jeesite\modules\app\dao\AirDrugLabelDao.java
2019-07-08 16:17:48.251 DEBUG 18888 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.app.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.app.entity.AirDrugLabel;

/**
 * 药品标签表DAO接口
 * @author 范耘诚
 * @version 2019-07-08
 */
@MyBatisDao
public interface AirDrugLabelDao extends CrudDao<AirDrugLabel> {
	
}
2019-07-08 16:17:48.251 DEBUG 18888 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Extents ==> E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\java\com\jeesite\modules\app\dao\AirDrugLabelDao.java
2019-07-08 16:17:48.353 DEBUG 18888 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 04:17:48.345  用时: 903毫秒  URI: /js/a/gen/genTable/save  总内存: 714MB  已用内存: 221.069MB
2019-07-08 16:17:48.365 DEBUG 18888 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 04:17:48.365  URI: /js/a/gen/genTable/listData
2019-07-08 16:17:48.438 DEBUG 18888 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", (SELECT count(1) FROM js_gen_table WHERE parent_table_name=a.table_name) AS "childNum" FROM js_gen_table a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2019-07-08 16:17:48.438 DEBUG 18888 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@ba117a1] will be managed by Spring
2019-07-08 16:17:48.450 DEBUG 18888 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM js_gen_table a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?) 
2019-07-08 16:17:48.450 DEBUG 18888 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2019-07-08 16:17:48.475 DEBUG 18888 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", (SELECT count(1) FROM js_gen_table WHERE parent_table_name=a.table_name) AS "childNum" FROM js_gen_table a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20 
2019-07-08 16:17:48.475 DEBUG 18888 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2019-07-08 16:17:48.493 DEBUG 18888 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 16:17:48.493 DEBUG 18888 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:17:48.494 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:17:48.495 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148144136783937536(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 16:17:48.352(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=sys_air_drug_label&comments=药品标签表&className=AirDrugLabel&functionAuthor=范耘诚&parentTableName=&parentTableFkName=&remarks=药品标签表&columnList[0].id=1148143326322769920&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=id&columnList[0].comments=主键&columnList[0].columnType=bigint(20)&columnList[0].attrType=Long&columnList[0].fullAttrName=id&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=6/4/8&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1148143326532485120&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=name&columnList[1].comments=标签名字&columnList[1].columnType=varchar(64)&columnList[1].attrType=String&columnList[1].fullAttrName=name&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=LIKE&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=6/4/8&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[2].id=1148143326742200320&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=create_date&columnList[2].comments=创建时间&columnList[2].columnType=datetime&columnList[2].attrType=java.util.Date&columnList[2].fullAttrName=createDate&!columnList[2].isPk=&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&!columnList[2].isList=&!columnList[2].isQuery=&columnList[2].queryType=EQ&!columnList[2].isEdit=&!columnList[2].isRequired=&columnList[2].showType=input&columnList[2].optionMap['gridRowCol']=6/4/8&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&columnList[3].id=1148143326956109824&columnList[3].status=&columnList[3].columnSort=40&columnList[3].columnName=update_date&columnList[3].comments=更新时间&columnList[3].columnType=datetime&columnList[3].attrType=java.util.Date&columnList[3].fullAttrName=updateDate&!columnList[3].isPk=&!columnList[3].isInsert=&columnList[3].isInsert=1&!columnList[3].isUpdate=&columnList[3].isUpdate=1&!columnList[3].isList=&columnList[3].isList=1&!columnList[3].isQuery=&columnList[3].queryType=EQ&!columnList[3].isEdit=&!columnList[3].isRequired=&columnList[3].showType=input&columnList[3].optionMap['gridRowCol']=6/4/8&!columnList[3].optionMap['isNewLine']=&columnList[3].optionMap['dictName']=&columnList[3].optionMap['dictType']=&!columnList[3].optionMap['fieldValid']=&columnList[4].id=1148143327174213632&columnList[4].status=&columnList[4].columnSort=50&columnList[4].columnName=create_by&columnList[4].comments=创建人&columnList[4].columnType=varchar(64)&columnList[4].attrType=String&columnList[4].fullAttrName=createBy&!columnList[4].isPk=&!columnList[4].isInsert=&columnList[4].isInsert=1&!columnList[4].isUpdate=&!columnList[4].isList=&!columnList[4].isQuery=&columnList[4].queryType=EQ&!columnList[4].isEdit=&!columnList[4].isRequired=&columnList[4].showType=input&columnList[4].optionMap['gridRowCol']=6/4/8&!columnList[4].optionMap['isNewLine']=&columnList[4].optionMap['dictName']=&columnList[4].optionMap['dictType']=&!columnList[4].optionMap['fieldValid']=&columnList[5].id=1148143327388123136&columnList[5].status=&columnList[5].columnSort=60&columnList[5].columnName=update_by&columnList[5].comments=更新人&columnList[5].columnType=varchar(64)&columnList[5].attrType=String&columnList[5].fullAttrName=updateBy&!columnList[5].isPk=&!columnList[5].isInsert=&columnList[5].isInsert=1&!columnList[5].isUpdate=&columnList[5].isUpdate=1&!columnList[5].isList=&!columnList[5].isQuery=&columnList[5].queryType=EQ&!columnList[5].isEdit=&!columnList[5].isRequired=&columnList[5].showType=input&columnList[5].optionMap['gridRowCol']=6/4/8&!columnList[5].optionMap['isNewLine']=&columnList[5].optionMap['dictName']=&columnList[5].optionMap['dictType']=&!columnList[5].optionMap['fieldValid']=&columnList[6].id=1148143327606226944&columnList[6].status=&columnList[6].columnSort=70&columnList[6].columnName=remarks&columnList[6].comments=备注&columnList[6].columnType=varchar(64)&columnList[6].attrType=String&columnList[6].fullAttrName=remarks&!columnList[6].isPk=&!columnList[6].isInsert=&columnList[6].isInsert=1&!columnList[6].isUpdate=&columnList[6].isUpdate=1&!columnList[6].isList=&columnList[6].isList=1&!columnList[6].isQuery=&columnList[6].isQuery=1&columnList[6].queryType=LIKE&!columnList[6].isEdit=&columnList[6].isEdit=1&!columnList[6].isRequired=&columnList[6].showType=textarea&columnList[6].optionMap['gridRowCol']=12/2/10&!columnList[6].optionMap['isNewLine']=&columnList[6].optionMap['isNewLine']=1&columnList[6].optionMap['dictName']=&columnList[6].optionMap['dictType']=&!columnList[6].optionMap['fieldValid']=&columnList[7].id=1148143327824330752&columnList[7].status=&columnList[7].columnSort=80&columnList[7].columnName=del_flag&columnList[7].comments=是否删除 0未删除 1删除&columnList[7].columnType=char(1)&columnList[7].attrType=String&columnList[7].fullAttrName=delFlag&!columnList[7].isPk=&!columnList[7].isInsert=&columnList[7].isInsert=1&!columnList[7].isUpdate=&columnList[7].isUpdate=1&!columnList[7].isList=&columnList[7].isList=1&!columnList[7].isQuery=&columnList[7].isQuery=1&columnList[7].queryType=EQ&!columnList[7].isEdit=&columnList[7].isEdit=1&!columnList[7].isRequired=&columnList[7].showType=input&columnList[7].optionMap['gridRowCol']=6/4/8&!columnList[7].optionMap['isNewLine']=&columnList[7].optionMap['dictName']=&columnList[7].optionMap['dictType']=&!columnList[7].optionMap['fieldValid']=&tplCategory=dao&packageName=com.jeesite.modules&moduleName=app&subModuleName=&functionName=药品标签表&functionNameSimple=药品标签表&genBaseDir=E:\gitlabHome\HaoLangZhongProject\HaoLangZhong&optionMap['isHaveDisableEnable']=0&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&optionMap['isImageUpload']=0&optionMap['isFileUpload']=0&genFlag=2&!replaceFile=0(String), sys_air_drug_label(String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 903(Long)
2019-07-08 16:17:48.500 DEBUG 18888 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 20
2019-07-08 16:17:48.546 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 16:17:48.594 DEBUG 18888 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 04:17:48.593  用时: 228毫秒  URI: /js/a/gen/genTable/listData  总内存: 714MB  已用内存: 224.108MB
2019-07-08 16:17:48.733 DEBUG 18888 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 16:17:48.733 DEBUG 18888 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@ba117a1] will be managed by Spring
2019-07-08 16:17:48.734 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:17:48.734 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148144137798959104(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 16:17:48.594(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 228(Long)
2019-07-08 16:17:48.780 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 16:21:47.323 DEBUG 18888 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 04:21:47.323  URI: /js/a/gen/genTable/form
2019-07-08 16:21:47.495 DEBUG 18888 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.id AS "id", a.dict_name AS "dictName", a.dict_type AS "dictType", a.is_sys AS "isSys" FROM js_sys_dict_type a WHERE a.status = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2019-07-08 16:21:47.497 DEBUG 18888 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@ba117a1] will not be managed by Spring
2019-07-08 16:21:47.498 DEBUG 18888 [io-8980-exec-10] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.id AS "id", a.dict_name AS "dictName", a.dict_type AS "dictType", a.is_sys AS "isSys" FROM js_sys_dict_type a WHERE a.status = ? ORDER BY a.dict_type, a.update_date DESC 
2019-07-08 16:21:47.498 DEBUG 18888 [io-8980-exec-10] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2019-07-08 16:21:47.524 DEBUG 18888 [io-8980-exec-10] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2019-07-08 16:21:47.570 DEBUG 18888 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@ba117a1] will be managed by Spring
2019-07-08 16:21:47.571 DEBUG 18888 [io-8980-exec-10] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.table_name AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.`TABLES` t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.table_name AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.`VIEWS` t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName" 
2019-07-08 16:21:47.572 DEBUG 18888 [io-8980-exec-10] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2019-07-08 16:21:47.614 DEBUG 18888 [io-8980-exec-10] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 93
2019-07-08 16:21:47.704 INFO  18888 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableFormSelect <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> public java.lang.String com.jeesite.modules.gen.web.GenTableController.form(com.jeesite.modules.gen.entity.GenTable,java.lang.String,org.springframework.ui.Model,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-08 16:21:47.709 DEBUG 18888 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 04:21:47.708  用时: 385毫秒  URI: /js/a/gen/genTable/form  总内存: 714MB  已用内存: 237.109MB
2019-07-08 16:21:47.846 DEBUG 18888 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 16:21:47.846 DEBUG 18888 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@ba117a1] will be managed by Spring
2019-07-08 16:21:47.847 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:21:47.847 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148145140715765760(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 16:21:47.708(Timestamp), /js/a/gen/genTable/form(String), GET(String), (String), (String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 385(Long)
2019-07-08 16:21:47.894 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 16:21:54.595 DEBUG 18888 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 04:21:54.595  URI: /js/a/gen/genTable/form
2019-07-08 16:21:54.641 DEBUG 18888 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = #{tableName}
2019-07-08 16:21:54.641 DEBUG 18888 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@ba117a1] will be managed by Spring
2019-07-08 16:21:54.642 DEBUG 18888 [nio-8980-exec-2] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = ? 
2019-07-08 16:21:54.642 DEBUG 18888 [nio-8980-exec-2] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: sys_doctor_label(String)
2019-07-08 16:21:54.666 DEBUG 18888 [nio-8980-exec-2] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 0
2019-07-08 16:21:54.805 DEBUG 18888 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = #{tableName}
2019-07-08 16:21:54.806 DEBUG 18888 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@ba117a1] will be managed by Spring
2019-07-08 16:21:54.807 DEBUG 18888 [nio-8980-exec-2] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = ? 
2019-07-08 16:21:54.808 DEBUG 18888 [nio-8980-exec-2] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: sys_doctor_label(String)
2019-07-08 16:21:54.832 DEBUG 18888 [nio-8980-exec-2] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 0
2019-07-08 16:21:54.967 DEBUG 18888 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@ba117a1] will be managed by Spring
2019-07-08 16:21:54.969 DEBUG 18888 [nio-8980-exec-2] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.table_name AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.`TABLES` t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.table_name AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.`VIEWS` t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName" 
2019-07-08 16:21:54.969 DEBUG 18888 [nio-8980-exec-2] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: sys_doctor_label(String), sys_doctor_label(String)
2019-07-08 16:21:54.995 DEBUG 18888 [nio-8980-exec-2] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2019-07-08 16:21:54.997 DEBUG 18888 [nio-8980-exec-2] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.`COLUMNS` t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION 
2019-07-08 16:21:54.998 DEBUG 18888 [nio-8980-exec-2] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: sys_doctor_label(String)
2019-07-08 16:21:55.022 DEBUG 18888 [nio-8980-exec-2] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 9
2019-07-08 16:21:55.023 DEBUG 18888 [nio-8980-exec-2] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.`COLUMNS` au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY='PRI' AND au.TABLE_NAME = ? 
2019-07-08 16:21:55.023 DEBUG 18888 [nio-8980-exec-2] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: sys_doctor_label(String)
2019-07-08 16:21:55.047 DEBUG 18888 [nio-8980-exec-2] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 1
2019-07-08 16:21:55.146 DEBUG 18888 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.id AS "id", a.dict_name AS "dictName", a.dict_type AS "dictType", a.is_sys AS "isSys" FROM js_sys_dict_type a WHERE a.status = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2019-07-08 16:21:55.148 DEBUG 18888 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@ba117a1] will not be managed by Spring
2019-07-08 16:21:55.148 DEBUG 18888 [nio-8980-exec-2] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.id AS "id", a.dict_name AS "dictName", a.dict_type AS "dictType", a.is_sys AS "isSys" FROM js_sys_dict_type a WHERE a.status = ? ORDER BY a.dict_type, a.update_date DESC 
2019-07-08 16:21:55.149 DEBUG 18888 [nio-8980-exec-2] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2019-07-08 16:21:55.173 DEBUG 18888 [nio-8980-exec-2] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2019-07-08 16:21:55.174 DEBUG 18888 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a ORDER BY a.update_date DESC
2019-07-08 16:21:55.175 DEBUG 18888 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@ba117a1] will not be managed by Spring
2019-07-08 16:21:55.176 DEBUG 18888 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a ORDER BY a.update_date DESC 
2019-07-08 16:21:55.176 DEBUG 18888 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2019-07-08 16:21:55.224 DEBUG 18888 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 40
2019-07-08 16:21:55.268 DEBUG 18888 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@ba117a1] will be managed by Spring
2019-07-08 16:21:55.269 DEBUG 18888 [nio-8980-exec-2] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20 
2019-07-08 16:21:55.270 DEBUG 18888 [nio-8980-exec-2] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2019-07-08 16:21:55.295 DEBUG 18888 [nio-8980-exec-2] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 3
2019-07-08 16:21:55.391 INFO  18888 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> public java.lang.String com.jeesite.modules.gen.web.GenTableController.form(com.jeesite.modules.gen.entity.GenTable,java.lang.String,org.springframework.ui.Model,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-08 16:21:55.402 DEBUG 18888 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 04:21:55.401  用时: 806毫秒  URI: /js/a/gen/genTable/form  总内存: 714MB  已用内存: 242.252MB
2019-07-08 16:21:55.539 DEBUG 18888 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 16:21:55.540 DEBUG 18888 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@ba117a1] will be managed by Spring
2019-07-08 16:21:55.540 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:21:55.540 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148145172982546432(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 16:21:55.401(Timestamp), /js/a/gen/genTable/form(String), POST(String), isNewRecord=true&tableName=sys_doctor_label(String), sys_doctor_label(String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 806(Long)
2019-07-08 16:21:55.594 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 16:22:14.348 DEBUG 18888 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 04:22:14.348  URI: /js/a/gen/genTable/save
2019-07-08 16:22:14.394 DEBUG 18888 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = #{tableName}
2019-07-08 16:22:14.395 DEBUG 18888 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@ba117a1] will be managed by Spring
2019-07-08 16:22:14.395 DEBUG 18888 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = ? 
2019-07-08 16:22:14.396 DEBUG 18888 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: sys_doctor_label(String)
2019-07-08 16:22:14.419 DEBUG 18888 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 0
2019-07-08 16:22:14.553 WARN  18888 [nio-8980-exec-4] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'genTable' on field 'functionAuthor': rejected value []; codes [NotBlank.genTable.functionAuthor,NotBlank.functionAuthor,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [genTable.functionAuthor,functionAuthor]; arguments []; default message [functionAuthor]]; default message [功能作者不能为空]] to ModelAndView: reference to view with name 'error/400'; model is {}
2019-07-08 16:22:14.584 DEBUG 18888 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 04:22:14.580  用时: 232毫秒  URI: /js/a/gen/genTable/save  总内存: 714MB  已用内存: 256.646MB
2019-07-08 16:22:14.723 DEBUG 18888 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 16:22:14.724 DEBUG 18888 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@ba117a1] will be managed by Spring
2019-07-08 16:22:14.724 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:22:14.725 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148145253441880064(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 16:22:14.584(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=true&tableName=sys_doctor_label&comments=sys_doctor_label&className=DoctorLabel&functionAuthor=&parentTableName=&parentTableFkName=&remarks=sys_doctor_label&columnList[0].id=&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=id&columnList[0].comments=id&columnList[0].columnType=varchar(64)&columnList[0].attrType=String&columnList[0].fullAttrName=id&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=6/4/8&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=type&columnList[1].comments=标签类型：1.身体部位，2.接受疗法，3.技能分类&columnList[1].columnType=varchar(64)&columnList[1].attrType=String&columnList[1].fullAttrName=type&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=6/4/8&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[2].id=&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=content&columnList[2].comments=标签内容&columnList[2].columnType=varchar(64)&columnList[2].attrType=String&columnList[2].fullAttrName=content&!columnList[2].isPk=&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&columnList[2].isUpdate=1&!columnList[2].isList=&columnList[2].isList=1&!columnList[2].isQuery=&columnList[2].isQuery=1&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].showType=textarea&columnList[2].optionMap['gridRowCol']=12/2/10&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['isNewLine']=1&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&columnList[3].id=&columnList[3].status=&columnList[3].columnSort=40&columnList[3].columnName=create_by&columnList[3].comments=create_by&columnList[3].columnType=varchar(64)&columnList[3].attrType=String&columnList[3].fullAttrName=createBy&!columnList[3].isPk=&!columnList[3].isInsert=&columnList[3].isInsert=1&!columnList[3].isUpdate=&!columnList[3].isList=&!columnList[3].isQuery=&columnList[3].queryType=EQ&!columnList[3].isEdit=&!columnList[3].isRequired=&columnList[3].showType=input&columnList[3].optionMap['gridRowCol']=6/4/8&!columnList[3].optionMap['isNewLine']=&columnList[3].optionMap['dictName']=&columnList[3].optionMap['dictType']=&!columnList[3].optionMap['fieldValid']=&columnList[4].id=&columnList[4].status=&columnList[4].columnSort=50&columnList[4].columnName=create_date&columnList[4].comments=create_date&columnList[4].columnType=datetime&columnList[4].attrType=java.util.Date&columnList[4].fullAttrName=createDate&!columnList[4].isPk=&!columnList[4].isInsert=&columnList[4].isInsert=1&!columnList[4].isUpdate=&!columnList[4].isList=&!columnList[4].isQuery=&columnList[4].queryType=EQ&!columnList[4].isEdit=&!columnList[4].isRequired=&columnList[4].showType=input&columnList[4].optionMap['gridRowCol']=6/4/8&!columnList[4].optionMap['isNewLine']=&columnList[4].optionMap['dictName']=&columnList[4].optionMap['dictType']=&!columnList[4].optionMap['fieldValid']=&columnList[5].id=&columnList[5].status=&columnList[5].columnSort=60&columnList[5].columnName=update_by&columnList[5].comments=update_by&columnList[5].columnType=varchar(64)&columnList[5].attrType=String&columnList[5].fullAttrName=updateBy&!columnList[5].isPk=&!columnList[5].isInsert=&columnList[5].isInsert=1&!columnList[5].isUpdate=&columnList[5].isUpdate=1&!columnList[5].isList=&!columnList[5].isQuery=&columnList[5].queryType=EQ&!columnList[5].isEdit=&!columnList[5].isRequired=&columnList[5].showType=input&columnList[5].optionMap['gridRowCol']=6/4/8&!columnList[5].optionMap['isNewLine']=&columnList[5].optionMap['dictName']=&columnList[5].optionMap['dictType']=&!columnList[5].optionMap['fieldValid']=&columnList[6].id=&columnList[6].status=&columnList[6].columnSort=70&columnList[6].columnName=update_date&columnList[6].comments=update_date&columnList[6].columnType=datetime&columnList[6].attrType=java.util.Date&columnList[6].fullAttrName=updateDate&!columnList[6].isPk=&!columnList[6].isInsert=&columnList[6].isInsert=1&!columnList[6].isUpdate=&columnList[6].isUpdate=1&!columnList[6].isList=&columnList[6].isList=1&!columnList[6].isQuery=&columnList[6].queryType=EQ&!columnList[6].isEdit=&!columnList[6].isRequired=&columnList[6].showType=input&columnList[6].optionMap['gridRowCol']=6/4/8&!columnList[6].optionMap['isNewLine']=&columnList[6].optionMap['dictName']=&columnList[6].optionMap['dictType']=&!columnList[6].optionMap['fieldValid']=&columnList[7].id=&columnList[7].status=&columnList[7].columnSort=80&columnList[7].columnName=remarks&columnList[7].comments=remarks&columnList[7].columnType=varchar(64)&columnList[7].attrType=String&columnList[7].fullAttrName=remarks&!columnList[7].isPk=&!columnList[7].isInsert=&columnList[7].isInsert=1&!columnList[7].isUpdate=&columnList[7].isUpdate=1&!columnList[7].isList=&columnList[7].isList=1&!columnList[7].isQuery=&columnList[7].isQuery=1&columnList[7].queryType=LIKE&!columnList[7].isEdit=&columnList[7].isEdit=1&!columnList[7].isRequired=&columnList[7].showType=textarea&columnList[7].optionMap['gridRowCol']=12/2/10&!columnList[7].optionMap['isNewLine']=&columnList[7].optionMap['isNewLine']=1&columnList[7].optionMap['dictName']=&columnList[7].optionMap['dictType']=&!columnList[7].optionMap['fieldValid']=&columnList[8].id=&columnList[8].status=&columnList[8].columnSort=90&columnList[8].columnName=del_flag&columnList[8].comments=del_flag&columnList[8].columnType=char(1)&columnList[8].attrType=String&columnList[8].fullAttrName=delFlag&!columnList[8].isPk=&!columnList[8].isInsert=&columnList[8].isInsert=1&!columnList[8].isUpdate=&columnList[8].isUpdate=1&!columnList[8].isList=&columnList[8].isList=1&!columnList[8].isQuery=&columnList[8].isQuery=1&columnList[8].queryType=EQ&!columnList[8].isEdit=&columnList[8].isEdit=1&!columnList[8].isRequired=&columnList[8].showType=input&columnList[8].optionMap['gridRowCol']=6/4/8&!columnList[8].optionMap['isNewLine']=&columnList[8].optionMap['dictName']=&columnList[8].optionMap['dictType']=&!columnList[8].optionMap['fieldValid']=&tplCategory=dao&packageName=com.jeesite.modules&moduleName=app&subModuleName=&functionName=sys_doctor_label&functionNameSimple=sys_doctor_label&genBaseDir=E:\gitlabHome\HaoLangZhongProject\HaoLangZhong&optionMap['isHaveDisableEnable']=0&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&optionMap['isImageUpload']=0&optionMap['isFileUpload']=0&genFlag=0&!replaceFile=0(String), sys_doctor_label(String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 232(Long)
2019-07-08 16:22:14.781 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 16:22:23.127 DEBUG 18888 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 04:22:23.127  URI: /js/a/gen/genTable/save
2019-07-08 16:22:23.173 DEBUG 18888 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = #{tableName}
2019-07-08 16:22:23.174 DEBUG 18888 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@ba117a1] will be managed by Spring
2019-07-08 16:22:23.174 DEBUG 18888 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = ? 
2019-07-08 16:22:23.175 DEBUG 18888 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: sys_doctor_label(String)
2019-07-08 16:22:23.198 DEBUG 18888 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 0
2019-07-08 16:22:23.330 DEBUG 18888 [nio-8980-exec-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO js_gen_table (`table_name`, `class_name`, `comments`, `parent_table_name`, `parent_table_fk_name`, `data_source_name`, `tpl_category`, `package_name`, `module_name`, `sub_module_name`, `function_name`, `function_name_simple`, `function_author`, `gen_base_dir`, `options`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`) VALUES (#{tableName}, #{className}, #{comments}, #{parentTableName}, #{parentTableFkName}, #{dataSourceName}, #{tplCategory}, #{packageName}, #{moduleName}, #{subModuleName}, #{functionName}, #{functionNameSimple}, #{functionAuthor}, #{genBaseDir}, #{options}, #{createBy}, #{createDate}, #{updateBy}, #{updateDate}, #{remarks})
2019-07-08 16:22:23.330 DEBUG 18888 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@ba117a1] will be managed by Spring
2019-07-08 16:22:23.331 DEBUG 18888 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table (`table_name`, `class_name`, `comments`, `parent_table_name`, `parent_table_fk_name`, `data_source_name`, `tpl_category`, `package_name`, `module_name`, `sub_module_name`, `function_name`, `function_name_simple`, `function_author`, `gen_base_dir`, `options`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:22:23.332 DEBUG 18888 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.insert ] - ==> Parameters: sys_doctor_label(String), DoctorLabel(String), sys_doctor_label(String), (String), (String), (String), dao(String), com.jeesite.modules(String), app(String), (String), sys_doctor_label(String), sys_doctor_label(String), 范耘诚(String), E:\gitlabHome\HaoLangZhongProject\HaoLangZhong(String), {"treeViewName":"","isHaveDelete":"1","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isImageUpload":"0"}(String), system(String), 2019-07-08 16:22:23.329(Timestamp), system(String), 2019-07-08 16:22:23.33(Timestamp), sys_doctor_label(String)
2019-07-08 16:22:23.378 DEBUG 18888 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.insert ] - <==    Updates: 1
2019-07-08 16:22:23.380 DEBUG 18888 [nio-8980-exec-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 16:22:23.380 DEBUG 18888 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:22:23.381 DEBUG 18888 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148145290326589440(String), sys_doctor_label(String), id(String), 10(Integer), varchar(64)(String), id(String), id(String), id(String), String(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 16:22:23.426 DEBUG 18888 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 16:22:23.427 DEBUG 18888 [nio-8980-exec-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 16:22:23.428 DEBUG 18888 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:22:23.428 DEBUG 18888 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148145290527916032(String), sys_doctor_label(String), type(String), 20(Integer), varchar(64)(String), 标签类型(String), 标签类型：1.身体部位，2.接受疗法，3.技能分类(String), type(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 16:22:23.473 DEBUG 18888 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 16:22:23.476 DEBUG 18888 [nio-8980-exec-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 16:22:23.477 DEBUG 18888 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:22:23.478 DEBUG 18888 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148145290729242624(String), sys_doctor_label(String), content(String), 30(Integer), varchar(64)(String), 标签内容(String), 标签内容(String), content(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), textarea(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/10","dictType":""}(String)
2019-07-08 16:22:23.522 DEBUG 18888 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 16:22:23.525 DEBUG 18888 [nio-8980-exec-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 16:22:23.525 DEBUG 18888 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:22:23.526 DEBUG 18888 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148145290934763520(String), sys_doctor_label(String), create_by(String), 40(Integer), varchar(64)(String), create_by(String), create_by(String), createBy(String), String(String), (String), 1(String), 1(String), (String), (String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 16:22:23.571 DEBUG 18888 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 16:22:23.574 DEBUG 18888 [nio-8980-exec-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 16:22:23.574 DEBUG 18888 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:22:23.575 DEBUG 18888 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148145291140284416(String), sys_doctor_label(String), create_date(String), 50(Integer), datetime(String), create_date(String), create_date(String), createDate(String), java.util.Date(String), (String), 1(String), 1(String), (String), (String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 16:22:23.621 DEBUG 18888 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 16:22:23.623 DEBUG 18888 [nio-8980-exec-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 16:22:23.624 DEBUG 18888 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:22:23.625 DEBUG 18888 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148145291345805312(String), sys_doctor_label(String), update_by(String), 60(Integer), varchar(64)(String), update_by(String), update_by(String), updateBy(String), String(String), (String), 1(String), 1(String), 1(String), (String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 16:22:23.668 DEBUG 18888 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 16:22:23.673 DEBUG 18888 [nio-8980-exec-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 4毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 16:22:23.674 DEBUG 18888 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:22:23.675 DEBUG 18888 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148145291547131904(String), sys_doctor_label(String), update_date(String), 70(Integer), datetime(String), update_date(String), update_date(String), updateDate(String), java.util.Date(String), (String), 1(String), 1(String), 1(String), 1(String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 16:22:23.720 DEBUG 18888 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 16:22:23.722 DEBUG 18888 [nio-8980-exec-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 16:22:23.722 DEBUG 18888 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:22:23.723 DEBUG 18888 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148145291761041408(String), sys_doctor_label(String), remarks(String), 80(Integer), varchar(64)(String), remarks(String), remarks(String), remarks(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), LIKE(String), 1(String), textarea(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/10","dictType":""}(String)
2019-07-08 16:22:23.767 DEBUG 18888 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 16:22:23.770 DEBUG 18888 [nio-8980-exec-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2019-07-08 16:22:23.771 DEBUG 18888 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO js_gen_table_column (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:22:23.772 DEBUG 18888 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1148145291962368000(String), sys_doctor_label(String), del_flag(String), 90(Integer), char(1)(String), del_flag(String), del_flag(String), delFlag(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2019-07-08 16:22:23.817 DEBUG 18888 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2019-07-08 16:22:23.896 DEBUG 18888 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 04:22:23.887  用时: 760毫秒  URI: /js/a/gen/genTable/save  总内存: 714MB  已用内存: 265.473MB
2019-07-08 16:22:23.903 DEBUG 18888 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 04:22:23.903  URI: /js/a/gen/genTable/form
2019-07-08 16:22:23.976 DEBUG 18888 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = #{tableName}
2019-07-08 16:22:23.976 DEBUG 18888 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:22:23.977 DEBUG 18888 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = ? 
2019-07-08 16:22:23.977 DEBUG 18888 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: sys_doctor_label(String)
2019-07-08 16:22:24.004 DEBUG 18888 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2019-07-08 16:22:24.005 DEBUG 18888 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.id AS "id", a.table_name AS "genTable.tableName", a.column_name AS "columnName", a.column_sort AS "columnSort", a.column_type AS "columnType", a.column_label AS "columnLabel", a.comments AS "comments", a.attr_name AS "fullAttrName", a.attr_type AS "attrType", a.is_pk AS "isPk", a.is_null AS "isNull", a.is_insert AS "isInsert", a.is_update AS "isUpdate", a.is_list AS "isList", a.is_query AS "isQuery", a.query_type AS "queryType", a.is_edit AS "isEdit", a.show_type AS "showType", a.options AS "options" FROM js_gen_table_column a WHERE a.table_name = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2019-07-08 16:22:24.006 DEBUG 18888 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.id AS "id", a.table_name AS "genTable.tableName", a.column_name AS "columnName", a.column_sort AS "columnSort", a.column_type AS "columnType", a.column_label AS "columnLabel", a.comments AS "comments", a.attr_name AS "fullAttrName", a.attr_type AS "attrType", a.is_pk AS "isPk", a.is_null AS "isNull", a.is_insert AS "isInsert", a.is_update AS "isUpdate", a.is_list AS "isList", a.is_query AS "isQuery", a.query_type AS "queryType", a.is_edit AS "isEdit", a.show_type AS "showType", a.options AS "options" FROM js_gen_table_column a WHERE a.table_name = ? ORDER BY a.column_sort 
2019-07-08 16:22:24.006 DEBUG 18888 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: sys_doctor_label(String)
2019-07-08 16:22:24.030 DEBUG 18888 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 9
2019-07-08 16:22:24.032 DEBUG 18888 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 16:22:24.032 DEBUG 18888 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@ba117a1] will be managed by Spring
2019-07-08 16:22:24.033 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:22:24.034 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148145292495044608(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 16:22:23.895(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=true&tableName=sys_doctor_label&comments=sys_doctor_label&className=DoctorLabel&functionAuthor=范耘诚&parentTableName=&parentTableFkName=&remarks=sys_doctor_label&columnList[0].id=&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=id&columnList[0].comments=id&columnList[0].columnType=varchar(64)&columnList[0].attrType=String&columnList[0].fullAttrName=id&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=6/4/8&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=type&columnList[1].comments=标签类型：1.身体部位，2.接受疗法，3.技能分类&columnList[1].columnType=varchar(64)&columnList[1].attrType=String&columnList[1].fullAttrName=type&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=6/4/8&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[2].id=&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=content&columnList[2].comments=标签内容&columnList[2].columnType=varchar(64)&columnList[2].attrType=String&columnList[2].fullAttrName=content&!columnList[2].isPk=&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&columnList[2].isUpdate=1&!columnList[2].isList=&columnList[2].isList=1&!columnList[2].isQuery=&columnList[2].isQuery=1&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].showType=textarea&columnList[2].optionMap['gridRowCol']=12/2/10&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['isNewLine']=1&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&columnList[3].id=&columnList[3].status=&columnList[3].columnSort=40&columnList[3].columnName=create_by&columnList[3].comments=create_by&columnList[3].columnType=varchar(64)&columnList[3].attrType=String&columnList[3].fullAttrName=createBy&!columnList[3].isPk=&!columnList[3].isInsert=&columnList[3].isInsert=1&!columnList[3].isUpdate=&!columnList[3].isList=&!columnList[3].isQuery=&columnList[3].queryType=EQ&!columnList[3].isEdit=&!columnList[3].isRequired=&columnList[3].showType=input&columnList[3].optionMap['gridRowCol']=6/4/8&!columnList[3].optionMap['isNewLine']=&columnList[3].optionMap['dictName']=&columnList[3].optionMap['dictType']=&!columnList[3].optionMap['fieldValid']=&columnList[4].id=&columnList[4].status=&columnList[4].columnSort=50&columnList[4].columnName=create_date&columnList[4].comments=create_date&columnList[4].columnType=datetime&columnList[4].attrType=java.util.Date&columnList[4].fullAttrName=createDate&!columnList[4].isPk=&!columnList[4].isInsert=&columnList[4].isInsert=1&!columnList[4].isUpdate=&!columnList[4].isList=&!columnList[4].isQuery=&columnList[4].queryType=EQ&!columnList[4].isEdit=&!columnList[4].isRequired=&columnList[4].showType=input&columnList[4].optionMap['gridRowCol']=6/4/8&!columnList[4].optionMap['isNewLine']=&columnList[4].optionMap['dictName']=&columnList[4].optionMap['dictType']=&!columnList[4].optionMap['fieldValid']=&columnList[5].id=&columnList[5].status=&columnList[5].columnSort=60&columnList[5].columnName=update_by&columnList[5].comments=update_by&columnList[5].columnType=varchar(64)&columnList[5].attrType=String&columnList[5].fullAttrName=updateBy&!columnList[5].isPk=&!columnList[5].isInsert=&columnList[5].isInsert=1&!columnList[5].isUpdate=&columnList[5].isUpdate=1&!columnList[5].isList=&!columnList[5].isQuery=&columnList[5].queryType=EQ&!columnList[5].isEdit=&!columnList[5].isRequired=&columnList[5].showType=input&columnList[5].optionMap['gridRowCol']=6/4/8&!columnList[5].optionMap['isNewLine']=&columnList[5].optionMap['dictName']=&columnList[5].optionMap['dictType']=&!columnList[5].optionMap['fieldValid']=&columnList[6].id=&columnList[6].status=&columnList[6].columnSort=70&columnList[6].columnName=update_date&columnList[6].comments=update_date&columnList[6].columnType=datetime&columnList[6].attrType=java.util.Date&columnList[6].fullAttrName=updateDate&!columnList[6].isPk=&!columnList[6].isInsert=&columnList[6].isInsert=1&!columnList[6].isUpdate=&columnList[6].isUpdate=1&!columnList[6].isList=&columnList[6].isList=1&!columnList[6].isQuery=&columnList[6].queryType=EQ&!columnList[6].isEdit=&!columnList[6].isRequired=&columnList[6].showType=input&columnList[6].optionMap['gridRowCol']=6/4/8&!columnList[6].optionMap['isNewLine']=&columnList[6].optionMap['dictName']=&columnList[6].optionMap['dictType']=&!columnList[6].optionMap['fieldValid']=&columnList[7].id=&columnList[7].status=&columnList[7].columnSort=80&columnList[7].columnName=remarks&columnList[7].comments=remarks&columnList[7].columnType=varchar(64)&columnList[7].attrType=String&columnList[7].fullAttrName=remarks&!columnList[7].isPk=&!columnList[7].isInsert=&columnList[7].isInsert=1&!columnList[7].isUpdate=&columnList[7].isUpdate=1&!columnList[7].isList=&columnList[7].isList=1&!columnList[7].isQuery=&columnList[7].isQuery=1&columnList[7].queryType=LIKE&!columnList[7].isEdit=&columnList[7].isEdit=1&!columnList[7].isRequired=&columnList[7].showType=textarea&columnList[7].optionMap['gridRowCol']=12/2/10&!columnList[7].optionMap['isNewLine']=&columnList[7].optionMap['isNewLine']=1&columnList[7].optionMap['dictName']=&columnList[7].optionMap['dictType']=&!columnList[7].optionMap['fieldValid']=&columnList[8].id=&columnList[8].status=&columnList[8].columnSort=90&columnList[8].columnName=del_flag&columnList[8].comments=del_flag&columnList[8].columnType=char(1)&columnList[8].attrType=String&columnList[8].fullAttrName=delFlag&!columnList[8].isPk=&!columnList[8].isInsert=&columnList[8].isInsert=1&!columnList[8].isUpdate=&columnList[8].isUpdate=1&!columnList[8].isList=&columnList[8].isList=1&!columnList[8].isQuery=&columnList[8].isQuery=1&columnList[8].queryType=EQ&!columnList[8].isEdit=&columnList[8].isEdit=1&!columnList[8].isRequired=&columnList[8].showType=input&columnList[8].optionMap['gridRowCol']=6/4/8&!columnList[8].optionMap['isNewLine']=&columnList[8].optionMap['dictName']=&columnList[8].optionMap['dictType']=&!columnList[8].optionMap['fieldValid']=&tplCategory=dao&packageName=com.jeesite.modules&moduleName=app&subModuleName=&functionName=sys_doctor_label&functionNameSimple=sys_doctor_label&genBaseDir=E:\gitlabHome\HaoLangZhongProject\HaoLangZhong&optionMap['isHaveDisableEnable']=0&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&optionMap['isImageUpload']=0&optionMap['isFileUpload']=0&genFlag=0&!replaceFile=0(String), sys_doctor_label(String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 760(Long)
2019-07-08 16:22:24.083 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 16:22:24.174 DEBUG 18888 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:22:24.175 DEBUG 18888 [nio-8980-exec-6] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.table_name AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.`TABLES` t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.table_name AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.`VIEWS` t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName" 
2019-07-08 16:22:24.175 DEBUG 18888 [nio-8980-exec-6] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: sys_doctor_label(String), sys_doctor_label(String)
2019-07-08 16:22:24.204 DEBUG 18888 [nio-8980-exec-6] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2019-07-08 16:22:24.205 DEBUG 18888 [nio-8980-exec-6] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.`COLUMNS` t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION 
2019-07-08 16:22:24.206 DEBUG 18888 [nio-8980-exec-6] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: sys_doctor_label(String)
2019-07-08 16:22:24.232 DEBUG 18888 [nio-8980-exec-6] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 9
2019-07-08 16:22:24.233 DEBUG 18888 [nio-8980-exec-6] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.`COLUMNS` au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY='PRI' AND au.TABLE_NAME = ? 
2019-07-08 16:22:24.233 DEBUG 18888 [nio-8980-exec-6] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: sys_doctor_label(String)
2019-07-08 16:22:24.257 DEBUG 18888 [nio-8980-exec-6] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 1
2019-07-08 16:22:24.362 DEBUG 18888 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.id AS "id", a.dict_name AS "dictName", a.dict_type AS "dictType", a.is_sys AS "isSys" FROM js_sys_dict_type a WHERE a.status = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2019-07-08 16:22:24.364 DEBUG 18888 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will not be managed by Spring
2019-07-08 16:22:24.365 DEBUG 18888 [nio-8980-exec-6] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.id AS "id", a.dict_name AS "dictName", a.dict_type AS "dictType", a.is_sys AS "isSys" FROM js_sys_dict_type a WHERE a.status = ? ORDER BY a.dict_type, a.update_date DESC 
2019-07-08 16:22:24.366 DEBUG 18888 [nio-8980-exec-6] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2019-07-08 16:22:24.394 DEBUG 18888 [nio-8980-exec-6] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2019-07-08 16:22:24.396 DEBUG 18888 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a ORDER BY a.update_date DESC
2019-07-08 16:22:24.397 DEBUG 18888 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will not be managed by Spring
2019-07-08 16:22:24.398 DEBUG 18888 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a ORDER BY a.update_date DESC 
2019-07-08 16:22:24.398 DEBUG 18888 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2019-07-08 16:22:24.453 DEBUG 18888 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 41
2019-07-08 16:22:24.502 DEBUG 18888 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:22:24.503 DEBUG 18888 [nio-8980-exec-6] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20 
2019-07-08 16:22:24.503 DEBUG 18888 [nio-8980-exec-6] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2019-07-08 16:22:24.529 DEBUG 18888 [nio-8980-exec-6] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 3
2019-07-08 16:22:24.624 INFO  18888 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> public java.lang.String com.jeesite.modules.gen.web.GenTableController.form(com.jeesite.modules.gen.entity.GenTable,java.lang.String,org.springframework.ui.Model,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-08 16:22:24.633 DEBUG 18888 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 04:22:24.632  用时: 729毫秒  URI: /js/a/gen/genTable/form  总内存: 714MB  已用内存: 270.101MB
2019-07-08 16:22:24.772 DEBUG 18888 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 16:22:24.772 DEBUG 18888 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:22:24.773 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:22:24.774 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148145295586246656(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 16:22:24.632(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=sys_doctor_label&op=step3(String), sys_doctor_label(String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 729(Long)
2019-07-08 16:22:24.823 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 16:22:26.691 DEBUG 18888 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 04:22:26.691  URI: /js/a/gen/genTable/save
2019-07-08 16:22:26.738 DEBUG 18888 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = #{tableName}
2019-07-08 16:22:26.738 DEBUG 18888 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:22:26.739 DEBUG 18888 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_gen_table a WHERE a.`table_name` = ? 
2019-07-08 16:22:26.739 DEBUG 18888 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: sys_doctor_label(String)
2019-07-08 16:22:26.764 DEBUG 18888 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2019-07-08 16:22:26.765 DEBUG 18888 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.id AS "id", a.table_name AS "genTable.tableName", a.column_name AS "columnName", a.column_sort AS "columnSort", a.column_type AS "columnType", a.column_label AS "columnLabel", a.comments AS "comments", a.attr_name AS "fullAttrName", a.attr_type AS "attrType", a.is_pk AS "isPk", a.is_null AS "isNull", a.is_insert AS "isInsert", a.is_update AS "isUpdate", a.is_list AS "isList", a.is_query AS "isQuery", a.query_type AS "queryType", a.is_edit AS "isEdit", a.show_type AS "showType", a.options AS "options" FROM js_gen_table_column a WHERE a.table_name = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2019-07-08 16:22:26.766 DEBUG 18888 [nio-8980-exec-8] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.id AS "id", a.table_name AS "genTable.tableName", a.column_name AS "columnName", a.column_sort AS "columnSort", a.column_type AS "columnType", a.column_label AS "columnLabel", a.comments AS "comments", a.attr_name AS "fullAttrName", a.attr_type AS "attrType", a.is_pk AS "isPk", a.is_null AS "isNull", a.is_insert AS "isInsert", a.is_update AS "isUpdate", a.is_list AS "isList", a.is_query AS "isQuery", a.query_type AS "queryType", a.is_edit AS "isEdit", a.show_type AS "showType", a.options AS "options" FROM js_gen_table_column a WHERE a.table_name = ? ORDER BY a.column_sort 
2019-07-08 16:22:26.766 DEBUG 18888 [nio-8980-exec-8] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: sys_doctor_label(String)
2019-07-08 16:22:26.791 DEBUG 18888 [nio-8980-exec-8] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 9
2019-07-08 16:22:26.920 DEBUG 18888 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 2毫秒: UPDATE js_gen_table SET `class_name` = #{className}, `comments` = #{comments}, `parent_table_name` = #{parentTableName}, `parent_table_fk_name` = #{parentTableFkName}, `data_source_name` = #{dataSourceName}, `tpl_category` = #{tplCategory}, `package_name` = #{packageName}, `module_name` = #{moduleName}, `sub_module_name` = #{subModuleName}, `function_name` = #{functionName}, `function_name_simple` = #{functionNameSimple}, `function_author` = #{functionAuthor}, `gen_base_dir` = #{genBaseDir}, `options` = #{options}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `table_name` = #{tableName}
2019-07-08 16:22:26.921 DEBUG 18888 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:22:26.922 DEBUG 18888 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.update ] - ==>  Preparing: UPDATE js_gen_table SET `class_name` = ?, `comments` = ?, `parent_table_name` = ?, `parent_table_fk_name` = ?, `data_source_name` = ?, `tpl_category` = ?, `package_name` = ?, `module_name` = ?, `sub_module_name` = ?, `function_name` = ?, `function_name_simple` = ?, `function_author` = ?, `gen_base_dir` = ?, `options` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `table_name` = ? 
2019-07-08 16:22:26.922 DEBUG 18888 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.update ] - ==> Parameters: DoctorLabel(String), sys_doctor_label(String), (String), (String), (String), dao(String), com.jeesite.modules(String), app(String), (String), sys_doctor_label(String), sys_doctor_label(String), 范耘诚(String), E:\gitlabHome\HaoLangZhongProject\HaoLangZhong(String), {"treeViewName":"","isHaveDelete":"1","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isImageUpload":"0"}(String), system(String), 2019-07-08 16:22:26.92(Timestamp), sys_doctor_label(String), sys_doctor_label(String)
2019-07-08 16:22:26.968 DEBUG 18888 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.update ] - <==    Updates: 1
2019-07-08 16:22:26.969 DEBUG 18888 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 16:22:26.970 DEBUG 18888 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 16:22:26.970 DEBUG 18888 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_doctor_label(String), id(String), 10(Integer), varchar(64)(String), id(String), id(String), id(String), String(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148145290326589440(String)
2019-07-08 16:22:27.016 DEBUG 18888 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 16:22:27.016 DEBUG 18888 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 16:22:27.017 DEBUG 18888 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 16:22:27.018 DEBUG 18888 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_doctor_label(String), type(String), 20(Integer), varchar(64)(String), 标签类型(String), 标签类型：1.身体部位，2.接受疗法，3.技能分类(String), type(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148145290527916032(String)
2019-07-08 16:22:27.064 DEBUG 18888 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 16:22:27.064 DEBUG 18888 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 16:22:27.065 DEBUG 18888 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 16:22:27.066 DEBUG 18888 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_doctor_label(String), content(String), 30(Integer), varchar(64)(String), 标签内容(String), 标签内容(String), content(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), textarea(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/10","dictType":""}(String), 1148145290729242624(String)
2019-07-08 16:22:27.112 DEBUG 18888 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 16:22:27.113 DEBUG 18888 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 16:22:27.114 DEBUG 18888 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 16:22:27.115 DEBUG 18888 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_doctor_label(String), create_by(String), 40(Integer), varchar(64)(String), create_by(String), create_by(String), createBy(String), String(String), (String), 1(String), 1(String), (String), (String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148145290934763520(String)
2019-07-08 16:22:27.161 DEBUG 18888 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 16:22:27.162 DEBUG 18888 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 16:22:27.163 DEBUG 18888 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 16:22:27.163 DEBUG 18888 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_doctor_label(String), create_date(String), 50(Integer), datetime(String), create_date(String), create_date(String), createDate(String), java.util.Date(String), (String), 1(String), 1(String), (String), (String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148145291140284416(String)
2019-07-08 16:22:27.210 DEBUG 18888 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 16:22:27.210 DEBUG 18888 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 16:22:27.211 DEBUG 18888 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 16:22:27.212 DEBUG 18888 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_doctor_label(String), update_by(String), 60(Integer), varchar(64)(String), update_by(String), update_by(String), updateBy(String), String(String), (String), 1(String), 1(String), 1(String), (String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148145291345805312(String)
2019-07-08 16:22:27.258 DEBUG 18888 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 16:22:27.258 DEBUG 18888 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 16:22:27.259 DEBUG 18888 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 16:22:27.259 DEBUG 18888 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_doctor_label(String), update_date(String), 70(Integer), datetime(String), update_date(String), update_date(String), updateDate(String), java.util.Date(String), (String), 1(String), 1(String), 1(String), 1(String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148145291547131904(String)
2019-07-08 16:22:27.306 DEBUG 18888 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 16:22:27.307 DEBUG 18888 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 16:22:27.307 DEBUG 18888 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 16:22:27.308 DEBUG 18888 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_doctor_label(String), remarks(String), 80(Integer), varchar(64)(String), remarks(String), remarks(String), remarks(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), LIKE(String), 1(String), textarea(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/10","dictType":""}(String), 1148145291761041408(String)
2019-07-08 16:22:27.355 DEBUG 18888 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 16:22:27.356 DEBUG 18888 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE js_gen_table_column SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2019-07-08 16:22:27.358 DEBUG 18888 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE js_gen_table_column SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ? 
2019-07-08 16:22:27.359 DEBUG 18888 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: sys_doctor_label(String), del_flag(String), 90(Integer), char(1)(String), del_flag(String), del_flag(String), delFlag(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1148145291962368000(String)
2019-07-08 16:22:27.406 DEBUG 18888 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2019-07-08 16:22:27.541 DEBUG 18888 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\resources\mappings\modules\app\DoctorLabelDao.xml
2019-07-08 16:22:27.541 DEBUG 18888 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.app.dao.DoctorLabelDao">
	
	<!-- 查询数据
	<select id="findList" resultType="DoctorLabel">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2019-07-08 16:22:27.541 DEBUG 18888 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Extents ==> E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\resources\mappings\modules\app\DoctorLabelDao.xml
2019-07-08 16:22:27.541 DEBUG 18888 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\java\com\jeesite\modules\app\entity\DoctorLabel.java
2019-07-08 16:22:27.544 DEBUG 18888 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.app.entity;

import org.hibernate.validator.constraints.Length;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * sys_doctor_labelEntity
 * @author 范耘诚
 * @version 2019-07-08
 */
@Table(name="sys_doctor_label", alias="a", columns={
		@Column(name="id", attrName="id", label="id", isPK=true),
		@Column(name="type", attrName="type", label="标签类型", comment="标签类型：1.身体部位，2.接受疗法，3.技能分类"),
		@Column(name="content", attrName="content", label="标签内容"),
		@Column(name="create_by", attrName="createBy", label="create_by", isUpdate=false, isQuery=false),
		@Column(name="create_date", attrName="createDate", label="create_date", isUpdate=false, isQuery=false),
		@Column(name="update_by", attrName="updateBy", label="update_by", isQuery=false),
		@Column(name="update_date", attrName="updateDate", label="update_date", isQuery=false),
		@Column(name="remarks", attrName="remarks", label="remarks", queryType=QueryType.LIKE),
		@Column(name="del_flag", attrName="delFlag", label="del_flag"),
	}, orderBy="a.update_date DESC"
)
public class DoctorLabel extends DataEntity<DoctorLabel> {
	
	private static final long serialVersionUID = 1L;
	private String type;		// 标签类型：1.身体部位，2.接受疗法，3.技能分类
	private String content;		// 标签内容
	private String delFlag;		// del_flag
	
	public DoctorLabel() {
		this(null);
	}

	public DoctorLabel(String id){
		super(id);
	}
	
	@Length(min=0, max=64, message="标签类型长度不能超过 64 个字符")
	public String getType() {
		return type;
	}

	public void setType(String type) {
		this.type = type;
	}
	
	@Length(min=0, max=64, message="标签内容长度不能超过 64 个字符")
	public String getContent() {
		return content;
	}

	public void setContent(String content) {
		this.content = content;
	}
	
	@Length(min=0, max=1, message="del_flag长度不能超过 1 个字符")
	public String getDelFlag() {
		return delFlag;
	}

	public void setDelFlag(String delFlag) {
		this.delFlag = delFlag;
	}
	
}
2019-07-08 16:22:27.546 DEBUG 18888 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\java\com\jeesite\modules\app\entity\DoctorLabel.java
2019-07-08 16:22:27.546 DEBUG 18888 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\java\com\jeesite\modules\app\dao\DoctorLabelDao.java
2019-07-08 16:22:27.546 DEBUG 18888 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.app.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.app.entity.DoctorLabel;

/**
 * sys_doctor_labelDAO接口
 * @author 范耘诚
 * @version 2019-07-08
 */
@MyBatisDao
public interface DoctorLabelDao extends CrudDao<DoctorLabel> {
	
}
2019-07-08 16:22:27.546 DEBUG 18888 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Extents ==> E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\java\com\jeesite\modules\app\dao\DoctorLabelDao.java
2019-07-08 16:22:27.647 DEBUG 18888 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 04:22:27.640  用时: 949毫秒  URI: /js/a/gen/genTable/save  总内存: 714MB  已用内存: 279.969MB
2019-07-08 16:22:27.664 DEBUG 18888 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 04:22:27.664  URI: /js/a/gen/genTable/listData
2019-07-08 16:22:27.714 DEBUG 18888 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", (SELECT count(1) FROM js_gen_table WHERE parent_table_name=a.table_name) AS "childNum" FROM js_gen_table a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2019-07-08 16:22:27.715 DEBUG 18888 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@ba117a1] will be managed by Spring
2019-07-08 16:22:27.725 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM js_gen_table a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?) 
2019-07-08 16:22:27.726 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2019-07-08 16:22:27.750 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.table_name AS "tableName", a.class_name AS "className", a.comments AS "comments", a.parent_table_name AS "parentTableName", a.parent_table_fk_name AS "parentTableFkName", a.data_source_name AS "dataSourceName", a.tpl_category AS "tplCategory", a.package_name AS "packageName", a.module_name AS "moduleName", a.sub_module_name AS "subModuleName", a.function_name AS "functionName", a.function_name_simple AS "functionNameSimple", a.function_author AS "functionAuthor", a.gen_base_dir AS "genBaseDir", a.options AS "options", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", (SELECT count(1) FROM js_gen_table WHERE parent_table_name=a.table_name) AS "childNum" FROM js_gen_table a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20 
2019-07-08 16:22:27.750 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2019-07-08 16:22:27.775 DEBUG 18888 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 20
2019-07-08 16:22:27.787 DEBUG 18888 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 16:22:27.788 DEBUG 18888 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@2eeee663] will be managed by Spring
2019-07-08 16:22:27.789 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:22:27.790 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148145308227878912(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 16:22:27.646(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=sys_doctor_label&comments=sys_doctor_label&className=DoctorLabel&functionAuthor=范耘诚&parentTableName=&parentTableFkName=&remarks=sys_doctor_label&columnList[0].id=1148145290326589440&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=id&columnList[0].comments=id&columnList[0].columnType=varchar(64)&columnList[0].attrType=String&columnList[0].fullAttrName=id&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=6/4/8&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1148145290527916032&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=type&columnList[1].comments=标签类型：1.身体部位，2.接受疗法，3.技能分类&columnList[1].columnType=varchar(64)&columnList[1].attrType=String&columnList[1].fullAttrName=type&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=6/4/8&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[2].id=1148145290729242624&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=content&columnList[2].comments=标签内容&columnList[2].columnType=varchar(64)&columnList[2].attrType=String&columnList[2].fullAttrName=content&!columnList[2].isPk=&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&columnList[2].isUpdate=1&!columnList[2].isList=&columnList[2].isList=1&!columnList[2].isQuery=&columnList[2].isQuery=1&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].showType=textarea&columnList[2].optionMap['gridRowCol']=12/2/10&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['isNewLine']=1&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&columnList[3].id=1148145290934763520&columnList[3].status=&columnList[3].columnSort=40&columnList[3].columnName=create_by&columnList[3].comments=create_by&columnList[3].columnType=varchar(64)&columnList[3].attrType=String&columnList[3].fullAttrName=createBy&!columnList[3].isPk=&!columnList[3].isInsert=&columnList[3].isInsert=1&!columnList[3].isUpdate=&!columnList[3].isList=&!columnList[3].isQuery=&columnList[3].queryType=EQ&!columnList[3].isEdit=&!columnList[3].isRequired=&columnList[3].showType=input&columnList[3].optionMap['gridRowCol']=6/4/8&!columnList[3].optionMap['isNewLine']=&columnList[3].optionMap['dictName']=&columnList[3].optionMap['dictType']=&!columnList[3].optionMap['fieldValid']=&columnList[4].id=1148145291140284416&columnList[4].status=&columnList[4].columnSort=50&columnList[4].columnName=create_date&columnList[4].comments=create_date&columnList[4].columnType=datetime&columnList[4].attrType=java.util.Date&columnList[4].fullAttrName=createDate&!columnList[4].isPk=&!columnList[4].isInsert=&columnList[4].isInsert=1&!columnList[4].isUpdate=&!columnList[4].isList=&!columnList[4].isQuery=&columnList[4].queryType=EQ&!columnList[4].isEdit=&!columnList[4].isRequired=&columnList[4].showType=input&columnList[4].optionMap['gridRowCol']=6/4/8&!columnList[4].optionMap['isNewLine']=&columnList[4].optionMap['dictName']=&columnList[4].optionMap['dictType']=&!columnList[4].optionMap['fieldValid']=&columnList[5].id=1148145291345805312&columnList[5].status=&columnList[5].columnSort=60&columnList[5].columnName=update_by&columnList[5].comments=update_by&columnList[5].columnType=varchar(64)&columnList[5].attrType=String&columnList[5].fullAttrName=updateBy&!columnList[5].isPk=&!columnList[5].isInsert=&columnList[5].isInsert=1&!columnList[5].isUpdate=&columnList[5].isUpdate=1&!columnList[5].isList=&!columnList[5].isQuery=&columnList[5].queryType=EQ&!columnList[5].isEdit=&!columnList[5].isRequired=&columnList[5].showType=input&columnList[5].optionMap['gridRowCol']=6/4/8&!columnList[5].optionMap['isNewLine']=&columnList[5].optionMap['dictName']=&columnList[5].optionMap['dictType']=&!columnList[5].optionMap['fieldValid']=&columnList[6].id=1148145291547131904&columnList[6].status=&columnList[6].columnSort=70&columnList[6].columnName=update_date&columnList[6].comments=update_date&columnList[6].columnType=datetime&columnList[6].attrType=java.util.Date&columnList[6].fullAttrName=updateDate&!columnList[6].isPk=&!columnList[6].isInsert=&columnList[6].isInsert=1&!columnList[6].isUpdate=&columnList[6].isUpdate=1&!columnList[6].isList=&columnList[6].isList=1&!columnList[6].isQuery=&columnList[6].queryType=EQ&!columnList[6].isEdit=&!columnList[6].isRequired=&columnList[6].showType=input&columnList[6].optionMap['gridRowCol']=6/4/8&!columnList[6].optionMap['isNewLine']=&columnList[6].optionMap['dictName']=&columnList[6].optionMap['dictType']=&!columnList[6].optionMap['fieldValid']=&columnList[7].id=1148145291761041408&columnList[7].status=&columnList[7].columnSort=80&columnList[7].columnName=remarks&columnList[7].comments=remarks&columnList[7].columnType=varchar(64)&columnList[7].attrType=String&columnList[7].fullAttrName=remarks&!columnList[7].isPk=&!columnList[7].isInsert=&columnList[7].isInsert=1&!columnList[7].isUpdate=&columnList[7].isUpdate=1&!columnList[7].isList=&columnList[7].isList=1&!columnList[7].isQuery=&columnList[7].isQuery=1&columnList[7].queryType=LIKE&!columnList[7].isEdit=&columnList[7].isEdit=1&!columnList[7].isRequired=&columnList[7].showType=textarea&columnList[7].optionMap['gridRowCol']=12/2/10&!columnList[7].optionMap['isNewLine']=&columnList[7].optionMap['isNewLine']=1&columnList[7].optionMap['dictName']=&columnList[7].optionMap['dictType']=&!columnList[7].optionMap['fieldValid']=&columnList[8].id=1148145291962368000&columnList[8].status=&columnList[8].columnSort=90&columnList[8].columnName=del_flag&columnList[8].comments=del_flag&columnList[8].columnType=char(1)&columnList[8].attrType=String&columnList[8].fullAttrName=delFlag&!columnList[8].isPk=&!columnList[8].isInsert=&columnList[8].isInsert=1&!columnList[8].isUpdate=&columnList[8].isUpdate=1&!columnList[8].isList=&columnList[8].isList=1&!columnList[8].isQuery=&columnList[8].isQuery=1&columnList[8].queryType=EQ&!columnList[8].isEdit=&columnList[8].isEdit=1&!columnList[8].isRequired=&columnList[8].showType=input&columnList[8].optionMap['gridRowCol']=6/4/8&!columnList[8].optionMap['isNewLine']=&columnList[8].optionMap['dictName']=&columnList[8].optionMap['dictType']=&!columnList[8].optionMap['fieldValid']=&tplCategory=dao&packageName=com.jeesite.modules&moduleName=app&subModuleName=&functionName=sys_doctor_label&functionNameSimple=sys_doctor_label&genBaseDir=E:\gitlabHome\HaoLangZhongProject\HaoLangZhong&optionMap['isHaveDisableEnable']=0&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&optionMap['isImageUpload']=0&optionMap['isFileUpload']=0&genFlag=2&!replaceFile=0(String), sys_doctor_label(String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 949(Long)
2019-07-08 16:22:27.841 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 16:22:27.868 DEBUG 18888 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 04:22:27.867  用时: 203毫秒  URI: /js/a/gen/genTable/listData  总内存: 714MB  已用内存: 280.904MB
2019-07-08 16:22:28.008 DEBUG 18888 [  SaveLogThread] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2019-07-08 16:22:28.008 DEBUG 18888 [  SaveLogThread] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@ba117a1] will be managed by Spring
2019-07-08 16:22:28.008 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO js_sys_log (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:22:28.009 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1148145309159014400(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2019-07-08 16:22:27.868(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 0:0:0:0:0:0:0:1(String), http://localhost:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36(String), Windows 10(String), Chrome(String), 203(Long)
2019-07-08 16:22:28.055 DEBUG 18888 [  SaveLogThread] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2019-07-08 16:25:28.608 INFO  7120 [           main] [com.jeesite.modules.Application        ] - Starting Application on DESKTOP-FVHI4E5 with PID 7120 (E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\webapp\WEB-INF\classes started by 1111111 in E:\gitlabHome\HaoLangZhongProject\HaoLangZhong)
2019-07-08 16:25:28.613 DEBUG 7120 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
2019-07-08 16:25:28.614 INFO  7120 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2019-07-08 16:25:31.411 INFO  7120 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2019-07-08 16:25:31.412 INFO  7120 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2019-07-08 16:25:32.894 INFO  7120 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/15040
2019-07-08 16:25:32.894 INFO  7120 [           main] [com.jeesite.common.config.Global       ] - user.dir: E:/gitlabHome/HaoLangZhongProject/HaoLangZhong
2019-07-08 16:25:32.895 INFO  7120 [           main] [com.jeesite.common.config.Global       ] - logPath: E:/gitlabHome/HaoLangZhongProject/HaoLangZhong/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.1.3 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.1

    您当前的版本为社区版，官方网站：http://jeesite.com

    机器码是：6c59ab5175477606a72e1628bfd13f1a
    产品名称：JeeSite Demo
    公司名称：ThinkGem

===================================================================

2019-07-08 16:25:34.934 INFO  7120 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2019-07-08 16:25:36.595 DEBUG 7120 [           main] [c.j.common.datasource.RoutingDataSource] - Set default target data source success.
2019-07-08 16:25:44.324 DEBUG 7120 [           main] [com.jeesite.common.beetl.BeetlUtils    ] - Beetl config files: [classpath:/config/beetl-core.properties, classpath:/config/beetl.properties]
2019-07-08 16:25:44.715 DEBUG 7120 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.module_code AS "moduleCode", a.module_name AS "moduleName", a.description AS "description", a.main_class_name AS "mainClassName", a.current_version AS "currentVersion", a.upgrade_info AS "upgradeInfo" FROM js_sys_module a WHERE a.status = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2019-07-08 16:25:44.753 DEBUG 7120 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@21e15093] will not be managed by Spring
2019-07-08 16:25:44.770 DEBUG 7120 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.module_code AS "moduleCode", a.module_name AS "moduleName", a.description AS "description", a.main_class_name AS "mainClassName", a.current_version AS "currentVersion", a.upgrade_info AS "upgradeInfo" FROM js_sys_module a WHERE a.status = ? ORDER BY a.update_date DESC 
2019-07-08 16:25:44.811 DEBUG 7120 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2019-07-08 16:25:44.861 DEBUG 7120 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 2
2019-07-08 16:25:45.030 DEBUG 7120 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.user_code AS "userCode", a.login_code AS "loginCode", a.user_name AS "userName", a.password AS "password", a.email AS "email", a.mobile AS "mobile", a.phone AS "phone", a.sex AS "sex", a.avatar AS "avatar", a.sign AS "sign", a.wx_openid AS "wxOpenid", a.mobile_imei AS "mobileImei", a.user_type AS "userType", a.ref_code AS "refCode", a.ref_name AS "refName", a.mgr_type AS "mgrType", a.pwd_security_level AS "pwdSecurityLevel", a.pwd_update_date AS "pwdUpdateDate", a.pwd_update_record AS "pwdUpdateRecord", a.pwd_question AS "pwdQuestion", a.pwd_question_answer AS "pwdQuestionAnswer", a.pwd_question_2 AS "pwdQuestion2", a.pwd_question_answer_2 AS "pwdQuestionAnswer2", a.pwd_question_3 AS "pwdQuestion3", a.pwd_question_answer_3 AS "pwdQuestionAnswer3", a.pwd_quest_update_date AS "pwdQuestUpdateDate", a.last_login_ip AS "lastLoginIp", a.last_login_date AS "lastLoginDate", a.freeze_date AS "freezeDate", a.freeze_cause AS "freezeCause", a.user_weight AS "userWeight", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_user a WHERE a.`user_code` = #{userCode}
2019-07-08 16:25:45.032 DEBUG 7120 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@21e15093] will be managed by Spring
2019-07-08 16:25:45.033 DEBUG 7120 [           main] [com.jeesite.modules.sys.dao.UserDao.get] - ==>  Preparing: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.user_code AS "userCode", a.login_code AS "loginCode", a.user_name AS "userName", a.password AS "password", a.email AS "email", a.mobile AS "mobile", a.phone AS "phone", a.sex AS "sex", a.avatar AS "avatar", a.sign AS "sign", a.wx_openid AS "wxOpenid", a.mobile_imei AS "mobileImei", a.user_type AS "userType", a.ref_code AS "refCode", a.ref_name AS "refName", a.mgr_type AS "mgrType", a.pwd_security_level AS "pwdSecurityLevel", a.pwd_update_date AS "pwdUpdateDate", a.pwd_update_record AS "pwdUpdateRecord", a.pwd_question AS "pwdQuestion", a.pwd_question_answer AS "pwdQuestionAnswer", a.pwd_question_2 AS "pwdQuestion2", a.pwd_question_answer_2 AS "pwdQuestionAnswer2", a.pwd_question_3 AS "pwdQuestion3", a.pwd_question_answer_3 AS "pwdQuestionAnswer3", a.pwd_quest_update_date AS "pwdQuestUpdateDate", a.last_login_ip AS "lastLoginIp", a.last_login_date AS "lastLoginDate", a.freeze_date AS "freezeDate", a.freeze_cause AS "freezeCause", a.user_weight AS "userWeight", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_user a WHERE a.`user_code` = ? 
2019-07-08 16:25:45.035 DEBUG 7120 [           main] [com.jeesite.modules.sys.dao.UserDao.get] - ==> Parameters: system(String)
2019-07-08 16:25:45.063 DEBUG 7120 [           main] [com.jeesite.modules.sys.dao.UserDao.get] - <==      Total: 1
2019-07-08 16:25:45.120 DEBUG 7120 [           main] [c.j.m.s.dao.RoleDao.findListByUserCode ] - ==>  Preparing: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.role_code AS "roleCode", a.role_name AS "roleName", a.role_type AS "roleType", a.role_sort AS "roleSort", a.is_sys AS "isSys", a.user_type AS "userType", a.data_scope AS "dataScope" FROM js_sys_role a JOIN js_sys_user_role ur ON a.role_code = ur.role_code WHERE a.status = ? AND ur.user_code = ? ORDER BY a.role_sort ASC 
2019-07-08 16:25:45.121 DEBUG 7120 [           main] [c.j.m.s.dao.RoleDao.findListByUserCode ] - ==> Parameters: 0(String), system(String)
2019-07-08 16:25:45.145 DEBUG 7120 [           main] [c.j.m.s.dao.RoleDao.findListByUserCode ] - <==      Total: 0
2019-07-08 16:25:45.200 DEBUG 7120 [           main] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 250毫秒: UPDATE js_sys_menu SET `status` = #{param1.status}, `update_by` = #{param1.updateBy}, `update_date` = #{param1.updateDate} WHERE status != #{param2.STATUS_DELETE} AND module_codes LIKE #{param2.sqlMap.where#module_codes#LIKE1}
2019-07-08 16:25:45.202 DEBUG 7120 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - ==>  Preparing: UPDATE js_sys_menu SET `status` = ?, `update_by` = ?, `update_date` = ? WHERE status != ? AND module_codes LIKE ? 
2019-07-08 16:25:45.204 DEBUG 7120 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - ==> Parameters: 2(String), system(String), 2019-07-08 16:25:45.2(Timestamp), 1(String), %cms%(String)
2019-07-08 16:25:45.250 DEBUG 7120 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - <==    Updates: 7
2019-07-08 16:25:45.360 DEBUG 7120 [           main] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 2毫秒: UPDATE js_sys_menu SET `status` = #{param1.status}, `update_by` = #{param1.updateBy}, `update_date` = #{param1.updateDate} WHERE status != #{param2.STATUS_DELETE} AND module_codes LIKE #{param2.sqlMap.where#module_codes#LIKE1}
2019-07-08 16:25:45.361 DEBUG 7120 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@21e15093] will be managed by Spring
2019-07-08 16:25:45.361 DEBUG 7120 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - ==>  Preparing: UPDATE js_sys_menu SET `status` = ?, `update_by` = ?, `update_date` = ? WHERE status != ? AND module_codes LIKE ? 
2019-07-08 16:25:45.362 DEBUG 7120 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - ==> Parameters: 0(String), system(String), 2019-07-08 16:25:45.36(Timestamp), 1(String), %core%(String)
2019-07-08 16:25:45.409 DEBUG 7120 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - <==    Updates: 70
2019-07-08 16:25:47.514 INFO  7120 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8980 (http) with context path '/js'
2019-07-08 16:25:47.521 INFO  7120 [           main] [com.jeesite.modules.Application        ] - Started Application in 19.823 seconds (JVM running for 20.579)
2019-07-08 16:25:47.782 DEBUG 7120 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.id AS "id", a.config_name AS "configName", a.config_key AS "configKey", a.config_value AS "configValue", a.is_sys AS "isSys", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_sys_config a ORDER BY a.config_key
2019-07-08 16:25:47.783 DEBUG 7120 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@21e15093] will not be managed by Spring
2019-07-08 16:25:47.784 DEBUG 7120 [nio-8980-exec-3] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.id AS "id", a.config_name AS "configName", a.config_key AS "configKey", a.config_value AS "configValue", a.is_sys AS "isSys", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_sys_config a ORDER BY a.config_key 
2019-07-08 16:25:47.785 DEBUG 7120 [nio-8980-exec-3] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2019-07-08 16:25:47.827 DEBUG 7120 [nio-8980-exec-3] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2019-07-08 16:26:19.427 WARN  7120 [nio-8980-exec-8] [o.s.w.s.m.s.DefaultHandlerExceptionResolver] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
2019-07-08 16:26:49.841 ERROR 7120 [io-8980-exec-10] [o.a.c.c.C.[.[.[/js].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [/js] threw exception [Request processing failed; nested exception is org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error invoking SqlProvider method (com.jeesite.common.mybatis.mapper.provider.InsertSqlProvider.insertBatch).  Cause: java.lang.reflect.InvocationTargetException] with root cause

java.lang.IllegalArgumentException: 没有需要插入的实体集合
	at org.springframework.util.Assert.notEmpty(Assert.java:450)
	at com.jeesite.common.mybatis.mapper.provider.InsertSqlProvider.insertBatch(sp:36)
	at com.jeesite.common.mybatis.mapper.provider.InsertSqlProvider.insertBatch(sp:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.builder.annotation.ProviderSqlSource.invokeProviderMethod(ProviderSqlSource.java:167)
	at org.apache.ibatis.builder.annotation.ProviderSqlSource.createSqlSource(ProviderSqlSource.java:116)
	at org.apache.ibatis.builder.annotation.ProviderSqlSource.getBoundSql(ProviderSqlSource.java:102)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:558)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)
	at com.jeesite.common.mybatis.interceptor.K.b(dz:134)
	at com.jeesite.common.mybatis.interceptor.DataSourceInterceptor.intercept(dz:148)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy184.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy110.insertBatch(Unknown Source)
	at com.jeesite.modules.app.web.AirPharmacyController.getasd(AirPharmacyController.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.b.doFilterInternal(ks:41)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:806)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2019-07-08 16:26:50.171 ERROR 7120 [io-8980-exec-10] [error/500                              ] - nested exception is org.apache.ibatis.builder.BuilderException: Error invoking SqlProvider method (com.jeesite.common.mybatis.mapper.provider.InsertSqlProvider.insertBatch).  Cause: java.lang.reflect.InvocationTargetException

org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error invoking SqlProvider method (com.jeesite.common.mybatis.mapper.provider.InsertSqlProvider.insertBatch).  Cause: java.lang.reflect.InvocationTargetException
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy110.insertBatch(Unknown Source)
	at com.jeesite.modules.app.web.AirPharmacyController.getasd(AirPharmacyController.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.b.doFilterInternal(ks:41)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:806)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.builder.BuilderException: Error invoking SqlProvider method (com.jeesite.common.mybatis.mapper.provider.InsertSqlProvider.insertBatch).  Cause: java.lang.reflect.InvocationTargetException
	at org.apache.ibatis.builder.annotation.ProviderSqlSource.createSqlSource(ProviderSqlSource.java:134)
	at org.apache.ibatis.builder.annotation.ProviderSqlSource.getBoundSql(ProviderSqlSource.java:102)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:558)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)
	at com.jeesite.common.mybatis.interceptor.K.b(dz:134)
	at com.jeesite.common.mybatis.interceptor.DataSourceInterceptor.intercept(dz:148)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy184.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 65 common frames omitted
Caused by: java.lang.reflect.InvocationTargetException: null
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.builder.annotation.ProviderSqlSource.invokeProviderMethod(ProviderSqlSource.java:167)
	at org.apache.ibatis.builder.annotation.ProviderSqlSource.createSqlSource(ProviderSqlSource.java:116)
	... 90 common frames omitted
Caused by: java.lang.IllegalArgumentException: 没有需要插入的实体集合
	at org.springframework.util.Assert.notEmpty(Assert.java:450)
	at com.jeesite.common.mybatis.mapper.provider.InsertSqlProvider.insertBatch(sp:36)
	at com.jeesite.common.mybatis.mapper.provider.InsertSqlProvider.insertBatch(sp:61)
	... 96 common frames omitted

2019-07-08 16:29:53.248 INFO  24372 [           main] [com.jeesite.modules.Application        ] - Starting Application on DESKTOP-FVHI4E5 with PID 24372 (E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\webapp\WEB-INF\classes started by 1111111 in E:\gitlabHome\HaoLangZhongProject\HaoLangZhong)
2019-07-08 16:29:53.252 DEBUG 24372 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
2019-07-08 16:29:53.252 INFO  24372 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2019-07-08 16:29:55.563 INFO  24372 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2019-07-08 16:29:55.564 INFO  24372 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2019-07-08 16:29:56.303 INFO  24372 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/15040
2019-07-08 16:29:56.304 INFO  24372 [           main] [com.jeesite.common.config.Global       ] - user.dir: E:/gitlabHome/HaoLangZhongProject/HaoLangZhong
2019-07-08 16:29:56.304 INFO  24372 [           main] [com.jeesite.common.config.Global       ] - logPath: E:/gitlabHome/HaoLangZhongProject/HaoLangZhong/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.1.3 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.1

    您当前的版本为社区版，官方网站：http://jeesite.com

    机器码是：6c59ab5175477606a72e1628bfd13f1a
    产品名称：JeeSite Demo
    公司名称：ThinkGem

===================================================================

2019-07-08 16:29:57.593 INFO  24372 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2019-07-08 16:29:59.453 DEBUG 24372 [           main] [c.j.common.datasource.RoutingDataSource] - Set default target data source success.
2019-07-08 16:30:05.836 DEBUG 24372 [           main] [com.jeesite.common.beetl.BeetlUtils    ] - Beetl config files: [classpath:/config/beetl-core.properties, classpath:/config/beetl.properties]
2019-07-08 16:30:06.106 DEBUG 24372 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.module_code AS "moduleCode", a.module_name AS "moduleName", a.description AS "description", a.main_class_name AS "mainClassName", a.current_version AS "currentVersion", a.upgrade_info AS "upgradeInfo" FROM js_sys_module a WHERE a.status = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2019-07-08 16:30:06.130 DEBUG 24372 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@d8751de] will not be managed by Spring
2019-07-08 16:30:06.142 DEBUG 24372 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.module_code AS "moduleCode", a.module_name AS "moduleName", a.description AS "description", a.main_class_name AS "mainClassName", a.current_version AS "currentVersion", a.upgrade_info AS "upgradeInfo" FROM js_sys_module a WHERE a.status = ? ORDER BY a.update_date DESC 
2019-07-08 16:30:06.172 DEBUG 24372 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2019-07-08 16:30:06.217 DEBUG 24372 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 2
2019-07-08 16:30:06.374 DEBUG 24372 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.user_code AS "userCode", a.login_code AS "loginCode", a.user_name AS "userName", a.password AS "password", a.email AS "email", a.mobile AS "mobile", a.phone AS "phone", a.sex AS "sex", a.avatar AS "avatar", a.sign AS "sign", a.wx_openid AS "wxOpenid", a.mobile_imei AS "mobileImei", a.user_type AS "userType", a.ref_code AS "refCode", a.ref_name AS "refName", a.mgr_type AS "mgrType", a.pwd_security_level AS "pwdSecurityLevel", a.pwd_update_date AS "pwdUpdateDate", a.pwd_update_record AS "pwdUpdateRecord", a.pwd_question AS "pwdQuestion", a.pwd_question_answer AS "pwdQuestionAnswer", a.pwd_question_2 AS "pwdQuestion2", a.pwd_question_answer_2 AS "pwdQuestionAnswer2", a.pwd_question_3 AS "pwdQuestion3", a.pwd_question_answer_3 AS "pwdQuestionAnswer3", a.pwd_quest_update_date AS "pwdQuestUpdateDate", a.last_login_ip AS "lastLoginIp", a.last_login_date AS "lastLoginDate", a.freeze_date AS "freezeDate", a.freeze_cause AS "freezeCause", a.user_weight AS "userWeight", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_user a WHERE a.`user_code` = #{userCode}
2019-07-08 16:30:06.376 DEBUG 24372 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@d8751de] will be managed by Spring
2019-07-08 16:30:06.376 DEBUG 24372 [           main] [com.jeesite.modules.sys.dao.UserDao.get] - ==>  Preparing: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.user_code AS "userCode", a.login_code AS "loginCode", a.user_name AS "userName", a.password AS "password", a.email AS "email", a.mobile AS "mobile", a.phone AS "phone", a.sex AS "sex", a.avatar AS "avatar", a.sign AS "sign", a.wx_openid AS "wxOpenid", a.mobile_imei AS "mobileImei", a.user_type AS "userType", a.ref_code AS "refCode", a.ref_name AS "refName", a.mgr_type AS "mgrType", a.pwd_security_level AS "pwdSecurityLevel", a.pwd_update_date AS "pwdUpdateDate", a.pwd_update_record AS "pwdUpdateRecord", a.pwd_question AS "pwdQuestion", a.pwd_question_answer AS "pwdQuestionAnswer", a.pwd_question_2 AS "pwdQuestion2", a.pwd_question_answer_2 AS "pwdQuestionAnswer2", a.pwd_question_3 AS "pwdQuestion3", a.pwd_question_answer_3 AS "pwdQuestionAnswer3", a.pwd_quest_update_date AS "pwdQuestUpdateDate", a.last_login_ip AS "lastLoginIp", a.last_login_date AS "lastLoginDate", a.freeze_date AS "freezeDate", a.freeze_cause AS "freezeCause", a.user_weight AS "userWeight", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_user a WHERE a.`user_code` = ? 
2019-07-08 16:30:06.377 DEBUG 24372 [           main] [com.jeesite.modules.sys.dao.UserDao.get] - ==> Parameters: system(String)
2019-07-08 16:30:06.407 DEBUG 24372 [           main] [com.jeesite.modules.sys.dao.UserDao.get] - <==      Total: 1
2019-07-08 16:30:06.461 DEBUG 24372 [           main] [c.j.m.s.dao.RoleDao.findListByUserCode ] - ==>  Preparing: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.role_code AS "roleCode", a.role_name AS "roleName", a.role_type AS "roleType", a.role_sort AS "roleSort", a.is_sys AS "isSys", a.user_type AS "userType", a.data_scope AS "dataScope" FROM js_sys_role a JOIN js_sys_user_role ur ON a.role_code = ur.role_code WHERE a.status = ? AND ur.user_code = ? ORDER BY a.role_sort ASC 
2019-07-08 16:30:06.462 DEBUG 24372 [           main] [c.j.m.s.dao.RoleDao.findListByUserCode ] - ==> Parameters: 0(String), system(String)
2019-07-08 16:30:06.486 DEBUG 24372 [           main] [c.j.m.s.dao.RoleDao.findListByUserCode ] - <==      Total: 0
2019-07-08 16:30:06.529 DEBUG 24372 [           main] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 244毫秒: UPDATE js_sys_menu SET `status` = #{param1.status}, `update_by` = #{param1.updateBy}, `update_date` = #{param1.updateDate} WHERE status != #{param2.STATUS_DELETE} AND module_codes LIKE #{param2.sqlMap.where#module_codes#LIKE1}
2019-07-08 16:30:06.530 DEBUG 24372 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - ==>  Preparing: UPDATE js_sys_menu SET `status` = ?, `update_by` = ?, `update_date` = ? WHERE status != ? AND module_codes LIKE ? 
2019-07-08 16:30:06.532 DEBUG 24372 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - ==> Parameters: 2(String), system(String), 2019-07-08 16:30:06.528(Timestamp), 1(String), %cms%(String)
2019-07-08 16:30:06.580 DEBUG 24372 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - <==    Updates: 7
2019-07-08 16:30:06.691 DEBUG 24372 [           main] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 2毫秒: UPDATE js_sys_menu SET `status` = #{param1.status}, `update_by` = #{param1.updateBy}, `update_date` = #{param1.updateDate} WHERE status != #{param2.STATUS_DELETE} AND module_codes LIKE #{param2.sqlMap.where#module_codes#LIKE1}
2019-07-08 16:30:06.691 DEBUG 24372 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@d8751de] will be managed by Spring
2019-07-08 16:30:06.692 DEBUG 24372 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - ==>  Preparing: UPDATE js_sys_menu SET `status` = ?, `update_by` = ?, `update_date` = ? WHERE status != ? AND module_codes LIKE ? 
2019-07-08 16:30:06.692 DEBUG 24372 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - ==> Parameters: 0(String), system(String), 2019-07-08 16:30:06.691(Timestamp), 1(String), %core%(String)
2019-07-08 16:30:06.741 DEBUG 24372 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - <==    Updates: 70
2019-07-08 16:30:08.731 INFO  24372 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8980 (http) with context path '/js'
2019-07-08 16:30:08.735 INFO  24372 [           main] [com.jeesite.modules.Application        ] - Started Application in 16.255 seconds (JVM running for 17.074)
2019-07-08 16:30:46.737 DEBUG 24372 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.id AS "id", a.config_name AS "configName", a.config_key AS "configKey", a.config_value AS "configValue", a.is_sys AS "isSys", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_sys_config a ORDER BY a.config_key
2019-07-08 16:30:46.739 DEBUG 24372 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@d8751de] will not be managed by Spring
2019-07-08 16:30:46.739 DEBUG 24372 [nio-8980-exec-2] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.id AS "id", a.config_name AS "configName", a.config_key AS "configKey", a.config_value AS "configValue", a.is_sys AS "isSys", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_sys_config a ORDER BY a.config_key 
2019-07-08 16:30:46.740 DEBUG 24372 [nio-8980-exec-2] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2019-07-08 16:30:46.772 DEBUG 24372 [nio-8980-exec-2] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2019-07-08 16:31:02.855 ERROR 24372 [nio-8980-exec-3] [o.a.c.c.C.[.[.[/js].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [/js] threw exception [Request processing failed; nested exception is org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error invoking SqlProvider method (com.jeesite.common.mybatis.mapper.provider.InsertSqlProvider.insertBatch).  Cause: java.lang.reflect.InvocationTargetException] with root cause

java.lang.IllegalArgumentException: 没有需要插入的实体集合
	at org.springframework.util.Assert.notEmpty(Assert.java:450)
	at com.jeesite.common.mybatis.mapper.provider.InsertSqlProvider.insertBatch(sp:36)
	at com.jeesite.common.mybatis.mapper.provider.InsertSqlProvider.insertBatch(sp:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.builder.annotation.ProviderSqlSource.invokeProviderMethod(ProviderSqlSource.java:167)
	at org.apache.ibatis.builder.annotation.ProviderSqlSource.createSqlSource(ProviderSqlSource.java:116)
	at org.apache.ibatis.builder.annotation.ProviderSqlSource.getBoundSql(ProviderSqlSource.java:102)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:558)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)
	at com.jeesite.common.mybatis.interceptor.K.b(dz:134)
	at com.jeesite.common.mybatis.interceptor.DataSourceInterceptor.intercept(dz:148)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy184.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy110.insertBatch(Unknown Source)
	at com.jeesite.modules.app.web.AirPharmacyController.getasd(AirPharmacyController.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.b.doFilterInternal(ks:41)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:806)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2019-07-08 16:31:03.111 ERROR 24372 [nio-8980-exec-3] [error/500                              ] - nested exception is org.apache.ibatis.builder.BuilderException: Error invoking SqlProvider method (com.jeesite.common.mybatis.mapper.provider.InsertSqlProvider.insertBatch).  Cause: java.lang.reflect.InvocationTargetException

org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error invoking SqlProvider method (com.jeesite.common.mybatis.mapper.provider.InsertSqlProvider.insertBatch).  Cause: java.lang.reflect.InvocationTargetException
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy110.insertBatch(Unknown Source)
	at com.jeesite.modules.app.web.AirPharmacyController.getasd(AirPharmacyController.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.b.doFilterInternal(ks:41)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:806)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.builder.BuilderException: Error invoking SqlProvider method (com.jeesite.common.mybatis.mapper.provider.InsertSqlProvider.insertBatch).  Cause: java.lang.reflect.InvocationTargetException
	at org.apache.ibatis.builder.annotation.ProviderSqlSource.createSqlSource(ProviderSqlSource.java:134)
	at org.apache.ibatis.builder.annotation.ProviderSqlSource.getBoundSql(ProviderSqlSource.java:102)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:558)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)
	at com.jeesite.common.mybatis.interceptor.K.b(dz:134)
	at com.jeesite.common.mybatis.interceptor.DataSourceInterceptor.intercept(dz:148)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy184.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 65 common frames omitted
Caused by: java.lang.reflect.InvocationTargetException: null
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.builder.annotation.ProviderSqlSource.invokeProviderMethod(ProviderSqlSource.java:167)
	at org.apache.ibatis.builder.annotation.ProviderSqlSource.createSqlSource(ProviderSqlSource.java:116)
	... 90 common frames omitted
Caused by: java.lang.IllegalArgumentException: 没有需要插入的实体集合
	at org.springframework.util.Assert.notEmpty(Assert.java:450)
	at com.jeesite.common.mybatis.mapper.provider.InsertSqlProvider.insertBatch(sp:36)
	at com.jeesite.common.mybatis.mapper.provider.InsertSqlProvider.insertBatch(sp:61)
	... 96 common frames omitted

2019-07-08 16:31:48.020 INFO  23976 [           main] [com.jeesite.modules.Application        ] - Starting Application on DESKTOP-FVHI4E5 with PID 23976 (E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\webapp\WEB-INF\classes started by 1111111 in E:\gitlabHome\HaoLangZhongProject\HaoLangZhong)
2019-07-08 16:31:48.024 DEBUG 23976 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
2019-07-08 16:31:48.025 INFO  23976 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2019-07-08 16:31:50.197 INFO  23976 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2019-07-08 16:31:50.198 INFO  23976 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2019-07-08 16:31:50.799 INFO  23976 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/15040
2019-07-08 16:31:50.800 INFO  23976 [           main] [com.jeesite.common.config.Global       ] - user.dir: E:/gitlabHome/HaoLangZhongProject/HaoLangZhong
2019-07-08 16:31:50.800 INFO  23976 [           main] [com.jeesite.common.config.Global       ] - logPath: E:/gitlabHome/HaoLangZhongProject/HaoLangZhong/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.1.3 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.1

    您当前的版本为社区版，官方网站：http://jeesite.com

    机器码是：6c59ab5175477606a72e1628bfd13f1a
    产品名称：JeeSite Demo
    公司名称：ThinkGem

===================================================================

2019-07-08 16:31:52.033 INFO  23976 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2019-07-08 16:31:53.144 DEBUG 23976 [           main] [c.j.common.datasource.RoutingDataSource] - Set default target data source success.
2019-07-08 16:31:59.654 DEBUG 23976 [           main] [com.jeesite.common.beetl.BeetlUtils    ] - Beetl config files: [classpath:/config/beetl-core.properties, classpath:/config/beetl.properties]
2019-07-08 16:31:59.933 DEBUG 23976 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.module_code AS "moduleCode", a.module_name AS "moduleName", a.description AS "description", a.main_class_name AS "mainClassName", a.current_version AS "currentVersion", a.upgrade_info AS "upgradeInfo" FROM js_sys_module a WHERE a.status = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2019-07-08 16:31:59.956 DEBUG 23976 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@682482ee] will not be managed by Spring
2019-07-08 16:31:59.968 DEBUG 23976 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.module_code AS "moduleCode", a.module_name AS "moduleName", a.description AS "description", a.main_class_name AS "mainClassName", a.current_version AS "currentVersion", a.upgrade_info AS "upgradeInfo" FROM js_sys_module a WHERE a.status = ? ORDER BY a.update_date DESC 
2019-07-08 16:31:59.993 DEBUG 23976 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2019-07-08 16:32:00.039 DEBUG 23976 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 2
2019-07-08 16:32:00.168 DEBUG 23976 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.user_code AS "userCode", a.login_code AS "loginCode", a.user_name AS "userName", a.password AS "password", a.email AS "email", a.mobile AS "mobile", a.phone AS "phone", a.sex AS "sex", a.avatar AS "avatar", a.sign AS "sign", a.wx_openid AS "wxOpenid", a.mobile_imei AS "mobileImei", a.user_type AS "userType", a.ref_code AS "refCode", a.ref_name AS "refName", a.mgr_type AS "mgrType", a.pwd_security_level AS "pwdSecurityLevel", a.pwd_update_date AS "pwdUpdateDate", a.pwd_update_record AS "pwdUpdateRecord", a.pwd_question AS "pwdQuestion", a.pwd_question_answer AS "pwdQuestionAnswer", a.pwd_question_2 AS "pwdQuestion2", a.pwd_question_answer_2 AS "pwdQuestionAnswer2", a.pwd_question_3 AS "pwdQuestion3", a.pwd_question_answer_3 AS "pwdQuestionAnswer3", a.pwd_quest_update_date AS "pwdQuestUpdateDate", a.last_login_ip AS "lastLoginIp", a.last_login_date AS "lastLoginDate", a.freeze_date AS "freezeDate", a.freeze_cause AS "freezeCause", a.user_weight AS "userWeight", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_user a WHERE a.`user_code` = #{userCode}
2019-07-08 16:32:00.170 DEBUG 23976 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@682482ee] will be managed by Spring
2019-07-08 16:32:00.171 DEBUG 23976 [           main] [com.jeesite.modules.sys.dao.UserDao.get] - ==>  Preparing: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.user_code AS "userCode", a.login_code AS "loginCode", a.user_name AS "userName", a.password AS "password", a.email AS "email", a.mobile AS "mobile", a.phone AS "phone", a.sex AS "sex", a.avatar AS "avatar", a.sign AS "sign", a.wx_openid AS "wxOpenid", a.mobile_imei AS "mobileImei", a.user_type AS "userType", a.ref_code AS "refCode", a.ref_name AS "refName", a.mgr_type AS "mgrType", a.pwd_security_level AS "pwdSecurityLevel", a.pwd_update_date AS "pwdUpdateDate", a.pwd_update_record AS "pwdUpdateRecord", a.pwd_question AS "pwdQuestion", a.pwd_question_answer AS "pwdQuestionAnswer", a.pwd_question_2 AS "pwdQuestion2", a.pwd_question_answer_2 AS "pwdQuestionAnswer2", a.pwd_question_3 AS "pwdQuestion3", a.pwd_question_answer_3 AS "pwdQuestionAnswer3", a.pwd_quest_update_date AS "pwdQuestUpdateDate", a.last_login_ip AS "lastLoginIp", a.last_login_date AS "lastLoginDate", a.freeze_date AS "freezeDate", a.freeze_cause AS "freezeCause", a.user_weight AS "userWeight", a.extend_s1 AS "extend.extendS1", a.extend_s2 AS "extend.extendS2", a.extend_s3 AS "extend.extendS3", a.extend_s4 AS "extend.extendS4", a.extend_s5 AS "extend.extendS5", a.extend_s6 AS "extend.extendS6", a.extend_s7 AS "extend.extendS7", a.extend_s8 AS "extend.extendS8", a.extend_i1 AS "extend.extendI1", a.extend_i2 AS "extend.extendI2", a.extend_i3 AS "extend.extendI3", a.extend_i4 AS "extend.extendI4", a.extend_f1 AS "extend.extendF1", a.extend_f2 AS "extend.extendF2", a.extend_f3 AS "extend.extendF3", a.extend_f4 AS "extend.extendF4", a.extend_d1 AS "extend.extendD1", a.extend_d2 AS "extend.extendD2", a.extend_d3 AS "extend.extendD3", a.extend_d4 AS "extend.extendD4" FROM js_sys_user a WHERE a.`user_code` = ? 
2019-07-08 16:32:00.171 DEBUG 23976 [           main] [com.jeesite.modules.sys.dao.UserDao.get] - ==> Parameters: system(String)
2019-07-08 16:32:00.201 DEBUG 23976 [           main] [com.jeesite.modules.sys.dao.UserDao.get] - <==      Total: 1
2019-07-08 16:32:00.245 DEBUG 23976 [           main] [c.j.m.s.dao.RoleDao.findListByUserCode ] - ==>  Preparing: SELECT a.corp_code AS "corpCode", a.corp_name AS "corpName", a.status AS "status", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks", a.role_code AS "roleCode", a.role_name AS "roleName", a.role_type AS "roleType", a.role_sort AS "roleSort", a.is_sys AS "isSys", a.user_type AS "userType", a.data_scope AS "dataScope" FROM js_sys_role a JOIN js_sys_user_role ur ON a.role_code = ur.role_code WHERE a.status = ? AND ur.user_code = ? ORDER BY a.role_sort ASC 
2019-07-08 16:32:00.245 DEBUG 23976 [           main] [c.j.m.s.dao.RoleDao.findListByUserCode ] - ==> Parameters: 0(String), system(String)
2019-07-08 16:32:00.269 DEBUG 23976 [           main] [c.j.m.s.dao.RoleDao.findListByUserCode ] - <==      Total: 0
2019-07-08 16:32:00.310 DEBUG 23976 [           main] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 203毫秒: UPDATE js_sys_menu SET `status` = #{param1.status}, `update_by` = #{param1.updateBy}, `update_date` = #{param1.updateDate} WHERE status != #{param2.STATUS_DELETE} AND module_codes LIKE #{param2.sqlMap.where#module_codes#LIKE1}
2019-07-08 16:32:00.310 DEBUG 23976 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - ==>  Preparing: UPDATE js_sys_menu SET `status` = ?, `update_by` = ?, `update_date` = ? WHERE status != ? AND module_codes LIKE ? 
2019-07-08 16:32:00.312 DEBUG 23976 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - ==> Parameters: 2(String), system(String), 2019-07-08 16:32:00.309(Timestamp), 1(String), %cms%(String)
2019-07-08 16:32:00.360 DEBUG 23976 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - <==    Updates: 7
2019-07-08 16:32:00.472 DEBUG 23976 [           main] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 3毫秒: UPDATE js_sys_menu SET `status` = #{param1.status}, `update_by` = #{param1.updateBy}, `update_date` = #{param1.updateDate} WHERE status != #{param2.STATUS_DELETE} AND module_codes LIKE #{param2.sqlMap.where#module_codes#LIKE1}
2019-07-08 16:32:00.473 DEBUG 23976 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@682482ee] will be managed by Spring
2019-07-08 16:32:00.473 DEBUG 23976 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - ==>  Preparing: UPDATE js_sys_menu SET `status` = ?, `update_by` = ?, `update_date` = ? WHERE status != ? AND module_codes LIKE ? 
2019-07-08 16:32:00.474 DEBUG 23976 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - ==> Parameters: 0(String), system(String), 2019-07-08 16:32:00.472(Timestamp), 1(String), %core%(String)
2019-07-08 16:32:00.523 DEBUG 23976 [           main] [c.j.m.s.d.MenuDao.updateStatusByEntity ] - <==    Updates: 70
2019-07-08 16:32:02.434 INFO  23976 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8980 (http) with context path '/js'
2019-07-08 16:32:02.437 INFO  23976 [           main] [com.jeesite.modules.Application        ] - Started Application in 15.173 seconds (JVM running for 15.906)
2019-07-08 16:32:46.764 DEBUG 23976 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.id AS "id", a.config_name AS "configName", a.config_key AS "configKey", a.config_value AS "configValue", a.is_sys AS "isSys", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_sys_config a ORDER BY a.config_key
2019-07-08 16:32:46.765 DEBUG 23976 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@682482ee] will not be managed by Spring
2019-07-08 16:32:46.765 DEBUG 23976 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.id AS "id", a.config_name AS "configName", a.config_key AS "configKey", a.config_value AS "configValue", a.is_sys AS "isSys", a.create_by AS "createBy", a.create_date AS "createDate", a.update_by AS "updateBy", a.update_date AS "updateDate", a.remarks AS "remarks" FROM js_sys_config a ORDER BY a.config_key 
2019-07-08 16:32:46.766 DEBUG 23976 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2019-07-08 16:32:46.800 DEBUG 23976 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2019-07-08 16:33:16.570 DEBUG 23976 [nio-8980-exec-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 191毫秒: INSERT INTO sys_doctor_label (`id`, `type`, `content`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`, `del_flag`) VALUES  (#{param1[0].id}, #{param1[0].type}, #{param1[0].content}, #{param1[0].createBy}, #{param1[0].createDate}, #{param1[0].updateBy}, #{param1[0].updateDate}, #{param1[0].remarks}, #{param1[0].delFlag}),  (#{param1[1].id}, #{param1[1].type}, #{param1[1].content}, #{param1[1].createBy}, #{param1[1].createDate}, #{param1[1].updateBy}, #{param1[1].updateDate}, #{param1[1].remarks}, #{param1[1].delFlag}),  (#{param1[2].id}, #{param1[2].type}, #{param1[2].content}, #{param1[2].createBy}, #{param1[2].createDate}, #{param1[2].updateBy}, #{param1[2].updateDate}, #{param1[2].remarks}, #{param1[2].delFlag}),  (#{param1[3].id}, #{param1[3].type}, #{param1[3].content}, #{param1[3].createBy}, #{param1[3].createDate}, #{param1[3].updateBy}, #{param1[3].updateDate}, #{param1[3].remarks}, #{param1[3].delFlag}),  (#{param1[4].id}, #{param1[4].type}, #{param1[4].content}, #{param1[4].createBy}, #{param1[4].createDate}, #{param1[4].updateBy}, #{param1[4].updateDate}, #{param1[4].remarks}, #{param1[4].delFlag}),  (#{param1[5].id}, #{param1[5].type}, #{param1[5].content}, #{param1[5].createBy}, #{param1[5].createDate}, #{param1[5].updateBy}, #{param1[5].updateDate}, #{param1[5].remarks}, #{param1[5].delFlag}),  (#{param1[6].id}, #{param1[6].type}, #{param1[6].content}, #{param1[6].createBy}, #{param1[6].createDate}, #{param1[6].updateBy}, #{param1[6].updateDate}, #{param1[6].remarks}, #{param1[6].delFlag}),  (#{param1[7].id}, #{param1[7].type}, #{param1[7].content}, #{param1[7].createBy}, #{param1[7].createDate}, #{param1[7].updateBy}, #{param1[7].updateDate}, #{param1[7].remarks}, #{param1[7].delFlag}),  (#{param1[8].id}, #{param1[8].type}, #{param1[8].content}, #{param1[8].createBy}, #{param1[8].createDate}, #{param1[8].updateBy}, #{param1[8].updateDate}, #{param1[8].remarks}, #{param1[8].delFlag}),  (#{param1[9].id}, #{param1[9].type}, #{param1[9].content}, #{param1[9].createBy}, #{param1[9].createDate}, #{param1[9].updateBy}, #{param1[9].updateDate}, #{param1[9].remarks}, #{param1[9].delFlag}),  (#{param1[10].id}, #{param1[10].type}, #{param1[10].content}, #{param1[10].createBy}, #{param1[10].createDate}, #{param1[10].updateBy}, #{param1[10].updateDate}, #{param1[10].remarks}, #{param1[10].delFlag}),  (#{param1[11].id}, #{param1[11].type}, #{param1[11].content}, #{param1[11].createBy}, #{param1[11].createDate}, #{param1[11].updateBy}, #{param1[11].updateDate}, #{param1[11].remarks}, #{param1[11].delFlag}),  (#{param1[12].id}, #{param1[12].type}, #{param1[12].content}, #{param1[12].createBy}, #{param1[12].createDate}, #{param1[12].updateBy}, #{param1[12].updateDate}, #{param1[12].remarks}, #{param1[12].delFlag}),  (#{param1[13].id}, #{param1[13].type}, #{param1[13].content}, #{param1[13].createBy}, #{param1[13].createDate}, #{param1[13].updateBy}, #{param1[13].updateDate}, #{param1[13].remarks}, #{param1[13].delFlag}),  (#{param1[14].id}, #{param1[14].type}, #{param1[14].content}, #{param1[14].createBy}, #{param1[14].createDate}, #{param1[14].updateBy}, #{param1[14].updateDate}, #{param1[14].remarks}, #{param1[14].delFlag}),  (#{param1[15].id}, #{param1[15].type}, #{param1[15].content}, #{param1[15].createBy}, #{param1[15].createDate}, #{param1[15].updateBy}, #{param1[15].updateDate}, #{param1[15].remarks}, #{param1[15].delFlag}),  (#{param1[16].id}, #{param1[16].type}, #{param1[16].content}, #{param1[16].createBy}, #{param1[16].createDate}, #{param1[16].updateBy}, #{param1[16].updateDate}, #{param1[16].remarks}, #{param1[16].delFlag}),  (#{param1[17].id}, #{param1[17].type}, #{param1[17].content}, #{param1[17].createBy}, #{param1[17].createDate}, #{param1[17].updateBy}, #{param1[17].updateDate}, #{param1[17].remarks}, #{param1[17].delFlag}),  (#{param1[18].id}, #{param1[18].type}, #{param1[18].content}, #{param1[18].createBy}, #{param1[18].createDate}, #{param1[18].updateBy}, #{param1[18].updateDate}, #{param1[18].remarks}, #{param1[18].delFlag}),  (#{param1[19].id}, #{param1[19].type}, #{param1[19].content}, #{param1[19].createBy}, #{param1[19].createDate}, #{param1[19].updateBy}, #{param1[19].updateDate}, #{param1[19].remarks}, #{param1[19].delFlag}),  (#{param1[20].id}, #{param1[20].type}, #{param1[20].content}, #{param1[20].createBy}, #{param1[20].createDate}, #{param1[20].updateBy}, #{param1[20].updateDate}, #{param1[20].remarks}, #{param1[20].delFlag}),  (#{param1[21].id}, #{param1[21].type}, #{param1[21].content}, #{param1[21].createBy}, #{param1[21].createDate}, #{param1[21].updateBy}, #{param1[21].updateDate}, #{param1[21].remarks}, #{param1[21].delFlag}),  (#{param1[22].id}, #{param1[22].type}, #{param1[22].content}, #{param1[22].createBy}, #{param1[22].createDate}, #{param1[22].updateBy}, #{param1[22].updateDate}, #{param1[22].remarks}, #{param1[22].delFlag}),  (#{param1[23].id}, #{param1[23].type}, #{param1[23].content}, #{param1[23].createBy}, #{param1[23].createDate}, #{param1[23].updateBy}, #{param1[23].updateDate}, #{param1[23].remarks}, #{param1[23].delFlag}),  (#{param1[24].id}, #{param1[24].type}, #{param1[24].content}, #{param1[24].createBy}, #{param1[24].createDate}, #{param1[24].updateBy}, #{param1[24].updateDate}, #{param1[24].remarks}, #{param1[24].delFlag}),  (#{param1[25].id}, #{param1[25].type}, #{param1[25].content}, #{param1[25].createBy}, #{param1[25].createDate}, #{param1[25].updateBy}, #{param1[25].updateDate}, #{param1[25].remarks}, #{param1[25].delFlag}),  (#{param1[26].id}, #{param1[26].type}, #{param1[26].content}, #{param1[26].createBy}, #{param1[26].createDate}, #{param1[26].updateBy}, #{param1[26].updateDate}, #{param1[26].remarks}, #{param1[26].delFlag}),  (#{param1[27].id}, #{param1[27].type}, #{param1[27].content}, #{param1[27].createBy}, #{param1[27].createDate}, #{param1[27].updateBy}, #{param1[27].updateDate}, #{param1[27].remarks}, #{param1[27].delFlag}),  (#{param1[28].id}, #{param1[28].type}, #{param1[28].content}, #{param1[28].createBy}, #{param1[28].createDate}, #{param1[28].updateBy}, #{param1[28].updateDate}, #{param1[28].remarks}, #{param1[28].delFlag}),  (#{param1[29].id}, #{param1[29].type}, #{param1[29].content}, #{param1[29].createBy}, #{param1[29].createDate}, #{param1[29].updateBy}, #{param1[29].updateDate}, #{param1[29].remarks}, #{param1[29].delFlag}),  (#{param1[30].id}, #{param1[30].type}, #{param1[30].content}, #{param1[30].createBy}, #{param1[30].createDate}, #{param1[30].updateBy}, #{param1[30].updateDate}, #{param1[30].remarks}, #{param1[30].delFlag}),  (#{param1[31].id}, #{param1[31].type}, #{param1[31].content}, #{param1[31].createBy}, #{param1[31].createDate}, #{param1[31].updateBy}, #{param1[31].updateDate}, #{param1[31].remarks}, #{param1[31].delFlag}),  (#{param1[32].id}, #{param1[32].type}, #{param1[32].content}, #{param1[32].createBy}, #{param1[32].createDate}, #{param1[32].updateBy}, #{param1[32].updateDate}, #{param1[32].remarks}, #{param1[32].delFlag}),  (#{param1[33].id}, #{param1[33].type}, #{param1[33].content}, #{param1[33].createBy}, #{param1[33].createDate}, #{param1[33].updateBy}, #{param1[33].updateDate}, #{param1[33].remarks}, #{param1[33].delFlag}),  (#{param1[34].id}, #{param1[34].type}, #{param1[34].content}, #{param1[34].createBy}, #{param1[34].createDate}, #{param1[34].updateBy}, #{param1[34].updateDate}, #{param1[34].remarks}, #{param1[34].delFlag}),  (#{param1[35].id}, #{param1[35].type}, #{param1[35].content}, #{param1[35].createBy}, #{param1[35].createDate}, #{param1[35].updateBy}, #{param1[35].updateDate}, #{param1[35].remarks}, #{param1[35].delFlag}),  (#{param1[36].id}, #{param1[36].type}, #{param1[36].content}, #{param1[36].createBy}, #{param1[36].createDate}, #{param1[36].updateBy}, #{param1[36].updateDate}, #{param1[36].remarks}, #{param1[36].delFlag}),  (#{param1[37].id}, #{param1[37].type}, #{param1[37].content}, #{param1[37].createBy}, #{param1[37].createDate}, #{param1[37].updateBy}, #{param1[37].updateDate}, #{param1[37].remarks}, #{param1[37].delFlag}),  (#{param1[38].id}, #{param1[38].type}, #{param1[38].content}, #{param1[38].createBy}, #{param1[38].createDate}, #{param1[38].updateBy}, #{param1[38].updateDate}, #{param1[38].remarks}, #{param1[38].delFlag}),  (#{param1[39].id}, #{param1[39].type}, #{param1[39].content}, #{param1[39].createBy}, #{param1[39].createDate}, #{param1[39].updateBy}, #{param1[39].updateDate}, #{param1[39].remarks}, #{param1[39].delFlag}),  (#{param1[40].id}, #{param1[40].type}, #{param1[40].content}, #{param1[40].createBy}, #{param1[40].createDate}, #{param1[40].updateBy}, #{param1[40].updateDate}, #{param1[40].remarks}, #{param1[40].delFlag}),  (#{param1[41].id}, #{param1[41].type}, #{param1[41].content}, #{param1[41].createBy}, #{param1[41].createDate}, #{param1[41].updateBy}, #{param1[41].updateDate}, #{param1[41].remarks}, #{param1[41].delFlag}),  (#{param1[42].id}, #{param1[42].type}, #{param1[42].content}, #{param1[42].createBy}, #{param1[42].createDate}, #{param1[42].updateBy}, #{param1[42].updateDate}, #{param1[42].remarks}, #{param1[42].delFlag}),  (#{param1[43].id}, #{param1[43].type}, #{param1[43].content}, #{param1[43].createBy}, #{param1[43].createDate}, #{param1[43].updateBy}, #{param1[43].updateDate}, #{param1[43].remarks}, #{param1[43].delFlag}),  (#{param1[44].id}, #{param1[44].type}, #{param1[44].content}, #{param1[44].createBy}, #{param1[44].createDate}, #{param1[44].updateBy}, #{param1[44].updateDate}, #{param1[44].remarks}, #{param1[44].delFlag}),  (#{param1[45].id}, #{param1[45].type}, #{param1[45].content}, #{param1[45].createBy}, #{param1[45].createDate}, #{param1[45].updateBy}, #{param1[45].updateDate}, #{param1[45].remarks}, #{param1[45].delFlag}),  (#{param1[46].id}, #{param1[46].type}, #{param1[46].content}, #{param1[46].createBy}, #{param1[46].createDate}, #{param1[46].updateBy}, #{param1[46].updateDate}, #{param1[46].remarks}, #{param1[46].delFlag}),  (#{param1[47].id}, #{param1[47].type}, #{param1[47].content}, #{param1[47].createBy}, #{param1[47].createDate}, #{param1[47].updateBy}, #{param1[47].updateDate}, #{param1[47].remarks}, #{param1[47].delFlag}),  (#{param1[48].id}, #{param1[48].type}, #{param1[48].content}, #{param1[48].createBy}, #{param1[48].createDate}, #{param1[48].updateBy}, #{param1[48].updateDate}, #{param1[48].remarks}, #{param1[48].delFlag}),  (#{param1[49].id}, #{param1[49].type}, #{param1[49].content}, #{param1[49].createBy}, #{param1[49].createDate}, #{param1[49].updateBy}, #{param1[49].updateDate}, #{param1[49].remarks}, #{param1[49].delFlag}),  (#{param1[50].id}, #{param1[50].type}, #{param1[50].content}, #{param1[50].createBy}, #{param1[50].createDate}, #{param1[50].updateBy}, #{param1[50].updateDate}, #{param1[50].remarks}, #{param1[50].delFlag}),  (#{param1[51].id}, #{param1[51].type}, #{param1[51].content}, #{param1[51].createBy}, #{param1[51].createDate}, #{param1[51].updateBy}, #{param1[51].updateDate}, #{param1[51].remarks}, #{param1[51].delFlag}),  (#{param1[52].id}, #{param1[52].type}, #{param1[52].content}, #{param1[52].createBy}, #{param1[52].createDate}, #{param1[52].updateBy}, #{param1[52].updateDate}, #{param1[52].remarks}, #{param1[52].delFlag}),  (#{param1[53].id}, #{param1[53].type}, #{param1[53].content}, #{param1[53].createBy}, #{param1[53].createDate}, #{param1[53].updateBy}, #{param1[53].updateDate}, #{param1[53].remarks}, #{param1[53].delFlag}),  (#{param1[54].id}, #{param1[54].type}, #{param1[54].content}, #{param1[54].createBy}, #{param1[54].createDate}, #{param1[54].updateBy}, #{param1[54].updateDate}, #{param1[54].remarks}, #{param1[54].delFlag}),  (#{param1[55].id}, #{param1[55].type}, #{param1[55].content}, #{param1[55].createBy}, #{param1[55].createDate}, #{param1[55].updateBy}, #{param1[55].updateDate}, #{param1[55].remarks}, #{param1[55].delFlag}),  (#{param1[56].id}, #{param1[56].type}, #{param1[56].content}, #{param1[56].createBy}, #{param1[56].createDate}, #{param1[56].updateBy}, #{param1[56].updateDate}, #{param1[56].remarks}, #{param1[56].delFlag}),  (#{param1[57].id}, #{param1[57].type}, #{param1[57].content}, #{param1[57].createBy}, #{param1[57].createDate}, #{param1[57].updateBy}, #{param1[57].updateDate}, #{param1[57].remarks}, #{param1[57].delFlag}),  (#{param1[58].id}, #{param1[58].type}, #{param1[58].content}, #{param1[58].createBy}, #{param1[58].createDate}, #{param1[58].updateBy}, #{param1[58].updateDate}, #{param1[58].remarks}, #{param1[58].delFlag}),  (#{param1[59].id}, #{param1[59].type}, #{param1[59].content}, #{param1[59].createBy}, #{param1[59].createDate}, #{param1[59].updateBy}, #{param1[59].updateDate}, #{param1[59].remarks}, #{param1[59].delFlag}),  (#{param1[60].id}, #{param1[60].type}, #{param1[60].content}, #{param1[60].createBy}, #{param1[60].createDate}, #{param1[60].updateBy}, #{param1[60].updateDate}, #{param1[60].remarks}, #{param1[60].delFlag}),  (#{param1[61].id}, #{param1[61].type}, #{param1[61].content}, #{param1[61].createBy}, #{param1[61].createDate}, #{param1[61].updateBy}, #{param1[61].updateDate}, #{param1[61].remarks}, #{param1[61].delFlag}),  (#{param1[62].id}, #{param1[62].type}, #{param1[62].content}, #{param1[62].createBy}, #{param1[62].createDate}, #{param1[62].updateBy}, #{param1[62].updateDate}, #{param1[62].remarks}, #{param1[62].delFlag}),  (#{param1[63].id}, #{param1[63].type}, #{param1[63].content}, #{param1[63].createBy}, #{param1[63].createDate}, #{param1[63].updateBy}, #{param1[63].updateDate}, #{param1[63].remarks}, #{param1[63].delFlag}),  (#{param1[64].id}, #{param1[64].type}, #{param1[64].content}, #{param1[64].createBy}, #{param1[64].createDate}, #{param1[64].updateBy}, #{param1[64].updateDate}, #{param1[64].remarks}, #{param1[64].delFlag}),  (#{param1[65].id}, #{param1[65].type}, #{param1[65].content}, #{param1[65].createBy}, #{param1[65].createDate}, #{param1[65].updateBy}, #{param1[65].updateDate}, #{param1[65].remarks}, #{param1[65].delFlag}),  (#{param1[66].id}, #{param1[66].type}, #{param1[66].content}, #{param1[66].createBy}, #{param1[66].createDate}, #{param1[66].updateBy}, #{param1[66].updateDate}, #{param1[66].remarks}, #{param1[66].delFlag}),  (#{param1[67].id}, #{param1[67].type}, #{param1[67].content}, #{param1[67].createBy}, #{param1[67].createDate}, #{param1[67].updateBy}, #{param1[67].updateDate}, #{param1[67].remarks}, #{param1[67].delFlag}),  (#{param1[68].id}, #{param1[68].type}, #{param1[68].content}, #{param1[68].createBy}, #{param1[68].createDate}, #{param1[68].updateBy}, #{param1[68].updateDate}, #{param1[68].remarks}, #{param1[68].delFlag}),  (#{param1[69].id}, #{param1[69].type}, #{param1[69].content}, #{param1[69].createBy}, #{param1[69].createDate}, #{param1[69].updateBy}, #{param1[69].updateDate}, #{param1[69].remarks}, #{param1[69].delFlag}),  (#{param1[70].id}, #{param1[70].type}, #{param1[70].content}, #{param1[70].createBy}, #{param1[70].createDate}, #{param1[70].updateBy}, #{param1[70].updateDate}, #{param1[70].remarks}, #{param1[70].delFlag}),  (#{param1[71].id}, #{param1[71].type}, #{param1[71].content}, #{param1[71].createBy}, #{param1[71].createDate}, #{param1[71].updateBy}, #{param1[71].updateDate}, #{param1[71].remarks}, #{param1[71].delFlag}),  (#{param1[72].id}, #{param1[72].type}, #{param1[72].content}, #{param1[72].createBy}, #{param1[72].createDate}, #{param1[72].updateBy}, #{param1[72].updateDate}, #{param1[72].remarks}, #{param1[72].delFlag}),  (#{param1[73].id}, #{param1[73].type}, #{param1[73].content}, #{param1[73].createBy}, #{param1[73].createDate}, #{param1[73].updateBy}, #{param1[73].updateDate}, #{param1[73].remarks}, #{param1[73].delFlag}),  (#{param1[74].id}, #{param1[74].type}, #{param1[74].content}, #{param1[74].createBy}, #{param1[74].createDate}, #{param1[74].updateBy}, #{param1[74].updateDate}, #{param1[74].remarks}, #{param1[74].delFlag}),  (#{param1[75].id}, #{param1[75].type}, #{param1[75].content}, #{param1[75].createBy}, #{param1[75].createDate}, #{param1[75].updateBy}, #{param1[75].updateDate}, #{param1[75].remarks}, #{param1[75].delFlag}),  (#{param1[76].id}, #{param1[76].type}, #{param1[76].content}, #{param1[76].createBy}, #{param1[76].createDate}, #{param1[76].updateBy}, #{param1[76].updateDate}, #{param1[76].remarks}, #{param1[76].delFlag}),  (#{param1[77].id}, #{param1[77].type}, #{param1[77].content}, #{param1[77].createBy}, #{param1[77].createDate}, #{param1[77].updateBy}, #{param1[77].updateDate}, #{param1[77].remarks}, #{param1[77].delFlag}),  (#{param1[78].id}, #{param1[78].type}, #{param1[78].content}, #{param1[78].createBy}, #{param1[78].createDate}, #{param1[78].updateBy}, #{param1[78].updateDate}, #{param1[78].remarks}, #{param1[78].delFlag}),  (#{param1[79].id}, #{param1[79].type}, #{param1[79].content}, #{param1[79].createBy}, #{param1[79].createDate}, #{param1[79].updateBy}, #{param1[79].updateDate}, #{param1[79].remarks}, #{param1[79].delFlag}),  (#{param1[80].id}, #{param1[80].type}, #{param1[80].content}, #{param1[80].createBy}, #{param1[80].createDate}, #{param1[80].updateBy}, #{param1[80].updateDate}, #{param1[80].remarks}, #{param1[80].delFlag}),  (#{param1[81].id}, #{param1[81].type}, #{param1[81].content}, #{param1[81].createBy}, #{param1[81].createDate}, #{param1[81].updateBy}, #{param1[81].updateDate}, #{param1[81].remarks}, #{param1[81].delFlag}),  (#{param1[82].id}, #{param1[82].type}, #{param1[82].content}, #{param1[82].createBy}, #{param1[82].createDate}, #{param1[82].updateBy}, #{param1[82].updateDate}, #{param1[82].remarks}, #{param1[82].delFlag}),  (#{param1[83].id}, #{param1[83].type}, #{param1[83].content}, #{param1[83].createBy}, #{param1[83].createDate}, #{param1[83].updateBy}, #{param1[83].updateDate}, #{param1[83].remarks}, #{param1[83].delFlag}),  (#{param1[84].id}, #{param1[84].type}, #{param1[84].content}, #{param1[84].createBy}, #{param1[84].createDate}, #{param1[84].updateBy}, #{param1[84].updateDate}, #{param1[84].remarks}, #{param1[84].delFlag}),  (#{param1[85].id}, #{param1[85].type}, #{param1[85].content}, #{param1[85].createBy}, #{param1[85].createDate}, #{param1[85].updateBy}, #{param1[85].updateDate}, #{param1[85].remarks}, #{param1[85].delFlag}),  (#{param1[86].id}, #{param1[86].type}, #{param1[86].content}, #{param1[86].createBy}, #{param1[86].createDate}, #{param1[86].updateBy}, #{param1[86].updateDate}, #{param1[86].remarks}, #{param1[86].delFlag}),  (#{param1[87].id}, #{param1[87].type}, #{param1[87].content}, #{param1[87].createBy}, #{param1[87].createDate}, #{param1[87].updateBy}, #{param1[87].updateDate}, #{param1[87].remarks}, #{param1[87].delFlag}),  (#{param1[88].id}, #{param1[88].type}, #{param1[88].content}, #{param1[88].createBy}, #{param1[88].createDate}, #{param1[88].updateBy}, #{param1[88].updateDate}, #{param1[88].remarks}, #{param1[88].delFlag}),  (#{param1[89].id}, #{param1[89].type}, #{param1[89].content}, #{param1[89].createBy}, #{param1[89].createDate}, #{param1[89].updateBy}, #{param1[89].updateDate}, #{param1[89].remarks}, #{param1[89].delFlag}),  (#{param1[90].id}, #{param1[90].type}, #{param1[90].content}, #{param1[90].createBy}, #{param1[90].createDate}, #{param1[90].updateBy}, #{param1[90].updateDate}, #{param1[90].remarks}, #{param1[90].delFlag}),  (#{param1[91].id}, #{param1[91].type}, #{param1[91].content}, #{param1[91].createBy}, #{param1[91].createDate}, #{param1[91].updateBy}, #{param1[91].updateDate}, #{param1[91].remarks}, #{param1[91].delFlag}),  (#{param1[92].id}, #{param1[92].type}, #{param1[92].content}, #{param1[92].createBy}, #{param1[92].createDate}, #{param1[92].updateBy}, #{param1[92].updateDate}, #{param1[92].remarks}, #{param1[92].delFlag}),  (#{param1[93].id}, #{param1[93].type}, #{param1[93].content}, #{param1[93].createBy}, #{param1[93].createDate}, #{param1[93].updateBy}, #{param1[93].updateDate}, #{param1[93].remarks}, #{param1[93].delFlag}),  (#{param1[94].id}, #{param1[94].type}, #{param1[94].content}, #{param1[94].createBy}, #{param1[94].createDate}, #{param1[94].updateBy}, #{param1[94].updateDate}, #{param1[94].remarks}, #{param1[94].delFlag}),  (#{param1[95].id}, #{param1[95].type}, #{param1[95].content}, #{param1[95].createBy}, #{param1[95].createDate}, #{param1[95].updateBy}, #{param1[95].updateDate}, #{param1[95].remarks}, #{param1[95].delFlag}),  (#{param1[96].id}, #{param1[96].type}, #{param1[96].content}, #{param1[96].createBy}, #{param1[96].createDate}, #{param1[96].updateBy}, #{param1[96].updateDate}, #{param1[96].remarks}, #{param1[96].delFlag}),  (#{param1[97].id}, #{param1[97].type}, #{param1[97].content}, #{param1[97].createBy}, #{param1[97].createDate}, #{param1[97].updateBy}, #{param1[97].updateDate}, #{param1[97].remarks}, #{param1[97].delFlag}),  (#{param1[98].id}, #{param1[98].type}, #{param1[98].content}, #{param1[98].createBy}, #{param1[98].createDate}, #{param1[98].updateBy}, #{param1[98].updateDate}, #{param1[98].remarks}, #{param1[98].delFlag}),  (#{param1[99].id}, #{param1[99].type}, #{param1[99].content}, #{param1[99].createBy}, #{param1[99].createDate}, #{param1[99].updateBy}, #{param1[99].updateDate}, #{param1[99].remarks}, #{param1[99].delFlag}),  (#{param1[100].id}, #{param1[100].type}, #{param1[100].content}, #{param1[100].createBy}, #{param1[100].createDate}, #{param1[100].updateBy}, #{param1[100].updateDate}, #{param1[100].remarks}, #{param1[100].delFlag}),  (#{param1[101].id}, #{param1[101].type}, #{param1[101].content}, #{param1[101].createBy}, #{param1[101].createDate}, #{param1[101].updateBy}, #{param1[101].updateDate}, #{param1[101].remarks}, #{param1[101].delFlag})
2019-07-08 16:33:16.575 DEBUG 23976 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@682482ee] will not be managed by Spring
2019-07-08 16:33:16.576 DEBUG 23976 [nio-8980-exec-2] [c.j.m.a.dao.DoctorLabelDao.insertBatch ] - ==>  Preparing: INSERT INTO sys_doctor_label (`id`, `type`, `content`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`, `del_flag`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?, ?, ?) 
2019-07-08 16:33:16.600 DEBUG 23976 [nio-8980-exec-2] [c.j.m.a.dao.DoctorLabelDao.insertBatch ] - ==> Parameters: 1148148029207531520(String), 4(String), 头痛(String), system(String), 2019-07-08 16:33:16.441(Timestamp), system(String), 2019-07-08 16:33:16.561(Timestamp), null, 0(String), 1148148029471772672(String), 4(String), 感冒发烧(String), system(String), 2019-07-08 16:33:16.441(Timestamp), system(String), 2019-07-08 16:33:16.561(Timestamp), null, 0(String), 1148148029471772673(String), 4(String), 慢性鼻炎(String), system(String), 2019-07-08 16:33:16.442(Timestamp), system(String), 2019-07-08 16:33:16.561(Timestamp), null, 0(String), 1148148029475966976(String), 4(String), 鼻出血(String), system(String), 2019-07-08 16:33:16.443(Timestamp), system(String), 2019-07-08 16:33:16.561(Timestamp), null, 0(String), 1148148029480161280(String), 4(String), 咽喉肿痛(String), system(String), 2019-07-08 16:33:16.443(Timestamp), system(String), 2019-07-08 16:33:16.561(Timestamp), null, 0(String), 1148148029480161281(String), 4(String), 咳嗽(String), system(String), 2019-07-08 16:33:16.444(Timestamp), system(String), 2019-07-08 16:33:16.561(Timestamp), null, 0(String), 1148148029484355584(String), 4(String), 咯血(String), system(String), 2019-07-08 16:33:16.444(Timestamp), system(String), 2019-07-08 16:33:16.562(Timestamp), null, 0(String), 1148148029484355585(String), 4(String), 呼吸困难(String), system(String), 2019-07-08 16:33:16.445(Timestamp), system(String), 2019-07-08 16:33:16.562(Timestamp), null, 0(String), 1148148029488549888(String), 4(String), 哮喘(String), system(String), 2019-07-08 16:33:16.445(Timestamp), system(String), 2019-07-08 16:33:16.562(Timestamp), null, 0(String), 1148148029488549889(String), 4(String), 胸腔积液(String), system(String), 2019-07-08 16:33:16.446(Timestamp), system(String), 2019-07-08 16:33:16.562(Timestamp), null, 0(String), 1148148029492744192(String), 4(String), 胸痛(String), system(String), 2019-07-08 16:33:16.446(Timestamp), system(String), 2019-07-08 16:33:16.562(Timestamp), null, 0(String), 1148148029492744193(String), 4(String), 胸闷气短(String), system(String), 2019-07-08 16:33:16.447(Timestamp), system(String), 2019-07-08 16:33:16.562(Timestamp), null, 0(String), 1148148029496938496(String), 4(String), 心慌心悸(String), system(String), 2019-07-08 16:33:16.447(Timestamp), system(String), 2019-07-08 16:33:16.562(Timestamp), null, 0(String), 1148148029496938497(String), 4(String), 心率过快(String), system(String), 2019-07-08 16:33:16.448(Timestamp), system(String), 2019-07-08 16:33:16.562(Timestamp), null, 0(String), 1148148029501132800(String), 4(String), 红斑狼疮(String), system(String), 2019-07-08 16:33:16.448(Timestamp), system(String), 2019-07-08 16:33:16.562(Timestamp), null, 0(String), 1148148029505327104(String), 4(String), 过敏性紫癜(String), system(String), 2019-07-08 16:33:16.449(Timestamp), system(String), 2019-07-08 16:33:16.562(Timestamp), null, 0(String), 1148148029505327105(String), 4(String), 低血压(String), system(String), 2019-07-08 16:33:16.451(Timestamp), system(String), 2019-07-08 16:33:16.562(Timestamp), null, 0(String), 1148148029513715712(String), 4(String), 高血压(String), system(String), 2019-07-08 16:33:16.454(Timestamp), system(String), 2019-07-08 16:33:16.562(Timestamp), null, 0(String), 1148148029526298624(String), 4(String), 白血病(String), system(String), 2019-07-08 16:33:16.454(Timestamp), system(String), 2019-07-08 16:33:16.562(Timestamp), null, 0(String), 1148148029530492928(String), 4(String), 淋巴结节(String), system(String), 2019-07-08 16:33:16.455(Timestamp), system(String), 2019-07-08 16:33:16.562(Timestamp), null, 0(String), 1148148029530492929(String), 4(String), 晕厥眩晕(String), system(String), 2019-07-08 16:33:16.455(Timestamp), system(String), 2019-07-08 16:33:16.563(Timestamp), null, 0(String), 1148148029530492930(String), 4(String), 恶心呕吐(String), system(String), 2019-07-08 16:33:16.456(Timestamp), system(String), 2019-07-08 16:33:16.563(Timestamp), null, 0(String), 1148148029534687232(String), 4(String), 食欲不正(String), system(String), 2019-07-08 16:33:16.456(Timestamp), system(String), 2019-07-08 16:33:16.563(Timestamp), null, 0(String), 1148148029534687233(String), 4(String), 胃胀腹胀(String), system(String), 2019-07-08 16:33:16.456(Timestamp), system(String), 2019-07-08 16:33:16.563(Timestamp), null, 0(String), 1148148029534687234(String), 4(String), 腹泻(String), system(String), 2019-07-08 16:33:16.457(Timestamp), system(String), 2019-07-08 16:33:16.563(Timestamp), null, 0(String), 1148148029538881536(String), 4(String), 便秘(String), system(String), 2019-07-08 16:33:16.457(Timestamp), system(String), 2019-07-08 16:33:16.563(Timestamp), null, 0(String), 1148148029538881537(String), 4(String), 呕血(String), system(String), 2019-07-08 16:33:16.457(Timestamp), system(String), 2019-07-08 16:33:16.563(Timestamp), null, 0(String), 1148148029543075840(String), 4(String), 便血(String), system(String), 2019-07-08 16:33:16.458(Timestamp), system(String), 2019-07-08 16:33:16.563(Timestamp), null, 0(String), 1148148029543075841(String), 4(String), 腹痛(String), system(String), 2019-07-08 16:33:16.458(Timestamp), system(String), 2019-07-08 16:33:16.563(Timestamp), null, 0(String), 1148148029543075842(String), 4(String), 腹水(String), system(String), 2019-07-08 16:33:16.458(Timestamp), system(String), 2019-07-08 16:33:16.563(Timestamp), null, 0(String), 1148148029543075843(String), 4(String), 黄疸(String), system(String), 2019-07-08 16:33:16.459(Timestamp), system(String), 2019-07-08 16:33:16.563(Timestamp), null, 0(String), 1148148029547270144(String), 4(String), 高血脂(String), system(String), 2019-07-08 16:33:16.459(Timestamp), system(String), 2019-07-08 16:33:16.563(Timestamp), null, 0(String), 1148148029547270145(String), 4(String), 肝硬化(String), system(String), 2019-07-08 16:33:16.459(Timestamp), system(String), 2019-07-08 16:33:16.563(Timestamp), null, 0(String), 1148148029547270146(String), 4(String), 贫血(String), system(String), 2019-07-08 16:33:16.46(Timestamp), system(String), 2019-07-08 16:33:16.564(Timestamp), null, 0(String), 1148148029551464448(String), 4(String), 紫绀(String), system(String), 2019-07-08 16:33:16.46(Timestamp), system(String), 2019-07-08 16:33:16.564(Timestamp), null, 0(String), 1148148029551464449(String), 4(String), 身体水肿(String), system(String), 2019-07-08 16:33:16.46(Timestamp), system(String), 2019-07-08 16:33:16.564(Timestamp), null, 0(String), 1148148029551464450(String), 4(String), 高血糖(String), system(String), 2019-07-08 16:33:16.461(Timestamp), system(String), 2019-07-08 16:33:16.564(Timestamp), null, 0(String), 1148148029555658752(String), 4(String), 低血糖(String), system(String), 2019-07-08 16:33:16.461(Timestamp), system(String), 2019-07-08 16:33:16.564(Timestamp), null, 0(String), 1148148029555658753(String), 4(String), 肥胖症(String), system(String), 2019-07-08 16:33:16.461(Timestamp), system(String), 2019-07-08 16:33:16.564(Timestamp), null, 0(String), 1148148029555658754(String), 4(String), 消瘦症(String), system(String), 2019-07-08 16:33:16.462(Timestamp), system(String), 2019-07-08 16:33:16.564(Timestamp), null, 0(String), 1148148029559853056(String), 4(String), 尿频(String), system(String), 2019-07-08 16:33:16.462(Timestamp), system(String), 2019-07-08 16:33:16.564(Timestamp), null, 0(String), 1148148029559853057(String), 4(String), 蛋白尿(String), system(String), 2019-07-08 16:33:16.462(Timestamp), system(String), 2019-07-08 16:33:16.564(Timestamp), null, 0(String), 1148148029559853058(String), 4(String), 血尿(String), system(String), 2019-07-08 16:33:16.462(Timestamp), system(String), 2019-07-08 16:33:16.564(Timestamp), null, 0(String), 1148148029559853059(String), 4(String), 排尿困难(String), system(String), 2019-07-08 16:33:16.463(Timestamp), system(String), 2019-07-08 16:33:16.564(Timestamp), null, 0(String), 1148148029564047360(String), 4(String), 尿失禁(String), system(String), 2019-07-08 16:33:16.463(Timestamp), system(String), 2019-07-08 16:33:16.564(Timestamp), null, 0(String), 1148148029564047361(String), 4(String), 尿潴留(String), system(String), 2019-07-08 16:33:16.463(Timestamp), system(String), 2019-07-08 16:33:16.564(Timestamp), null, 0(String), 1148148029564047362(String), 4(String), 尿毒症(String), system(String), 2019-07-08 16:33:16.464(Timestamp), system(String), 2019-07-08 16:33:16.564(Timestamp), null, 0(String), 1148148029568241664(String), 4(String), 感觉障碍(String), system(String), 2019-07-08 16:33:16.464(Timestamp), system(String), 2019-07-08 16:33:16.565(Timestamp), null, 0(String), 1148148029568241665(String), 4(String), 意识障碍(String), system(String), 2019-07-08 16:33:16.464(Timestamp), system(String), 2019-07-08 16:33:16.565(Timestamp), null, 0(String), 1148148029568241666(String), 4(String), 失眠(String), system(String), 2019-07-08 16:33:16.464(Timestamp), system(String), 2019-07-08 16:33:16.565(Timestamp), null, 0(String), 1148148029568241667(String), 4(String), 失语症(String), system(String), 2019-07-08 16:33:16.465(Timestamp), system(String), 2019-07-08 16:33:16.565(Timestamp), null, 0(String), 1148148029572435968(String), 4(String), 抽搐(String), system(String), 2019-07-08 16:33:16.465(Timestamp), system(String), 2019-07-08 16:33:16.565(Timestamp), null, 0(String), 1148148029572435969(String), 4(String), 肌肉萎缩(String), system(String), 2019-07-08 16:33:16.465(Timestamp), system(String), 2019-07-08 16:33:16.565(Timestamp), null, 0(String), 1148148029572435970(String), 4(String), 中风偏瘫(String), system(String), 2019-07-08 16:33:16.465(Timestamp), system(String), 2019-07-08 16:33:16.565(Timestamp), null, 0(String), 1148148029572435971(String), 4(String), 抑郁症(String), system(String), 2019-07-08 16:33:16.466(Timestamp), system(String), 2019-07-08 16:33:16.565(Timestamp), null, 0(String), 1148148029576630272(String), 4(String), 老年痴呆(String), system(String), 2019-07-08 16:33:16.466(Timestamp), system(String), 2019-07-08 16:33:16.565(Timestamp), null, 0(String), 1148148029576630273(String), 4(String), 口眼干燥(String), system(String), 2019-07-08 16:33:16.466(Timestamp), system(String), 2019-07-08 16:33:16.565(Timestamp), null, 0(String), 1148148029576630274(String), 4(String), 红眼(String), system(String), 2019-07-08 16:33:16.466(Timestamp), system(String), 2019-07-08 16:33:16.565(Timestamp), null, 0(String), 1148148029576630275(String), 4(String), 虹视(String), system(String), 2019-07-08 16:33:16.467(Timestamp), system(String), 2019-07-08 16:33:16.565(Timestamp), null, 0(String), 1148148029580824576(String), 4(String), 复视(String), system(String), 2019-07-08 16:33:16.467(Timestamp), system(String), 2019-07-08 16:33:16.565(Timestamp), null, 0(String), 1148148029580824577(String), 4(String), 白内障(String), system(String), 2019-07-08 16:33:16.467(Timestamp), system(String), 2019-07-08 16:33:16.566(Timestamp), null, 0(String), 1148148029580824578(String), 4(String), 飞纹症(String), system(String), 2019-07-08 16:33:16.467(Timestamp), system(String), 2019-07-08 16:33:16.566(Timestamp), null, 0(String), 1148148029580824579(String), 4(String), 老花眼(String), system(String), 2019-07-08 16:33:16.468(Timestamp), system(String), 2019-07-08 16:33:16.566(Timestamp), null, 0(String), 1148148029585018880(String), 4(String), 近视眼(String), system(String), 2019-07-08 16:33:16.468(Timestamp), system(String), 2019-07-08 16:33:16.566(Timestamp), null, 0(String), 1148148029585018881(String), 4(String), 视觉障碍(String), system(String), 2019-07-08 16:33:16.468(Timestamp), system(String), 2019-07-08 16:33:16.566(Timestamp), null, 0(String), 1148148029585018882(String), 4(String), 眼痛畏光(String), system(String), 2019-07-08 16:33:16.468(Timestamp), system(String), 2019-07-08 16:33:16.566(Timestamp), null, 0(String), 1148148029585018883(String), 4(String), 泪液过多(String), system(String), 2019-07-08 16:33:16.469(Timestamp), system(String), 2019-07-08 16:33:16.566(Timestamp), null, 0(String), 1148148029589213184(String), 4(String), 打鼾(String), system(String), 2019-07-08 16:33:16.469(Timestamp), system(String), 2019-07-08 16:33:16.566(Timestamp), null, 0(String), 1148148029589213185(String), 4(String), 耳聋(String), system(String), 2019-07-08 16:33:16.469(Timestamp), system(String), 2019-07-08 16:33:16.566(Timestamp), null, 0(String), 1148148029589213186(String), 4(String), 耳鸣(String), system(String), 2019-07-08 16:33:16.47(Timestamp), system(String), 2019-07-08 16:33:16.566(Timestamp), null, 0(String), 1148148029593407488(String), 4(String), 脑鸣(String), system(String), 2019-07-08 16:33:16.47(Timestamp), system(String), 2019-07-08 16:33:16.566(Timestamp), null, 0(String), 1148148029593407489(String), 4(String), 嗅觉障碍(String), system(String), 2019-07-08 16:33:16.47(Timestamp), system(String), 2019-07-08 16:33:16.566(Timestamp), null, 0(String), 1148148029593407490(String), 4(String), 声音嘶哑(String), system(String), 2019-07-08 16:33:16.47(Timestamp), system(String), 2019-07-08 16:33:16.566(Timestamp), null, 0(String), 1148148029593407491(String), 4(String), 口臭(String), system(String), 2019-07-08 16:33:16.47(Timestamp), system(String), 2019-07-08 16:33:16.567(Timestamp), null, 0(String), 1148148029597601792(String), 4(String), 口腔溃疡(String), system(String), 2019-07-08 16:33:16.471(Timestamp), system(String), 2019-07-08 16:33:16.567(Timestamp), null, 0(String), 1148148029597601793(String), 4(String), 牙龈出血(String), system(String), 2019-07-08 16:33:16.471(Timestamp), system(String), 2019-07-08 16:33:16.567(Timestamp), null, 0(String), 1148148029597601794(String), 4(String), 牙痛(String), system(String), 2019-07-08 16:33:16.471(Timestamp), system(String), 2019-07-08 16:33:16.567(Timestamp), null, 0(String), 1148148029597601795(String), 4(String), 颈肩腰腿痛(String), system(String), 2019-07-08 16:33:16.471(Timestamp), system(String), 2019-07-08 16:33:16.567(Timestamp), null, 0(String), 1148148029597601796(String), 4(String), 关节痛(String), system(String), 2019-07-08 16:33:16.472(Timestamp), system(String), 2019-07-08 16:33:16.567(Timestamp), null, 0(String), 1148148029601796096(String), 4(String), 脚跟痛(String), system(String), 2019-07-08 16:33:16.472(Timestamp), system(String), 2019-07-08 16:33:16.567(Timestamp), null, 0(String), 1148148029601796097(String), 4(String), 网球肘(String), system(String), 2019-07-08 16:33:16.473(Timestamp), system(String), 2019-07-08 16:33:16.567(Timestamp), null, 0(String), 1148148029605990400(String), 4(String), 骨折(String), system(String), 2019-07-08 16:33:16.473(Timestamp), system(String), 2019-07-08 16:33:16.567(Timestamp), null, 0(String), 1148148029605990401(String), 4(String), 脱臼(String), system(String), 2019-07-08 16:33:16.473(Timestamp), system(String), 2019-07-08 16:33:16.567(Timestamp), null, 0(String), 1148148029610184704(String), 4(String), 股骨头坏死(String), system(String), 2019-07-08 16:33:16.474(Timestamp), system(String), 2019-07-08 16:33:16.567(Timestamp), null, 0(String), 1148148029610184705(String), 4(String), 风湿(String), system(String), 2019-07-08 16:33:16.474(Timestamp), system(String), 2019-07-08 16:33:16.567(Timestamp), null, 0(String), 1148148029610184706(String), 4(String), 痛风(String), system(String), 2019-07-08 16:33:16.474(Timestamp), system(String), 2019-07-08 16:33:16.567(Timestamp), null, 0(String), 1148148029610184707(String), 4(String), 痔疮(String), system(String), 2019-07-08 16:33:16.474(Timestamp), system(String), 2019-07-08 16:33:16.568(Timestamp), null, 0(String), 1148148029614379008(String), 4(String), 良性肿瘤(String), system(String), 2019-07-08 16:33:16.475(Timestamp), system(String), 2019-07-08 16:33:16.568(Timestamp), null, 0(String), 1148148029614379009(String), 4(String), 恶性肿瘤(String), system(String), 2019-07-08 16:33:16.475(Timestamp), system(String), 2019-07-08 16:33:16.568(Timestamp), null, 0(String), 1148148029614379010(String), 4(String), 月经不调(String), system(String), 2019-07-08 16:33:16.475(Timestamp), system(String), 2019-07-08 16:33:16.568(Timestamp), null, 0(String), 1148148029614379011(String), 4(String), 子宫肌瘤(String), system(String), 2019-07-08 16:33:16.475(Timestamp), system(String), 2019-07-08 16:33:16.568(Timestamp), null, 0(String), 1148148029614379012(String), 4(String), 乳腺增生(String), system(String), 2019-07-08 16:33:16.476(Timestamp), system(String), 2019-07-08 16:33:16.568(Timestamp), null, 0(String), 1148148029618573312(String), 4(String), 妇科炎症(String), system(String), 2019-07-08 16:33:16.476(Timestamp), system(String), 2019-07-08 16:33:16.568(Timestamp), null, 0(String), 1148148029618573313(String), 4(String), 不孕不育(String), system(String), 2019-07-08 16:33:16.476(Timestamp), system(String), 2019-07-08 16:33:16.568(Timestamp), null, 0(String), 1148148029618573314(String), 4(String), 阳痿早泄(String), system(String), 2019-07-08 16:33:16.476(Timestamp), system(String), 2019-07-08 16:33:16.568(Timestamp), null, 0(String), 1148148029618573315(String), 4(String), 皮肤病(String), system(String), 2019-07-08 16:33:16.477(Timestamp), system(String), 2019-07-08 16:33:16.568(Timestamp), null, 0(String), 1148148029622767616(String), 4(String), 性病(String), system(String), 2019-07-08 16:33:16.477(Timestamp), system(String), 2019-07-08 16:33:16.568(Timestamp), null, 0(String), 1148148029622767617(String), 4(String), 中医美容(String), system(String), 2019-07-08 16:33:16.477(Timestamp), system(String), 2019-07-08 16:33:16.568(Timestamp), null, 0(String), 1148148029622767618(String), 4(String), 徒手整形(String), system(String), 2019-07-08 16:33:16.477(Timestamp), system(String), 2019-07-08 16:33:16.569(Timestamp), null, 0(String), 1148148029622767619(String), 4(String), 小儿推拿(String), system(String), 2019-07-08 16:33:16.477(Timestamp), system(String), 2019-07-08 16:33:16.569(Timestamp), null, 0(String), 1148148029622767620(String), 4(String), 推拿按摩(String), system(String), 2019-07-08 16:33:16.478(Timestamp), system(String), 2019-07-08 16:33:16.569(Timestamp), null, 0(String), 1148148029626961920(String), 4(String), 养生保健(String), system(String), 2019-07-08 16:33:16.478(Timestamp), system(String), 2019-07-08 16:33:16.569(Timestamp), null, 0(String)
2019-07-08 16:33:16.680 DEBUG 23976 [nio-8980-exec-2] [c.j.m.a.dao.DoctorLabelDao.insertBatch ] - <==    Updates: 102
2019-07-08 16:38:14.894 DEBUG 23976 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@682482ee] will be managed by Spring
2019-07-08 16:38:14.895 DEBUG 23976 [nio-8980-exec-9] [c.j.m.a.dao.ArticleInfoDao.findOneById ] - ==>  Preparing: select * from sys_article_info where del_flag='0' and id=? 
2019-07-08 16:38:14.895 DEBUG 23976 [nio-8980-exec-9] [c.j.m.a.dao.ArticleInfoDao.findOneById ] - ==> Parameters: 1(String)
2019-07-08 16:38:14.924 DEBUG 23976 [nio-8980-exec-9] [c.j.m.a.dao.ArticleInfoDao.findOneById ] - <==      Total: 1
2019-07-08 16:38:16.124 DEBUG 23976 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@682482ee] will be managed by Spring
2019-07-08 16:38:16.124 DEBUG 23976 [io-8980-exec-10] [c.j.m.a.d.U.saveUserCollection!selectKey] - ==>  Preparing: select replace(uuid(),'-','') from dual 
2019-07-08 16:38:16.125 DEBUG 23976 [io-8980-exec-10] [c.j.m.a.d.U.saveUserCollection!selectKey] - ==> Parameters: 
2019-07-08 16:38:16.148 DEBUG 23976 [io-8980-exec-10] [c.j.m.a.d.U.saveUserCollection!selectKey] - <==      Total: 1
2019-07-08 16:38:16.149 DEBUG 23976 [io-8980-exec-10] [c.j.m.a.d.U.saveUserCollection         ] - ==>  Preparing: insert into sys_user_collection ( id, userid, collectionid, type, create_date, del_flag ) values ( ?, ?, ?, ?, ?, ? ) 
2019-07-08 16:38:16.150 DEBUG 23976 [io-8980-exec-10] [c.j.m.a.d.U.saveUserCollection         ] - ==> Parameters: bc437e74a15b11e9b780fa163e609e56(String), 123(String), 1(String), 3(String), 2019-07-08 16:38:16(String), 0(String)
2019-07-08 16:38:16.197 DEBUG 23976 [io-8980-exec-10] [c.j.m.a.d.U.saveUserCollection         ] - <==    Updates: 1
2019-07-08 16:38:23.184 DEBUG 23976 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@682482ee] will be managed by Spring
2019-07-08 16:38:23.186 DEBUG 23976 [nio-8980-exec-3] [c.j.m.a.d.U.saveUserCollection!selectKey] - ==>  Preparing: select replace(uuid(),'-','') from dual 
2019-07-08 16:38:23.187 DEBUG 23976 [nio-8980-exec-3] [c.j.m.a.d.U.saveUserCollection!selectKey] - ==> Parameters: 
2019-07-08 16:38:23.212 DEBUG 23976 [nio-8980-exec-3] [c.j.m.a.d.U.saveUserCollection!selectKey] - <==      Total: 1
2019-07-08 16:38:23.213 DEBUG 23976 [nio-8980-exec-3] [c.j.m.a.d.U.saveUserCollection         ] - ==>  Preparing: insert into sys_user_collection ( id, userid, collectionid, type, create_date, del_flag ) values ( ?, ?, ?, ?, ?, ? ) 
2019-07-08 16:38:23.213 DEBUG 23976 [nio-8980-exec-3] [c.j.m.a.d.U.saveUserCollection         ] - ==> Parameters: c07937c6a15b11e9b780fa163e609e56(String), 123(String), 1(String), 3(String), 2019-07-08 16:38:23(String), 0(String)
2019-07-08 16:38:23.260 DEBUG 23976 [nio-8980-exec-3] [c.j.m.a.d.U.saveUserCollection         ] - <==    Updates: 1
2019-07-08 17:27:56.459 INFO  3864 [           main] [com.jeesite.modules.Application        ] - Starting Application on DESKTOP-FVHI4E5 with PID 3864 (E:\gitlabHome\HaoLangZhongProject\HaoLangZhong\src\main\webapp\WEB-INF\classes started by 1111111 in E:\gitlabHome\HaoLangZhongProject\HaoLangZhong)
2019-07-08 17:27:56.463 DEBUG 3864 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.0.6.RELEASE, Spring v5.0.10.RELEASE
2019-07-08 17:27:56.464 INFO  3864 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
